/*
 * MsVideoConferenceSpec.java
 * 
 * @author Amit Baxi 
 */
package com.baypackets.ase.sbb;
import java.io.Serializable;
import java.util.ArrayList;
/**
 * The MsVideoConferenceSpec class defines the specification for a msml videolayout element as per RFC 5707.
 * This class provides methods for defining id, root size, regions selector and 
 * other attributes of videolayout element of msml. 
 * videolayout element can by child element of createconference or modifyconference.
 */
public class MsVideoConferenceSpec implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public static final String TYPE_TEXT_MSML_BASIC_LAYOUT="text/msml-basic-layout";
	public static final String FORMAT_QUAD_SPLIT = "quad-split";
	public static final String FORMAT_SIX_SPLIT = "6-split";
	
	private String id;// optional but for radisys ms mandatory
	private String type; // optional but for radisys ms mandatory
	private int layoutSize;
	private MsRootSpec rootSpec;
	private MsSelectorSpec selectorSpec;
	private ArrayList<MsRegionSpec> regionList = new ArrayList<MsRegionSpec>();
	
	// Radisys extension. Mandatory attribute 
	private String format;// Values - quad-split 6-split
	
	private int borderWidth;
	private String borderColor;
	private int activeBorderWidth;
	private String activeBorderColor;
	private int activeBorderSwitchingInterval;
	private int activeBorderThreshold;
	
	/**
	 * This method sets optional id attribute of videolayout element.
	 * @param id the id to set
	 */
	public void setId(String id) {
		this.id = id;
	}

	/**
	 * This method returns optional id attribute of videolayout element.
	 * @return the id
	 */
	public String getId() {
		return id;
	}
	
	/**
	 * This method sets optional type attribute of videolayout element.
	 * @param id the id to set
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * This method returns optional type attribute of videolayout element.
	 * @return the id
	 */
	public String getType() {
		return type;
	}
	
	/**
	 * This method sets size of layout of video layout.
	 * @return size of layout in integer
	 */
	public int getLayoutSize() {
		return layoutSize;
	}
	/**
	 * This method returns root spec of videolayout.
	 *@return size of root as String
	 */
	public MsRootSpec getRootSpec() {
		return rootSpec;
	}
	/**
	 * This method sets size of layout of video layout.Maximum value can be 16.
	 * @param layoutsize 
	 */
	public void setLayoutSize(int layoutSize) {
		if(layoutSize >= 1)
			this.layoutSize=Math.min(layoutSize, 16);
	}
	/**
	 * This method creates basic video layout with given root size and number of region in video layout.
	 * All regions will have equal size in screen and region id will start from 1 to no of Regions. Attributes
	 * top left and relative size will be generated by adaptor rest attributes will not be added.
	 */
	public void createDefaultVideoLayout(String rootSize,int numRegions)
	{
		this.setLayoutSize(numRegions);
		MsRootSpec rootSpec=new MsRootSpec();
		rootSpec.setRootSize(rootSize);
		this.setRootSpec(rootSpec);
	}
	/**
	 * This method sets root spec of videolayout.
	 * @param  String rootSize  e.g VGA QVGA CIF QCIF SQCIF
	 */
	public void setRootSpec(MsRootSpec rootSpec) {
		this.rootSpec = rootSpec;
	}
	/**
	 * This method adds a region spec for this videolayout in it's region spec list.
	 * @param msRegionSpec the regionList to add
	 */

	public void addRegion(MsRegionSpec msRegionSpec) {
		if (msRegionSpec != null) {
			this.regionList.add(msRegionSpec);
		}
	}

	/**
	 * This method sets a region spec list for this videolayout element.
	 * @param regionList the regionList to set
	 */
	public void setRegionList(ArrayList<MsRegionSpec> regionList) {
		if (regionList != null) {
			this.regionList = regionList;
		}
	}

	/**
	 * This method returns a region spec list for this videolayout element.
	 * @return the regionList
	 */
	public ArrayList<MsRegionSpec> getRegionList() {
		return this.regionList;
	}
	/**
	 * This method will clear region list of this videolayout element.
	 */
	public void clearRegionList(){
		this.regionList.clear();		
	}
	/**
	 * This method sets Selector Spec for this videolayout element.
	 * @param selectorSpec the selectorSpec to set
	 */
	public void setSelectorSpec(MsSelectorSpec selectorSpec) {
		this.selectorSpec = selectorSpec;
	}
	/**
	 * This method sets Selector Spec for this videolayout element.
	 * @return the selectorSpec
	 */
	public MsSelectorSpec getSelectorSpec() {
		return selectorSpec;
	}

	/**
	 * This method returns format attribute for the video layout element.
	 * Radisys extension. Mandatory attribute. Supported Values - "quad-split" "6-split".
	 * @return
	 */
	public String getFormat() {
		return format;
	}

	/**
	 * This method sets format attribute for the video layout element.
	 * Radisys extension. Mandatory attribute. Supported Values - "quad-split" "6-split".
	 * @param format
	 */
	public void setFormat(String format) {
		this.format = format;
	}

	public int getBorderWidth() {
		return borderWidth;
	}

	public void setBorderWidth(int borderWidth) {
		this.borderWidth = borderWidth;
	}

	public String getBorderColor() {
		return borderColor;
	}

	public void setBorderColor(String borderColor) {
		this.borderColor = borderColor;
	}

	public int getActiveBorderWidth() {
		return activeBorderWidth;
	}

	public void setActiveBorderWidth(int activeBorderWidth) {
		this.activeBorderWidth = activeBorderWidth;
	}

	public String getActiveBorderColor() {
		return activeBorderColor;
	}

	public void setActiveBorderColor(String activeBorderColor) {
		this.activeBorderColor = activeBorderColor;
	}

	public int getActiveBorderSwitchingInterval() {
		return activeBorderSwitchingInterval;
	}

	public void setActiveBorderSwitchingInterval(int activeBorderSwitchingInterval) {
		this.activeBorderSwitchingInterval = activeBorderSwitchingInterval;
	}

	public int getActiveBorderThreshold() {
		return activeBorderThreshold;
	}

	public void setActiveBorderThreshold(int activeBorderThreshold) {
		this.activeBorderThreshold = activeBorderThreshold;
	}

}