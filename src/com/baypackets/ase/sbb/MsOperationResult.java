/*
 * InteractionResult.java
 * 
 * Created on Jun 23, 2005
 */
package com.baypackets.ase.sbb;

import java.util.Iterator;

import com.baypackets.ase.msadaptor.MsAdaptor;

/**
 * The MsOperationResult interface defines an object that encapsulates the results of an RTP
 * interaction between a media server and network endpoint. These results
 * can include the digits collected from the endpoint's TUI, the user's voice
 * recording, and more, depending on the type of interaction that was initiated.
 * 
 * @see com.baypackets.ase.sbb.MsSessionController
 * @author BayPackets
 */
public interface MsOperationResult {
	
	/**
	 * This enum will be used to determine type of MsOPeration Result
	 * @author AGNITY\abaxi
	 *
	 */
	enum ResultTypeEnum{
		UNKNOWN,MSML,MSCML;
	}
	
	/**
	 * 
	 * 
	 */	
	public static final String MSML_Dialog_Events[] = new String[] {
		"app.done","event.dialog.exit", "msml.dialog.exit", "done", "pause", "resume",
		"toggle-state", "terminate", "retsart", "forward", "backward",
		"starttimer", "terminate.cancelled", "terminate.finalsilence",
		"nospeech", "softer", "louder", "mute", "unmute", "reset", "amt" };
	
	/**
	 * This attribute can be used to get name of msml event for which message received.
	 * If no event sent in INFO, the method returns NULL.
	 */
	
	public static final String MSML_EVENT_NAME = "MSML_EVENT_NAME".intern();
	
	/**
	 * This attribute can be used to get the duration of the message played in milliseconds.
	 * The attribute will return a String value of the duration. 
	 */
	public static final String PLAY_DURATION = "PLAY_DURATION".intern();
	
	/**
	 * This string is passed to the "getAttribute" method to return a String
	 * containing the digits that were collected by the media server during 
	 * the RTP interaction with the network endpoint.  If the interaction did 
	 * not involve a digit collection, the method returns NULL.
	 */
	public static final String COLLECTED_DIGITS = "COLLECTED_DIGITS".intern();
	
	/**
	 * This string is passed to the "getAttribute" method to return a String value
	 * indicating the length in milliseconds of the voice recording taken 
	 * by the media server during the RTP interaction with the network endpoint.
	 * If the interaction did not involve a voice recording, the method returns
	 * NULL. 
	 */
	public static final String RECORDING_LENGTH = "RECORDING_LENGTH".intern();
	
	/**
	 * This string is passed to the "getAttribute" method to return a ArrayList of 
	 * AuditConferenceResult objects generated by parsing xml received in 200Ok response
	 * of an INFO request containing an audit request sent to the media server.If no audit 
	 * request sent in INFo, the method returns NULL. 
	 */
	
	public static final String AUDIT_CONFERENCE_LIST = "AUDIT_CONFERENCE_LIST".intern();
	/**
	 * This value is returned by the "getStatus()" method to indicate that the
	 * digits entered by the user during a play/collect operation did not match
	 * the pattern specified in the request.
	 */
	public static final String STATUS_NO_DIGIT_MATCH = "NO_DIGIT_MATCH".intern(); 

	/**
	 * This value is returned by the "getStatus()" method to indicate that no 
	 * digits were entered by the user in the time period specified in the 
	 * play/collect request.
	 */
	public static final String STATUS_NO_DIGIT_INPUT = "NO_DIGIT_INPUT".intern();

	/**
	 * This value is returned by the "getStatus()" method to indicate that the
	 * play/collect operation timed out.
	 */
	public static final String STATUS_TIMED_OUT = "TIMED_OUT".intern();

	/**
	 * This value is returned by the "getStatus()" method to indicate that the
	 * media server interaction completed as specified in the operation request.
	 */
	public static final String STATUS_SUCCESS = "SUCCESS".intern();

	/**
	 * This value is returned by the "getStatus()" method to indicate that the
	 * media server operation was aported by user by pressing escape key while collection digits.
	 */
	public  static final String STATUS_ABORTED = "ABORTED".intern();
	
	/**
	 * This method returns a boolean value specifying if the RTP interaction
	 * initiated between the media server and network endpoint was completed
	 * succesfully.
	 * 
	 * @return True if the interaction was successful or False otherwise.
	 */
	public boolean isSuccessfull();

	/**
	 * This method returns a value indicating the result status of a media server
	 * operation.  The possible return values are specified by the following 
	 * public static constants defined in this interface:
	 * <br/>
	 * <ul>
	 *	<li>STATUS_NO_DIGIT_MATCH</li>
	 *	<li>STATUS_NO_DIGIT_INPUT</li>
	 *	<li>STATUS_TIMED_OUT</li>
	 *	<li>STATUS_SUCCESS</li>
	 * </ul>
	 */
	public String getStatus();
	
	/**
	 * This method returns the specified result attribute of the RTP 
	 * interaction between the media server and network endpoint.
	 * 
	 * @param name - The name of the result attribute to return.
	 * @return The specified attribute value or null if no such attribute
	 * was contained in the result.
	 */
	public Object getAttribute(String name);
	
	/**
	 * This method returns the attribute names supported by the type of
	 * RTP interaction that occurred.  For example, if the interaction resulted
	 * in both a voice recording and digit collection, the following values 
	 * would be present in the array returned by this method: RECORDING_URL, 
	 * RECORDING_LENGTH, COLLECTED_DIGITS.
	 * 
	 * @return The names of the attributes contained by this object or an
	 * empty array if none are present.
	 */
	public Iterator getAttributeNames();
	
	/**
	 * This method returns an iterator containing the Connection IDs of all
	 * the currently active speakers in a conference.
	 * 
	 * If this result does not contain the active speaker notification,
	 * this method would return an empty iterator.
	 * 
	 * @return The Connection Identifier for each active speaker in the conference.
	 */
	public Iterator getActiveSpeakerList();
	
	
	/**
	 * This method returns the response code(if any) associated with a media server operation
	 * @return The response code of the media server operation.
	 */
	public String getResponseCode();
	
	/**
	 * This method returns the result type of msoperation
	 * @return The response code of the media server operation.
	 */
	public ResultTypeEnum getResultType();

    public void setAttribute(String name,String value); 
}
