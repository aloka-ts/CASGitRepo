package com.baypackets.ase.ra.diameter.gy.enums;

import java.util.Hashtable;

import com.traffix.openblox.diameter.gy.generated.enums.EnumPreemptionVulnerability;

public enum PreemptionVulnerabilityEnum
{
PREEMPTION_VULNERABILITY_DISABLED,
PREEMPTION_VULNERABILITY_ENABLED;

private static Hashtable<PreemptionVulnerabilityEnum,EnumPreemptionVulnerability> stackMapping = new Hashtable<PreemptionVulnerabilityEnum,EnumPreemptionVulnerability>();
private static Hashtable<EnumPreemptionVulnerability,PreemptionVulnerabilityEnum> containerMapping = new Hashtable<EnumPreemptionVulnerability,PreemptionVulnerabilityEnum>();

 static {
stackMapping.put(PreemptionVulnerabilityEnum.PREEMPTION_VULNERABILITY_DISABLED, EnumPreemptionVulnerability.PREEMPTION_VULNERABILITY_DISABLED);
stackMapping.put(PreemptionVulnerabilityEnum.PREEMPTION_VULNERABILITY_ENABLED, EnumPreemptionVulnerability.PREEMPTION_VULNERABILITY_ENABLED);

containerMapping.put(EnumPreemptionVulnerability.PREEMPTION_VULNERABILITY_DISABLED, PreemptionVulnerabilityEnum.PREEMPTION_VULNERABILITY_DISABLED);
containerMapping.put(EnumPreemptionVulnerability.PREEMPTION_VULNERABILITY_ENABLED, PreemptionVulnerabilityEnum.PREEMPTION_VULNERABILITY_ENABLED);
}

public static final PreemptionVulnerabilityEnum getContainerObj(EnumPreemptionVulnerability stkEnum){
	return containerMapping.get(stkEnum);
}

public static final EnumPreemptionVulnerability getStackObj(PreemptionVulnerabilityEnum cntrEnum){
	return stackMapping.get(cntrEnum);
}

public static PreemptionVulnerabilityEnum fromCode(int value){
	return getContainerObj(EnumPreemptionVulnerability.fromCode(value));
}

public static java.lang.String getName(int key){
	return EnumPreemptionVulnerability.getName(key);
}

public static boolean isValid(int value){
	return EnumPreemptionVulnerability.isValid(value);
}

public static int[] keys(){
	return EnumPreemptionVulnerability.keys();
}
}
