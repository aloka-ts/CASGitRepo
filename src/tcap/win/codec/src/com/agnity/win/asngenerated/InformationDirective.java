
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "InformationDirective" )
    public class InformationDirective implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "InformationDirective" , isSet = true )
       public static class InformationDirectiveSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "electronicSerialNumber", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private ElectronicSerialNumber electronicSerialNumber = null;
                
  
        @ASN1Element ( name = "msid", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MSID msid = null;
                
  
        @ASN1Element ( name = "alertCode", isOptional =  true , hasTag =  true, tag = 75 , hasDefaultValue =  false  )
    
	private AlertCode alertCode = null;
                
  
        @ASN1Element ( name = "announcementList", isOptional =  true , hasTag =  true, tag = 130 , hasDefaultValue =  false  )
    
	private AnnouncementList announcementList = null;
                
  
        @ASN1Element ( name = "callingPartyNumberString1", isOptional =  true , hasTag =  true, tag = 82 , hasDefaultValue =  false  )
    
	private CallingPartyNumberString1 callingPartyNumberString1 = null;
                
  
        @ASN1Element ( name = "callingPartyNumberString2", isOptional =  true , hasTag =  true, tag = 83 , hasDefaultValue =  false  )
    
	private CallingPartyNumberString2 callingPartyNumberString2 = null;
                
  
        @ASN1Element ( name = "callingPartySubaddress", isOptional =  true , hasTag =  true, tag = 84 , hasDefaultValue =  false  )
    
	private CallingPartySubaddress callingPartySubaddress = null;
                
  
        @ASN1Element ( name = "displayText", isOptional =  true , hasTag =  true, tag = 244 , hasDefaultValue =  false  )
    
	private DisplayText displayText = null;
                
  
        @ASN1Element ( name = "displayText2", isOptional =  true , hasTag =  true, tag = 299 , hasDefaultValue =  false  )
    
	private DisplayText2 displayText2 = null;
                
  
        @ASN1Element ( name = "redirectingNumberString", isOptional =  true , hasTag =  true, tag = 101 , hasDefaultValue =  false  )
    
	private RedirectingNumberString redirectingNumberString = null;
                
  
        @ASN1Element ( name = "redirectingSubaddress", isOptional =  true , hasTag =  true, tag = 102 , hasDefaultValue =  false  )
    
	private RedirectingSubaddress redirectingSubaddress = null;
                
  
        @ASN1Element ( name = "senderIdentificationNumber", isOptional =  true , hasTag =  true, tag = 103 , hasDefaultValue =  false  )
    
	private SenderIdentificationNumber senderIdentificationNumber = null;
                
  
        
        public ElectronicSerialNumber getElectronicSerialNumber () {
            return this.electronicSerialNumber;
        }

        

        public void setElectronicSerialNumber (ElectronicSerialNumber value) {
            this.electronicSerialNumber = value;
        }
        
  
        
        public MSID getMsid () {
            return this.msid;
        }

        
        public boolean isMsidPresent () {
            return this.msid != null;
        }
        

        public void setMsid (MSID value) {
            this.msid = value;
        }
        
  
        
        public AlertCode getAlertCode () {
            return this.alertCode;
        }

        
        public boolean isAlertCodePresent () {
            return this.alertCode != null;
        }
        

        public void setAlertCode (AlertCode value) {
            this.alertCode = value;
        }
        
  
        
        public AnnouncementList getAnnouncementList () {
            return this.announcementList;
        }

        
        public boolean isAnnouncementListPresent () {
            return this.announcementList != null;
        }
        

        public void setAnnouncementList (AnnouncementList value) {
            this.announcementList = value;
        }
        
  
        
        public CallingPartyNumberString1 getCallingPartyNumberString1 () {
            return this.callingPartyNumberString1;
        }

        
        public boolean isCallingPartyNumberString1Present () {
            return this.callingPartyNumberString1 != null;
        }
        

        public void setCallingPartyNumberString1 (CallingPartyNumberString1 value) {
            this.callingPartyNumberString1 = value;
        }
        
  
        
        public CallingPartyNumberString2 getCallingPartyNumberString2 () {
            return this.callingPartyNumberString2;
        }

        
        public boolean isCallingPartyNumberString2Present () {
            return this.callingPartyNumberString2 != null;
        }
        

        public void setCallingPartyNumberString2 (CallingPartyNumberString2 value) {
            this.callingPartyNumberString2 = value;
        }
        
  
        
        public CallingPartySubaddress getCallingPartySubaddress () {
            return this.callingPartySubaddress;
        }

        
        public boolean isCallingPartySubaddressPresent () {
            return this.callingPartySubaddress != null;
        }
        

        public void setCallingPartySubaddress (CallingPartySubaddress value) {
            this.callingPartySubaddress = value;
        }
        
  
        
        public DisplayText getDisplayText () {
            return this.displayText;
        }

        
        public boolean isDisplayTextPresent () {
            return this.displayText != null;
        }
        

        public void setDisplayText (DisplayText value) {
            this.displayText = value;
        }
        
  
        
        public DisplayText2 getDisplayText2 () {
            return this.displayText2;
        }

        
        public boolean isDisplayText2Present () {
            return this.displayText2 != null;
        }
        

        public void setDisplayText2 (DisplayText2 value) {
            this.displayText2 = value;
        }
        
  
        
        public RedirectingNumberString getRedirectingNumberString () {
            return this.redirectingNumberString;
        }

        
        public boolean isRedirectingNumberStringPresent () {
            return this.redirectingNumberString != null;
        }
        

        public void setRedirectingNumberString (RedirectingNumberString value) {
            this.redirectingNumberString = value;
        }
        
  
        
        public RedirectingSubaddress getRedirectingSubaddress () {
            return this.redirectingSubaddress;
        }

        
        public boolean isRedirectingSubaddressPresent () {
            return this.redirectingSubaddress != null;
        }
        

        public void setRedirectingSubaddress (RedirectingSubaddress value) {
            this.redirectingSubaddress = value;
        }
        
  
        
        public SenderIdentificationNumber getSenderIdentificationNumber () {
            return this.senderIdentificationNumber;
        }

        
        public boolean isSenderIdentificationNumberPresent () {
            return this.senderIdentificationNumber != null;
        }
        

        public void setSenderIdentificationNumber (SenderIdentificationNumber value) {
            this.senderIdentificationNumber = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_InformationDirectiveSequenceType;
        }

       private static IASN1PreparedElementData preparedData_InformationDirectiveSequenceType = CoderFactory.getInstance().newPreparedElementData(InformationDirectiveSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "InformationDirective", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private InformationDirectiveSequenceType  value;        

        
        
        public InformationDirective () {
        }
        
        
        
        public void setValue(InformationDirectiveSequenceType value) {
            this.value = value;
        }
        
        
        
        public InformationDirectiveSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InformationDirective.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            