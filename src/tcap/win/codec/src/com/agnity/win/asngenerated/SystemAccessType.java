
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "SystemAccessType"
    )
    public class SystemAccessType implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "not-used", hasTag = true , tag = 0 )
            not_used , 
            @ASN1EnumItem ( name = "unspecified", hasTag = true , tag = 1 )
            unspecified , 
            @ASN1EnumItem ( name = "flash-request", hasTag = true , tag = 2 )
            flash_request , 
            @ASN1EnumItem ( name = "autonomous-registration", hasTag = true , tag = 3 )
            autonomous_registration , 
            @ASN1EnumItem ( name = "call-origination", hasTag = true , tag = 4 )
            call_origination , 
            @ASN1EnumItem ( name = "page-response", hasTag = true , tag = 5 )
            page_response , 
            @ASN1EnumItem ( name = "no-access", hasTag = true , tag = 6 )
            no_access , 
            @ASN1EnumItem ( name = "power-down-registration", hasTag = true , tag = 7 )
            power_down_registration , 
            @ASN1EnumItem ( name = "sms-page-response", hasTag = true , tag = 8 )
            sms_page_response , 
            @ASN1EnumItem ( name = "otasp", hasTag = true , tag = 9 )
            otasp , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SystemAccessType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            