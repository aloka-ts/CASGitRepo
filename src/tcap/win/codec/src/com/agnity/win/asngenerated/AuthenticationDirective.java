
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "AuthenticationDirective" )
    public class AuthenticationDirective implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "AuthenticationDirective" , isSet = true )
       public static class AuthenticationDirectiveSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "electronicSerialNumber", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private ElectronicSerialNumber electronicSerialNumber = null;
                
  
        @ASN1Element ( name = "msid", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MSID msid = null;
                
  
        @ASN1Element ( name = "authenticationAlgorithmVersion", isOptional =  true , hasTag =  true, tag = 77 , hasDefaultValue =  false  )
    
	private AuthenticationAlgorithmVersion authenticationAlgorithmVersion = null;
                
  
        @ASN1Element ( name = "authenticationResponseReauthentication", isOptional =  true , hasTag =  true, tag = 182 , hasDefaultValue =  false  )
    
	private AuthenticationResponseReauthentication authenticationResponseReauthentication = null;
                
  
        @ASN1Element ( name = "authenticationResponseUniqueChallenge", isOptional =  true , hasTag =  true, tag = 37 , hasDefaultValue =  false  )
    
	private AuthenticationResponseUniqueChallenge authenticationResponseUniqueChallenge = null;
                
  
        @ASN1Element ( name = "callHistoryCount", isOptional =  true , hasTag =  true, tag = 38 , hasDefaultValue =  false  )
    
	private CallHistoryCount callHistoryCount = null;
                
  
        @ASN1Element ( name = "cdmaPrivateLongCodeMask", isOptional =  true , hasTag =  true, tag = 67 , hasDefaultValue =  false  )
    
	private CDMAPrivateLongCodeMask cdmaPrivateLongCodeMask = null;
                
  
        @ASN1Element ( name = "carrierDigits", isOptional =  true , hasTag =  true, tag = 86 , hasDefaultValue =  false  )
    
	private CarrierDigits carrierDigits = null;
                
  
        @ASN1Element ( name = "caveKey", isOptional =  true , hasTag =  true, tag = 316 , hasDefaultValue =  false  )
    
	private CaveKey caveKey = null;
                
  
        @ASN1Element ( name = "denyAccess", isOptional =  true , hasTag =  true, tag = 50 , hasDefaultValue =  false  )
    
	private DenyAccess denyAccess = null;
                
  
        @ASN1Element ( name = "destinationDigits", isOptional =  true , hasTag =  true, tag = 87 , hasDefaultValue =  false  )
    
	private DestinationDigits destinationDigits = null;
                
  
        @ASN1Element ( name = "locationAreaID", isOptional =  true , hasTag =  true, tag = 33 , hasDefaultValue =  false  )
    
	private LocationAreaID locationAreaID = null;
                
  
        @ASN1Element ( name = "randomVariableReauthentication", isOptional =  true , hasTag =  true, tag = 191 , hasDefaultValue =  false  )
    
	private RandomVariableReauthentication randomVariableReauthentication = null;
                
  
        @ASN1Element ( name = "meid", isOptional =  true , hasTag =  true, tag = 390 , hasDefaultValue =  false  )
    
	private MEID meid = null;
                
  
        @ASN1Element ( name = "mobileStationMIN", isOptional =  true , hasTag =  true, tag = 184 , hasDefaultValue =  false  )
    
	private MobileStationMIN mobileStationMIN = null;
                
  
        @ASN1Element ( name = "mscid", isOptional =  true , hasTag =  true, tag = 21 , hasDefaultValue =  false  )
    
	private MSCID mscid = null;
                
  
        @ASN1Element ( name = "randomVariableSSD", isOptional =  true , hasTag =  true, tag = 42 , hasDefaultValue =  false  )
    
	private RandomVariableSSD randomVariableSSD = null;
                
  
        @ASN1Element ( name = "randomVariableUniqueChallenge", isOptional =  true , hasTag =  true, tag = 43 , hasDefaultValue =  false  )
    
	private RandomVariableUniqueChallenge randomVariableUniqueChallenge = null;
                
  
        @ASN1Element ( name = "routingDigits", isOptional =  true , hasTag =  true, tag = 150 , hasDefaultValue =  false  )
    
	private RoutingDigits routingDigits = null;
                
  
        @ASN1Element ( name = "senderIdentificationNumber", isOptional =  true , hasTag =  true, tag = 103 , hasDefaultValue =  false  )
    
	private SenderIdentificationNumber senderIdentificationNumber = null;
                
  
        @ASN1Element ( name = "sharedSecretData", isOptional =  true , hasTag =  true, tag = 46 , hasDefaultValue =  false  )
    
	private SharedSecretData sharedSecretData = null;
                
  
        @ASN1Element ( name = "signalingMessageEncryptionKey", isOptional =  true , hasTag =  true, tag = 45 , hasDefaultValue =  false  )
    
	private SignalingMessageEncryptionKey signalingMessageEncryptionKey = null;
                
  
        @ASN1Element ( name = "ssdnotShared", isOptional =  true , hasTag =  true, tag = 52 , hasDefaultValue =  false  )
    
	private SSDNotShared ssdnotShared = null;
                
  
        @ASN1Element ( name = "updateCount", isOptional =  true , hasTag =  true, tag = 51 , hasDefaultValue =  false  )
    
	private UpdateCount updateCount = null;
                
  
        
        public ElectronicSerialNumber getElectronicSerialNumber () {
            return this.electronicSerialNumber;
        }

        

        public void setElectronicSerialNumber (ElectronicSerialNumber value) {
            this.electronicSerialNumber = value;
        }
        
  
        
        public MSID getMsid () {
            return this.msid;
        }

        
        public boolean isMsidPresent () {
            return this.msid != null;
        }
        

        public void setMsid (MSID value) {
            this.msid = value;
        }
        
  
        
        public AuthenticationAlgorithmVersion getAuthenticationAlgorithmVersion () {
            return this.authenticationAlgorithmVersion;
        }

        
        public boolean isAuthenticationAlgorithmVersionPresent () {
            return this.authenticationAlgorithmVersion != null;
        }
        

        public void setAuthenticationAlgorithmVersion (AuthenticationAlgorithmVersion value) {
            this.authenticationAlgorithmVersion = value;
        }
        
  
        
        public AuthenticationResponseReauthentication getAuthenticationResponseReauthentication () {
            return this.authenticationResponseReauthentication;
        }

        
        public boolean isAuthenticationResponseReauthenticationPresent () {
            return this.authenticationResponseReauthentication != null;
        }
        

        public void setAuthenticationResponseReauthentication (AuthenticationResponseReauthentication value) {
            this.authenticationResponseReauthentication = value;
        }
        
  
        
        public AuthenticationResponseUniqueChallenge getAuthenticationResponseUniqueChallenge () {
            return this.authenticationResponseUniqueChallenge;
        }

        
        public boolean isAuthenticationResponseUniqueChallengePresent () {
            return this.authenticationResponseUniqueChallenge != null;
        }
        

        public void setAuthenticationResponseUniqueChallenge (AuthenticationResponseUniqueChallenge value) {
            this.authenticationResponseUniqueChallenge = value;
        }
        
  
        
        public CallHistoryCount getCallHistoryCount () {
            return this.callHistoryCount;
        }

        
        public boolean isCallHistoryCountPresent () {
            return this.callHistoryCount != null;
        }
        

        public void setCallHistoryCount (CallHistoryCount value) {
            this.callHistoryCount = value;
        }
        
  
        
        public CDMAPrivateLongCodeMask getCdmaPrivateLongCodeMask () {
            return this.cdmaPrivateLongCodeMask;
        }

        
        public boolean isCdmaPrivateLongCodeMaskPresent () {
            return this.cdmaPrivateLongCodeMask != null;
        }
        

        public void setCdmaPrivateLongCodeMask (CDMAPrivateLongCodeMask value) {
            this.cdmaPrivateLongCodeMask = value;
        }
        
  
        
        public CarrierDigits getCarrierDigits () {
            return this.carrierDigits;
        }

        
        public boolean isCarrierDigitsPresent () {
            return this.carrierDigits != null;
        }
        

        public void setCarrierDigits (CarrierDigits value) {
            this.carrierDigits = value;
        }
        
  
        
        public CaveKey getCaveKey () {
            return this.caveKey;
        }

        
        public boolean isCaveKeyPresent () {
            return this.caveKey != null;
        }
        

        public void setCaveKey (CaveKey value) {
            this.caveKey = value;
        }
        
  
        
        public DenyAccess getDenyAccess () {
            return this.denyAccess;
        }

        
        public boolean isDenyAccessPresent () {
            return this.denyAccess != null;
        }
        

        public void setDenyAccess (DenyAccess value) {
            this.denyAccess = value;
        }
        
  
        
        public DestinationDigits getDestinationDigits () {
            return this.destinationDigits;
        }

        
        public boolean isDestinationDigitsPresent () {
            return this.destinationDigits != null;
        }
        

        public void setDestinationDigits (DestinationDigits value) {
            this.destinationDigits = value;
        }
        
  
        
        public LocationAreaID getLocationAreaID () {
            return this.locationAreaID;
        }

        
        public boolean isLocationAreaIDPresent () {
            return this.locationAreaID != null;
        }
        

        public void setLocationAreaID (LocationAreaID value) {
            this.locationAreaID = value;
        }
        
  
        
        public RandomVariableReauthentication getRandomVariableReauthentication () {
            return this.randomVariableReauthentication;
        }

        
        public boolean isRandomVariableReauthenticationPresent () {
            return this.randomVariableReauthentication != null;
        }
        

        public void setRandomVariableReauthentication (RandomVariableReauthentication value) {
            this.randomVariableReauthentication = value;
        }
        
  
        
        public MEID getMeid () {
            return this.meid;
        }

        
        public boolean isMeidPresent () {
            return this.meid != null;
        }
        

        public void setMeid (MEID value) {
            this.meid = value;
        }
        
  
        
        public MobileStationMIN getMobileStationMIN () {
            return this.mobileStationMIN;
        }

        
        public boolean isMobileStationMINPresent () {
            return this.mobileStationMIN != null;
        }
        

        public void setMobileStationMIN (MobileStationMIN value) {
            this.mobileStationMIN = value;
        }
        
  
        
        public MSCID getMscid () {
            return this.mscid;
        }

        
        public boolean isMscidPresent () {
            return this.mscid != null;
        }
        

        public void setMscid (MSCID value) {
            this.mscid = value;
        }
        
  
        
        public RandomVariableSSD getRandomVariableSSD () {
            return this.randomVariableSSD;
        }

        
        public boolean isRandomVariableSSDPresent () {
            return this.randomVariableSSD != null;
        }
        

        public void setRandomVariableSSD (RandomVariableSSD value) {
            this.randomVariableSSD = value;
        }
        
  
        
        public RandomVariableUniqueChallenge getRandomVariableUniqueChallenge () {
            return this.randomVariableUniqueChallenge;
        }

        
        public boolean isRandomVariableUniqueChallengePresent () {
            return this.randomVariableUniqueChallenge != null;
        }
        

        public void setRandomVariableUniqueChallenge (RandomVariableUniqueChallenge value) {
            this.randomVariableUniqueChallenge = value;
        }
        
  
        
        public RoutingDigits getRoutingDigits () {
            return this.routingDigits;
        }

        
        public boolean isRoutingDigitsPresent () {
            return this.routingDigits != null;
        }
        

        public void setRoutingDigits (RoutingDigits value) {
            this.routingDigits = value;
        }
        
  
        
        public SenderIdentificationNumber getSenderIdentificationNumber () {
            return this.senderIdentificationNumber;
        }

        
        public boolean isSenderIdentificationNumberPresent () {
            return this.senderIdentificationNumber != null;
        }
        

        public void setSenderIdentificationNumber (SenderIdentificationNumber value) {
            this.senderIdentificationNumber = value;
        }
        
  
        
        public SharedSecretData getSharedSecretData () {
            return this.sharedSecretData;
        }

        
        public boolean isSharedSecretDataPresent () {
            return this.sharedSecretData != null;
        }
        

        public void setSharedSecretData (SharedSecretData value) {
            this.sharedSecretData = value;
        }
        
  
        
        public SignalingMessageEncryptionKey getSignalingMessageEncryptionKey () {
            return this.signalingMessageEncryptionKey;
        }

        
        public boolean isSignalingMessageEncryptionKeyPresent () {
            return this.signalingMessageEncryptionKey != null;
        }
        

        public void setSignalingMessageEncryptionKey (SignalingMessageEncryptionKey value) {
            this.signalingMessageEncryptionKey = value;
        }
        
  
        
        public SSDNotShared getSsdnotShared () {
            return this.ssdnotShared;
        }

        
        public boolean isSsdnotSharedPresent () {
            return this.ssdnotShared != null;
        }
        

        public void setSsdnotShared (SSDNotShared value) {
            this.ssdnotShared = value;
        }
        
  
        
        public UpdateCount getUpdateCount () {
            return this.updateCount;
        }

        
        public boolean isUpdateCountPresent () {
            return this.updateCount != null;
        }
        

        public void setUpdateCount (UpdateCount value) {
            this.updateCount = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_AuthenticationDirectiveSequenceType;
        }

       private static IASN1PreparedElementData preparedData_AuthenticationDirectiveSequenceType = CoderFactory.getInstance().newPreparedElementData(AuthenticationDirectiveSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "AuthenticationDirective", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private AuthenticationDirectiveSequenceType  value;        

        
        
        public AuthenticationDirective () {
        }
        
        
        
        public void setValue(AuthenticationDirectiveSequenceType value) {
            this.value = value;
        }
        
        
        
        public AuthenticationDirectiveSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AuthenticationDirective.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            