
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "ModificationRequest", isSet = false )
    public class ModificationRequest implements IASN1PreparedElement {
            
        @ASN1Element ( name = "serviceDataAccessElementList", isOptional =  true , hasTag =  true, tag = 271 , hasDefaultValue =  false  )
    
	private ServiceDataAccessElementList serviceDataAccessElementList = null;
                
  
        @ASN1Element ( name = "allOrNone", isOptional =  false , hasTag =  true, tag = 247 , hasDefaultValue =  false  )
    
	private AllOrNone allOrNone = null;
                
  
        
        public ServiceDataAccessElementList getServiceDataAccessElementList () {
            return this.serviceDataAccessElementList;
        }

        
        public boolean isServiceDataAccessElementListPresent () {
            return this.serviceDataAccessElementList != null;
        }
        

        public void setServiceDataAccessElementList (ServiceDataAccessElementList value) {
            this.serviceDataAccessElementList = value;
        }
        
  
        
        public AllOrNone getAllOrNone () {
            return this.allOrNone;
        }

        

        public void setAllOrNone (AllOrNone value) {
            this.allOrNone = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ModificationRequest.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            