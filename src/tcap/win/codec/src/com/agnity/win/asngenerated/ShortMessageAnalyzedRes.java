
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ShortMessageAnalyzedRes" )
    public class ShortMessageAnalyzedRes implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "ShortMessageAnalyzedRes" , isSet = true )
       public static class ShortMessageAnalyzedResSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "dmh-ServiceID", isOptional =  true , hasTag =  true, tag = 305 , hasDefaultValue =  false  )
    
	private DMH_ServiceID dmh_ServiceID = null;
                
  
        @ASN1Element ( name = "sms-BearerData", isOptional =  true , hasTag =  true, tag = 105 , hasDefaultValue =  false  )
    
	private SMS_BearerData sms_BearerData = null;
                
  
        @ASN1Element ( name = "sms-CauseCode", isOptional =  true , hasTag =  true, tag = 153 , hasDefaultValue =  false  )
    
	private SMS_CauseCode sms_CauseCode = null;
                
  
        @ASN1Element ( name = "sms-EventNotification", isOptional =  true , hasTag =  true, tag = 408 , hasDefaultValue =  false  )
    
	private SMS_EventNotification sms_EventNotification = null;
                
  
        
        public DMH_ServiceID getDmh_ServiceID () {
            return this.dmh_ServiceID;
        }

        
        public boolean isDmh_ServiceIDPresent () {
            return this.dmh_ServiceID != null;
        }
        

        public void setDmh_ServiceID (DMH_ServiceID value) {
            this.dmh_ServiceID = value;
        }
        
  
        
        public SMS_BearerData getSms_BearerData () {
            return this.sms_BearerData;
        }

        
        public boolean isSms_BearerDataPresent () {
            return this.sms_BearerData != null;
        }
        

        public void setSms_BearerData (SMS_BearerData value) {
            this.sms_BearerData = value;
        }
        
  
        
        public SMS_CauseCode getSms_CauseCode () {
            return this.sms_CauseCode;
        }

        
        public boolean isSms_CauseCodePresent () {
            return this.sms_CauseCode != null;
        }
        

        public void setSms_CauseCode (SMS_CauseCode value) {
            this.sms_CauseCode = value;
        }
        
  
        
        public SMS_EventNotification getSms_EventNotification () {
            return this.sms_EventNotification;
        }

        
        public boolean isSms_EventNotificationPresent () {
            return this.sms_EventNotification != null;
        }
        

        public void setSms_EventNotification (SMS_EventNotification value) {
            this.sms_EventNotification = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ShortMessageAnalyzedResSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ShortMessageAnalyzedResSequenceType = CoderFactory.getInstance().newPreparedElementData(ShortMessageAnalyzedResSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "ShortMessageAnalyzedRes", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private ShortMessageAnalyzedResSequenceType  value;        

        
        
        public ShortMessageAnalyzedRes () {
        }
        
        
        
        public void setValue(ShortMessageAnalyzedResSequenceType value) {
            this.value = value;
        }
        
        
        
        public ShortMessageAnalyzedResSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ShortMessageAnalyzedRes.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            