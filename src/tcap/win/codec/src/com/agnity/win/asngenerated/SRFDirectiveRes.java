
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "SRFDirectiveRes" )
    public class SRFDirectiveRes implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "SRFDirectiveRes" , isSet = true )
       public static class SRFDirectiveResSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "digits", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private Digits digits = null;
                
  
        @ASN1Element ( name = "scriptResult", isOptional =  true , hasTag =  true, tag = 269 , hasDefaultValue =  false  )
    
	private ScriptResult scriptResult = null;
                
  
        
        public Digits getDigits () {
            return this.digits;
        }

        
        public boolean isDigitsPresent () {
            return this.digits != null;
        }
        

        public void setDigits (Digits value) {
            this.digits = value;
        }
        
  
        
        public ScriptResult getScriptResult () {
            return this.scriptResult;
        }

        
        public boolean isScriptResultPresent () {
            return this.scriptResult != null;
        }
        

        public void setScriptResult (ScriptResult value) {
            this.scriptResult = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_SRFDirectiveResSequenceType;
        }

       private static IASN1PreparedElementData preparedData_SRFDirectiveResSequenceType = CoderFactory.getInstance().newPreparedElementData(SRFDirectiveResSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "SRFDirectiveRes", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private SRFDirectiveResSequenceType  value;        

        
        
        public SRFDirectiveRes () {
        }
        
        
        
        public void setValue(SRFDirectiveResSequenceType value) {
            this.value = value;
        }
        
        
        
        public SRFDirectiveResSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SRFDirectiveRes.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            