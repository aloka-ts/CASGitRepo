
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "InterSystemSetupRes" )
    public class InterSystemSetupRes implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "InterSystemSetupRes" , isSet = true )
       public static class InterSystemSetupResSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "cdmaConnectionReferenceList", isOptional =  true , hasTag =  true, tag = 212 , hasDefaultValue =  false  )
    
	private CDMAConnectionReferenceList cdmaConnectionReferenceList = null;
                
  
        @ASN1Element ( name = "cdmaServiceOption", isOptional =  true , hasTag =  true, tag = 175 , hasDefaultValue =  false  )
    
	private CDMAServiceOption cdmaServiceOption = null;
                
  
        @ASN1Element ( name = "ilspInformation", isOptional =  true , hasTag =  true, tag = 217 , hasDefaultValue =  false  )
    
	private ISLPInformation ilspInformation = null;
                
  
        @ASN1Element ( name = "setupResult", isOptional =  true , hasTag =  true, tag = 151 , hasDefaultValue =  false  )
    
	private SetupResult setupResult = null;
                
  
        
        public CDMAConnectionReferenceList getCdmaConnectionReferenceList () {
            return this.cdmaConnectionReferenceList;
        }

        
        public boolean isCdmaConnectionReferenceListPresent () {
            return this.cdmaConnectionReferenceList != null;
        }
        

        public void setCdmaConnectionReferenceList (CDMAConnectionReferenceList value) {
            this.cdmaConnectionReferenceList = value;
        }
        
  
        
        public CDMAServiceOption getCdmaServiceOption () {
            return this.cdmaServiceOption;
        }

        
        public boolean isCdmaServiceOptionPresent () {
            return this.cdmaServiceOption != null;
        }
        

        public void setCdmaServiceOption (CDMAServiceOption value) {
            this.cdmaServiceOption = value;
        }
        
  
        
        public ISLPInformation getIlspInformation () {
            return this.ilspInformation;
        }

        
        public boolean isIlspInformationPresent () {
            return this.ilspInformation != null;
        }
        

        public void setIlspInformation (ISLPInformation value) {
            this.ilspInformation = value;
        }
        
  
        
        public SetupResult getSetupResult () {
            return this.setupResult;
        }

        
        public boolean isSetupResultPresent () {
            return this.setupResult != null;
        }
        

        public void setSetupResult (SetupResult value) {
            this.setupResult = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_InterSystemSetupResSequenceType;
        }

       private static IASN1PreparedElementData preparedData_InterSystemSetupResSequenceType = CoderFactory.getInstance().newPreparedElementData(InterSystemSetupResSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "InterSystemSetupRes", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private InterSystemSetupResSequenceType  value;        

        
        
        public InterSystemSetupRes () {
        }
        
        
        
        public void setValue(InterSystemSetupResSequenceType value) {
            this.value = value;
        }
        
        
        
        public InterSystemSetupResSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InterSystemSetupRes.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            