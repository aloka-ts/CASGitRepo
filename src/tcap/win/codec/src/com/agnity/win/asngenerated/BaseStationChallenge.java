
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "BaseStationChallenge" )
    public class BaseStationChallenge implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "BaseStationChallenge" , isSet = true )
       public static class BaseStationChallengeSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "electronicSerialNumber", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private ElectronicSerialNumber electronicSerialNumber = null;
                
  
        @ASN1Element ( name = "msid", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MSID msid = null;
                
  
        @ASN1Element ( name = "randomVariableBaseStation", isOptional =  false , hasTag =  true, tag = 41 , hasDefaultValue =  false  )
    
	private RandomVariableBaseStation randomVariableBaseStation = null;
                
  
        @ASN1Element ( name = "senderIdentificationNumber", isOptional =  true , hasTag =  true, tag = 103 , hasDefaultValue =  false  )
    
	private SenderIdentificationNumber senderIdentificationNumber = null;
                
  
        @ASN1Element ( name = "serviceIndicator", isOptional =  true , hasTag =  true, tag = 193 , hasDefaultValue =  false  )
    
	private ServiceIndicator serviceIndicator = null;
                
  
        @ASN1Element ( name = "meid", isOptional =  true , hasTag =  true, tag = 390 , hasDefaultValue =  false  )
    
	private MEID meid = null;
                
  
        
        public ElectronicSerialNumber getElectronicSerialNumber () {
            return this.electronicSerialNumber;
        }

        

        public void setElectronicSerialNumber (ElectronicSerialNumber value) {
            this.electronicSerialNumber = value;
        }
        
  
        
        public MSID getMsid () {
            return this.msid;
        }

        
        public boolean isMsidPresent () {
            return this.msid != null;
        }
        

        public void setMsid (MSID value) {
            this.msid = value;
        }
        
  
        
        public RandomVariableBaseStation getRandomVariableBaseStation () {
            return this.randomVariableBaseStation;
        }

        

        public void setRandomVariableBaseStation (RandomVariableBaseStation value) {
            this.randomVariableBaseStation = value;
        }
        
  
        
        public SenderIdentificationNumber getSenderIdentificationNumber () {
            return this.senderIdentificationNumber;
        }

        
        public boolean isSenderIdentificationNumberPresent () {
            return this.senderIdentificationNumber != null;
        }
        

        public void setSenderIdentificationNumber (SenderIdentificationNumber value) {
            this.senderIdentificationNumber = value;
        }
        
  
        
        public ServiceIndicator getServiceIndicator () {
            return this.serviceIndicator;
        }

        
        public boolean isServiceIndicatorPresent () {
            return this.serviceIndicator != null;
        }
        

        public void setServiceIndicator (ServiceIndicator value) {
            this.serviceIndicator = value;
        }
        
  
        
        public MEID getMeid () {
            return this.meid;
        }

        
        public boolean isMeidPresent () {
            return this.meid != null;
        }
        

        public void setMeid (MEID value) {
            this.meid = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_BaseStationChallengeSequenceType;
        }

       private static IASN1PreparedElementData preparedData_BaseStationChallengeSequenceType = CoderFactory.getInstance().newPreparedElementData(BaseStationChallengeSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "BaseStationChallenge", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private BaseStationChallengeSequenceType  value;        

        
        
        public BaseStationChallenge () {
        }
        
        
        
        public void setValue(BaseStationChallengeSequenceType value) {
            this.value = value;
        }
        
        
        
        public BaseStationChallengeSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BaseStationChallenge.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            