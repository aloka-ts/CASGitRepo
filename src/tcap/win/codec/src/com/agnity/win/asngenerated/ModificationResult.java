
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "ModificationResult" )
    public class ModificationResult implements IASN1PreparedElement {
            
        @ASN1Element ( name = "dataResult", isOptional =  false , hasTag =  true, tag = 253 , hasDefaultValue =  false  )
    
	private DataResult dataResult = null;
                
  
        @ASN1Element ( name = "serviceDataResultList", isOptional =  false , hasTag =  true, tag = 273 , hasDefaultValue =  false  )
    
	private ServiceDataResultList serviceDataResultList = null;
                
  
        
        public DataResult getDataResult () {
            return this.dataResult;
        }

        public boolean isDataResultSelected () {
            return this.dataResult != null;
        }

        private void setDataResult (DataResult value) {
            this.dataResult = value;
        }

        
        public void selectDataResult (DataResult value) {
            this.dataResult = value;
            
                    setServiceDataResultList(null);
                            
        }

        
  
        
        public ServiceDataResultList getServiceDataResultList () {
            return this.serviceDataResultList;
        }

        public boolean isServiceDataResultListSelected () {
            return this.serviceDataResultList != null;
        }

        private void setServiceDataResultList (ServiceDataResultList value) {
            this.serviceDataResultList = value;
        }

        
        public void selectServiceDataResultList (ServiceDataResultList value) {
            this.serviceDataResultList = value;
            
                    setDataResult(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ModificationResult.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            