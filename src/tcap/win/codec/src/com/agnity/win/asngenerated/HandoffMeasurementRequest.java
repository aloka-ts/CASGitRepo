
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "HandoffMeasurementRequest" )
    public class HandoffMeasurementRequest implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "HandoffMeasurementRequest" , isSet = true )
       public static class HandoffMeasurementRequestSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "channelData", isOptional =  false , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private ChannelData channelData = null;
                
  
        @ASN1Element ( name = "servingCellID", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private ServingCellID servingCellID = null;
                
  
        @ASN1Element ( name = "stationClassMark", isOptional =  false , hasTag =  true, tag = 18 , hasDefaultValue =  false  )
    
	private StationClassMark stationClassMark = null;
                
  
        @ASN1Element ( name = "targetCellIDList", isOptional =  true , hasTag =  true, tag = 207 , hasDefaultValue =  false  )
    
	private TargetCellIDList targetCellIDList = null;
                
  
        @ASN1Element ( name = "tdmaCallMode", isOptional =  true , hasTag =  true, tag = 29 , hasDefaultValue =  false  )
    
	private TDMACallMode tdmaCallMode = null;
                
  
        @ASN1Element ( name = "tdmaChannelData", isOptional =  true , hasTag =  true, tag = 28 , hasDefaultValue =  false  )
    
	private TDMAChannelData tdmaChannelData = null;
                
  
        @ASN1Element ( name = "tdmaTerminalCapability", isOptional =  true , hasTag =  true, tag = 179 , hasDefaultValue =  false  )
    
	private TDMATerminalCapability tdmaTerminalCapability = null;
                
  
        
        public ChannelData getChannelData () {
            return this.channelData;
        }

        

        public void setChannelData (ChannelData value) {
            this.channelData = value;
        }
        
  
        
        public ServingCellID getServingCellID () {
            return this.servingCellID;
        }

        

        public void setServingCellID (ServingCellID value) {
            this.servingCellID = value;
        }
        
  
        
        public StationClassMark getStationClassMark () {
            return this.stationClassMark;
        }

        

        public void setStationClassMark (StationClassMark value) {
            this.stationClassMark = value;
        }
        
  
        
        public TargetCellIDList getTargetCellIDList () {
            return this.targetCellIDList;
        }

        
        public boolean isTargetCellIDListPresent () {
            return this.targetCellIDList != null;
        }
        

        public void setTargetCellIDList (TargetCellIDList value) {
            this.targetCellIDList = value;
        }
        
  
        
        public TDMACallMode getTdmaCallMode () {
            return this.tdmaCallMode;
        }

        
        public boolean isTdmaCallModePresent () {
            return this.tdmaCallMode != null;
        }
        

        public void setTdmaCallMode (TDMACallMode value) {
            this.tdmaCallMode = value;
        }
        
  
        
        public TDMAChannelData getTdmaChannelData () {
            return this.tdmaChannelData;
        }

        
        public boolean isTdmaChannelDataPresent () {
            return this.tdmaChannelData != null;
        }
        

        public void setTdmaChannelData (TDMAChannelData value) {
            this.tdmaChannelData = value;
        }
        
  
        
        public TDMATerminalCapability getTdmaTerminalCapability () {
            return this.tdmaTerminalCapability;
        }

        
        public boolean isTdmaTerminalCapabilityPresent () {
            return this.tdmaTerminalCapability != null;
        }
        

        public void setTdmaTerminalCapability (TDMATerminalCapability value) {
            this.tdmaTerminalCapability = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_HandoffMeasurementRequestSequenceType;
        }

       private static IASN1PreparedElementData preparedData_HandoffMeasurementRequestSequenceType = CoderFactory.getInstance().newPreparedElementData(HandoffMeasurementRequestSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "HandoffMeasurementRequest", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private HandoffMeasurementRequestSequenceType  value;        

        
        
        public HandoffMeasurementRequest () {
        }
        
        
        
        public void setValue(HandoffMeasurementRequestSequenceType value) {
            this.value = value;
        }
        
        
        
        public HandoffMeasurementRequestSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(HandoffMeasurementRequest.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            