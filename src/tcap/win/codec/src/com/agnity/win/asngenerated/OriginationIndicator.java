
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "OriginationIndicator"
    )
    public class OriginationIndicator implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "not-used", hasTag = true , tag = 0 )
            not_used , 
            @ASN1EnumItem ( name = "prior-agreement", hasTag = true , tag = 1 )
            prior_agreement , 
            @ASN1EnumItem ( name = "origination-denied", hasTag = true , tag = 2 )
            origination_denied , 
            @ASN1EnumItem ( name = "local-calls-only", hasTag = true , tag = 3 )
            local_calls_only , 
            @ASN1EnumItem ( name = "selected-leading-digits-of-directorynumber-or-of-international-E164-number", hasTag = true , tag = 4 )
            selected_leading_digits_of_directorynumber_or_of_international_E164_number , 
            @ASN1EnumItem ( name = "selected-leading-digits-of-directorynumber-or-of-international-E164-number-and-local-calls-only", hasTag = true , tag = 5 )
            selected_leading_digits_of_directorynumber_or_of_international_E164_number_and_local_calls_only , 
            @ASN1EnumItem ( name = "national-long-distance", hasTag = true , tag = 6 )
            national_long_distance , 
            @ASN1EnumItem ( name = "international-calls", hasTag = true , tag = 7 )
            international_calls , 
            @ASN1EnumItem ( name = "single-directory-number-or-international-E164-number", hasTag = true , tag = 8 )
            single_directory_number_or_international_E164_number , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(OriginationIndicator.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            