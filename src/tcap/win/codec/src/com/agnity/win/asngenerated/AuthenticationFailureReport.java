
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "AuthenticationFailureReport" )
    public class AuthenticationFailureReport implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "AuthenticationFailureReport" , isSet = true )
       public static class AuthenticationFailureReportSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "electronicSerialNumber", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private ElectronicSerialNumber electronicSerialNumber = null;
                
  
        @ASN1Element ( name = "msid", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MSID msid = null;
                
  
        @ASN1Element ( name = "reportType", isOptional =  false , hasTag =  true, tag = 44 , hasDefaultValue =  false  )
    
	private ReportType reportType = null;
                
  
        @ASN1Element ( name = "systemAccessType", isOptional =  false , hasTag =  true, tag = 34 , hasDefaultValue =  false  )
    
	private SystemAccessType systemAccessType = null;
                
  
        @ASN1Element ( name = "systemCapabilities", isOptional =  false , hasTag =  true, tag = 49 , hasDefaultValue =  false  )
    
	private SystemCapabilities systemCapabilities = null;
                
  
        @ASN1Element ( name = "callHistoryCount", isOptional =  true , hasTag =  true, tag = 38 , hasDefaultValue =  false  )
    
	private CallHistoryCount callHistoryCount = null;
                
  
        @ASN1Element ( name = "callHistoryCountExpected", isOptional =  true , hasTag =  true, tag = 79 , hasDefaultValue =  false  )
    
	private CallHistoryCountExpected callHistoryCountExpected = null;
                
  
        @ASN1Element ( name = "mscid", isOptional =  true , hasTag =  true, tag = 21 , hasDefaultValue =  false  )
    
	private MSCID mscid = null;
                
  
        @ASN1Element ( name = "reportType2", isOptional =  true , hasTag =  true, tag = 44 , hasDefaultValue =  false  )
    
	private ReportType reportType2 = null;
                
  
        @ASN1Element ( name = "senderIdentificationNumber", isOptional =  true , hasTag =  true, tag = 103 , hasDefaultValue =  false  )
    
	private SenderIdentificationNumber senderIdentificationNumber = null;
                
  
        @ASN1Element ( name = "terminalType", isOptional =  true , hasTag =  true, tag = 47 , hasDefaultValue =  false  )
    
	private TerminalType terminalType = null;
                
  
        @ASN1Element ( name = "meid", isOptional =  true , hasTag =  true, tag = 390 , hasDefaultValue =  false  )
    
	private MEID meid = null;
                
  
        
        public ElectronicSerialNumber getElectronicSerialNumber () {
            return this.electronicSerialNumber;
        }

        

        public void setElectronicSerialNumber (ElectronicSerialNumber value) {
            this.electronicSerialNumber = value;
        }
        
  
        
        public MSID getMsid () {
            return this.msid;
        }

        
        public boolean isMsidPresent () {
            return this.msid != null;
        }
        

        public void setMsid (MSID value) {
            this.msid = value;
        }
        
  
        
        public ReportType getReportType () {
            return this.reportType;
        }

        

        public void setReportType (ReportType value) {
            this.reportType = value;
        }
        
  
        
        public SystemAccessType getSystemAccessType () {
            return this.systemAccessType;
        }

        

        public void setSystemAccessType (SystemAccessType value) {
            this.systemAccessType = value;
        }
        
  
        
        public SystemCapabilities getSystemCapabilities () {
            return this.systemCapabilities;
        }

        

        public void setSystemCapabilities (SystemCapabilities value) {
            this.systemCapabilities = value;
        }
        
  
        
        public CallHistoryCount getCallHistoryCount () {
            return this.callHistoryCount;
        }

        
        public boolean isCallHistoryCountPresent () {
            return this.callHistoryCount != null;
        }
        

        public void setCallHistoryCount (CallHistoryCount value) {
            this.callHistoryCount = value;
        }
        
  
        
        public CallHistoryCountExpected getCallHistoryCountExpected () {
            return this.callHistoryCountExpected;
        }

        
        public boolean isCallHistoryCountExpectedPresent () {
            return this.callHistoryCountExpected != null;
        }
        

        public void setCallHistoryCountExpected (CallHistoryCountExpected value) {
            this.callHistoryCountExpected = value;
        }
        
  
        
        public MSCID getMscid () {
            return this.mscid;
        }

        
        public boolean isMscidPresent () {
            return this.mscid != null;
        }
        

        public void setMscid (MSCID value) {
            this.mscid = value;
        }
        
  
        
        public ReportType getReportType2 () {
            return this.reportType2;
        }

        
        public boolean isReportType2Present () {
            return this.reportType2 != null;
        }
        

        public void setReportType2 (ReportType value) {
            this.reportType2 = value;
        }
        
  
        
        public SenderIdentificationNumber getSenderIdentificationNumber () {
            return this.senderIdentificationNumber;
        }

        
        public boolean isSenderIdentificationNumberPresent () {
            return this.senderIdentificationNumber != null;
        }
        

        public void setSenderIdentificationNumber (SenderIdentificationNumber value) {
            this.senderIdentificationNumber = value;
        }
        
  
        
        public TerminalType getTerminalType () {
            return this.terminalType;
        }

        
        public boolean isTerminalTypePresent () {
            return this.terminalType != null;
        }
        

        public void setTerminalType (TerminalType value) {
            this.terminalType = value;
        }
        
  
        
        public MEID getMeid () {
            return this.meid;
        }

        
        public boolean isMeidPresent () {
            return this.meid != null;
        }
        

        public void setMeid (MEID value) {
            this.meid = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_AuthenticationFailureReportSequenceType;
        }

       private static IASN1PreparedElementData preparedData_AuthenticationFailureReportSequenceType = CoderFactory.getInstance().newPreparedElementData(AuthenticationFailureReportSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "AuthenticationFailureReport", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private AuthenticationFailureReportSequenceType  value;        

        
        
        public AuthenticationFailureReport () {
        }
        
        
        
        public void setValue(AuthenticationFailureReportSequenceType value) {
            this.value = value;
        }
        
        
        
        public AuthenticationFailureReportSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AuthenticationFailureReport.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            