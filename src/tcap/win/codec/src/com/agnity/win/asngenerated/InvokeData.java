
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "InvokeData", isSet = false )
    public class InvokeData implements IASN1PreparedElement {
            
        @ASN1Element ( name = "handoffMeasurementRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private HandoffMeasurementRequest handoffMeasurementRequest = null;
                
  
        @ASN1Element ( name = "facilitiesDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FacilitiesDirective facilitiesDirective = null;
                
  
        @ASN1Element ( name = "handoffBack", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private HandoffBack handoffBack = null;
                
  
        @ASN1Element ( name = "facilitiesRelease", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FacilitiesRelease facilitiesRelease = null;
                
  
        @ASN1Element ( name = "qualificationRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private QualificationRequest qualificationRequest = null;
                
  
        @ASN1Element ( name = "qualificationDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private QualificationDirective qualificationDirective = null;
                
  
        @ASN1Element ( name = "blocking", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Blocking blocking = null;
                
  
        @ASN1Element ( name = "unblocking", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Unblocking unblocking = null;
                
  
        @ASN1Element ( name = "resetCircuit", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ResetCircuit resetCircuit = null;
                
  
        @ASN1Element ( name = "trunkTest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TrunkTest trunkTest = null;
                
  
        @ASN1Element ( name = "trunkTestDisconnect", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TrunkTestDisconnect trunkTestDisconnect = null;
                
  
        @ASN1Element ( name = "registrationNotification", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RegistrationNotification registrationNotification = null;
                
  
        @ASN1Element ( name = "registrationCancellation", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RegistrationCancellation registrationCancellation = null;
                
  
        @ASN1Element ( name = "locationRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private LocationRequest locationRequest = null;
                
  
        @ASN1Element ( name = "routingRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RoutingRequest routingRequest = null;
                
  
        @ASN1Element ( name = "featureRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FeatureRequest featureRequest = null;
                
  
        @ASN1Element ( name = "unreliableRoamerDataDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UnreliableRoamerDataDirective unreliableRoamerDataDirective = null;
                
  
        @ASN1Element ( name = "mSInactive", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private MSInactive mSInactive = null;
                
  
        @ASN1Element ( name = "transferToNumberRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransferToNumberRequest transferToNumberRequest = null;
                
  
        @ASN1Element ( name = "redirectionRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RedirectionRequest redirectionRequest = null;
                
  
        @ASN1Element ( name = "handoffToThird", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private HandoffToThird handoffToThird = null;
                
  
        @ASN1Element ( name = "flashRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FlashRequest flashRequest = null;
                
  
        @ASN1Element ( name = "authenticationDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AuthenticationDirective authenticationDirective = null;
                
  
        @ASN1Element ( name = "authenticationRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AuthenticationRequest authenticationRequest = null;
                
  
        @ASN1Element ( name = "baseStationChallenge", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private BaseStationChallenge baseStationChallenge = null;
                
  
        @ASN1Element ( name = "authenticationFailureReport", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AuthenticationFailureReport authenticationFailureReport = null;
                
  
        @ASN1Element ( name = "countRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CountRequest countRequest = null;
                
  
        @ASN1Element ( name = "interSystemPage", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterSystemPage interSystemPage = null;
                
  
        @ASN1Element ( name = "unsolicitedResponse", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UnsolicitedResponse unsolicitedResponse = null;
                
  
        @ASN1Element ( name = "bulkDeregistration", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private BulkDeregistration bulkDeregistration = null;
                
  
        @ASN1Element ( name = "handoffMeasurementRequest2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private HandoffMeasurementRequest2 handoffMeasurementRequest2 = null;
                
  
        @ASN1Element ( name = "facilitiesDirective2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FacilitiesDirective2 facilitiesDirective2 = null;
                
  
        @ASN1Element ( name = "handoffBack2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private HandoffBack2 handoffBack2 = null;
                
  
        @ASN1Element ( name = "handoffToThird2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private HandoffToThird2 handoffToThird2 = null;
                
  
        @ASN1Element ( name = "authenticationDirectiveForward", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AuthenticationDirectiveForward authenticationDirectiveForward = null;
                
  
        @ASN1Element ( name = "authenticationStatusReport", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AuthenticationStatusReport authenticationStatusReport = null;
                
  
        @ASN1Element ( name = "informationDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InformationDirective informationDirective = null;
                
  
        @ASN1Element ( name = "informationForward", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InformationForward informationForward = null;
                
  
        @ASN1Element ( name = "interSystemAnswer", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterSystemAnswer interSystemAnswer = null;
                
  
        @ASN1Element ( name = "interSystemPage2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterSystemPage2 interSystemPage2 = null;
                
  
        @ASN1Element ( name = "interSystemSetup", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterSystemSetup interSystemSetup = null;
                
  
        @ASN1Element ( name = "originationRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OriginationRequest originationRequest = null;
                
  
        @ASN1Element ( name = "randomVariableRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RandomVariableRequest randomVariableRequest = null;
                
  
        @ASN1Element ( name = "redirectionDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RedirectionDirective redirectionDirective = null;
                
  
        @ASN1Element ( name = "remoteUserInteractionDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RemoteUserInteractionDirective remoteUserInteractionDirective = null;
                
  
        @ASN1Element ( name = "sMSDeliveryBackward", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SMSDeliveryBackward sMSDeliveryBackward = null;
                
  
        @ASN1Element ( name = "sMSDeliveryForward", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SMSDeliveryForward sMSDeliveryForward = null;
                
  
        @ASN1Element ( name = "sMSDeliveryPointToPoint", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SMSDeliveryPointToPoint sMSDeliveryPointToPoint = null;
                
  
        @ASN1Element ( name = "sMSNotification", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SMSNotification sMSNotification = null;
                
  
        @ASN1Element ( name = "sMSRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SMSRequest sMSRequest = null;
                
  
        @ASN1Element ( name = "oTASPRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OTASPRequest oTASPRequest = null;
                
  
        @ASN1Element ( name = "changeFacilities", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ChangeFacilities changeFacilities = null;
                
  
        @ASN1Element ( name = "changeService", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ChangeService changeService = null;
                
  
        @ASN1Element ( name = "parameterRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ParameterRequest parameterRequest = null;
                
  
        @ASN1Element ( name = "tMSIDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TMSIDirective tMSIDirective = null;
                
  
        @ASN1Element ( name = "numberPortabilityRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private NumberPortabilityRequest numberPortabilityRequest = null;
                
  
        @ASN1Element ( name = "serviceRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ServiceRequest serviceRequest = null;
                
  
        @ASN1Element ( name = "analyzedInformation", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AnalyzedInformation analyzedInformation = null;
                
  
        @ASN1Element ( name = "connectionFailureReport", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ConnectionFailureReport connectionFailureReport = null;
                
  
        @ASN1Element ( name = "connectResource", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ConnectResource connectResource = null;
                
  
        @ASN1Element ( name = "facilitySelectedAndAvailable", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FacilitySelectedAndAvailable facilitySelectedAndAvailable = null;
                
  
        @ASN1Element ( name = "modify", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Modify modify = null;
                
  
        @ASN1Element ( name = "search", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Search search = null;
                
  
        @ASN1Element ( name = "seizeResource", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SeizeResource seizeResource = null;
                
  
        @ASN1Element ( name = "sRFDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SRFDirective sRFDirective = null;
                
  
        @ASN1Element ( name = "tBusy", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TBusy tBusy = null;
                
  
        @ASN1Element ( name = "tNoAnswer", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TNoAnswer tNoAnswer = null;
                
  
        @ASN1Element ( name = "smsDeliveryPointToPointAck", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SMSDeliveryPointToPointAck smsDeliveryPointToPointAck = null;
                
  
        @ASN1Element ( name = "messageDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private MessageDirective messageDirective = null;
                
  
        @ASN1Element ( name = "bulkDisconnection", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private BulkDisconnection bulkDisconnection = null;
                
  
        @ASN1Element ( name = "callControlDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallControlDirective callControlDirective = null;
                
  
        @ASN1Element ( name = "oAnswer", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OAnswer oAnswer = null;
                
  
        @ASN1Element ( name = "oDisconnect", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ODisconnect oDisconnect = null;
                
  
        @ASN1Element ( name = "callRecoveryReport", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallRecoveryReport callRecoveryReport = null;
                
  
        @ASN1Element ( name = "tAnswer", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TAnswer tAnswer = null;
                
  
        @ASN1Element ( name = "tDisconnect", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TDisconnect tDisconnect = null;
                
  
        @ASN1Element ( name = "unreliableCallData", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UnreliableCallData unreliableCallData = null;
                
  
        @ASN1Element ( name = "oCalledPartyBusy", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OCalledPartyBusy oCalledPartyBusy = null;
                
  
        @ASN1Element ( name = "oNoAnswer", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ONoAnswer oNoAnswer = null;
                
  
        @ASN1Element ( name = "positionRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private PositionRequest positionRequest = null;
                
  
        @ASN1Element ( name = "positionRequestForward", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private PositionRequestForward positionRequestForward = null;
                
  
        @ASN1Element ( name = "callTerminationReport", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallTerminationReport callTerminationReport = null;
                
  
        @ASN1Element ( name = "geoPositionRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private GeoPositionRequest geoPositionRequest = null;
                
  
        @ASN1Element ( name = "interSystemPositionRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterSystemPositionRequest interSystemPositionRequest = null;
                
  
        @ASN1Element ( name = "interSystemPositionRequestForward", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterSystemPositionRequestForward interSystemPositionRequestForward = null;
                
  
        @ASN1Element ( name = "aCGDirective", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ACGDirective aCGDirective = null;
                
  
        @ASN1Element ( name = "roamerDatabaseVerificationRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RoamerDatabaseVerificationRequest roamerDatabaseVerificationRequest = null;
                
  
        @ASN1Element ( name = "addService", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AddService addService = null;
                
  
        @ASN1Element ( name = "dropService", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private DropService dropService = null;
                
  
        @ASN1Element ( name = "lcsParameterRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private LCSParameterRequest lcsParameterRequest = null;
                
  
        @ASN1Element ( name = "checkMEID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CheckMEID checkMEID = null;
                
  
        @ASN1Element ( name = "positionEventNotification", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private PositionEventNotification positionEventNotification = null;
                
  
        @ASN1Element ( name = "statusRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private StatusRequest statusRequest = null;
                
  
        @ASN1Element ( name = "interSystemSMSDeliveryPointToPoint", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterSystemSMSDeliveryPointToPoint interSystemSMSDeliveryPointToPoint = null;
                
  
        @ASN1Element ( name = "qualificationRequest2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private QualificationRequest2 qualificationRequest2 = null;
                
  
        
        public HandoffMeasurementRequest getHandoffMeasurementRequest () {
            return this.handoffMeasurementRequest;
        }

        

        public void setHandoffMeasurementRequest (HandoffMeasurementRequest value) {
            this.handoffMeasurementRequest = value;
        }
        
  
        
        public FacilitiesDirective getFacilitiesDirective () {
            return this.facilitiesDirective;
        }

        

        public void setFacilitiesDirective (FacilitiesDirective value) {
            this.facilitiesDirective = value;
        }
        
  
        
        public HandoffBack getHandoffBack () {
            return this.handoffBack;
        }

        

        public void setHandoffBack (HandoffBack value) {
            this.handoffBack = value;
        }
        
  
        
        public FacilitiesRelease getFacilitiesRelease () {
            return this.facilitiesRelease;
        }

        

        public void setFacilitiesRelease (FacilitiesRelease value) {
            this.facilitiesRelease = value;
        }
        
  
        
        public QualificationRequest getQualificationRequest () {
            return this.qualificationRequest;
        }

        

        public void setQualificationRequest (QualificationRequest value) {
            this.qualificationRequest = value;
        }
        
  
        
        public QualificationDirective getQualificationDirective () {
            return this.qualificationDirective;
        }

        

        public void setQualificationDirective (QualificationDirective value) {
            this.qualificationDirective = value;
        }
        
  
        
        public Blocking getBlocking () {
            return this.blocking;
        }

        

        public void setBlocking (Blocking value) {
            this.blocking = value;
        }
        
  
        
        public Unblocking getUnblocking () {
            return this.unblocking;
        }

        

        public void setUnblocking (Unblocking value) {
            this.unblocking = value;
        }
        
  
        
        public ResetCircuit getResetCircuit () {
            return this.resetCircuit;
        }

        

        public void setResetCircuit (ResetCircuit value) {
            this.resetCircuit = value;
        }
        
  
        
        public TrunkTest getTrunkTest () {
            return this.trunkTest;
        }

        

        public void setTrunkTest (TrunkTest value) {
            this.trunkTest = value;
        }
        
  
        
        public TrunkTestDisconnect getTrunkTestDisconnect () {
            return this.trunkTestDisconnect;
        }

        

        public void setTrunkTestDisconnect (TrunkTestDisconnect value) {
            this.trunkTestDisconnect = value;
        }
        
  
        
        public RegistrationNotification getRegistrationNotification () {
            return this.registrationNotification;
        }

        

        public void setRegistrationNotification (RegistrationNotification value) {
            this.registrationNotification = value;
        }
        
  
        
        public RegistrationCancellation getRegistrationCancellation () {
            return this.registrationCancellation;
        }

        

        public void setRegistrationCancellation (RegistrationCancellation value) {
            this.registrationCancellation = value;
        }
        
  
        
        public LocationRequest getLocationRequest () {
            return this.locationRequest;
        }

        

        public void setLocationRequest (LocationRequest value) {
            this.locationRequest = value;
        }
        
  
        
        public RoutingRequest getRoutingRequest () {
            return this.routingRequest;
        }

        

        public void setRoutingRequest (RoutingRequest value) {
            this.routingRequest = value;
        }
        
  
        
        public FeatureRequest getFeatureRequest () {
            return this.featureRequest;
        }

        

        public void setFeatureRequest (FeatureRequest value) {
            this.featureRequest = value;
        }
        
  
        
        public UnreliableRoamerDataDirective getUnreliableRoamerDataDirective () {
            return this.unreliableRoamerDataDirective;
        }

        

        public void setUnreliableRoamerDataDirective (UnreliableRoamerDataDirective value) {
            this.unreliableRoamerDataDirective = value;
        }
        
  
        
        public MSInactive getMSInactive () {
            return this.mSInactive;
        }

        

        public void setMSInactive (MSInactive value) {
            this.mSInactive = value;
        }
        
  
        
        public TransferToNumberRequest getTransferToNumberRequest () {
            return this.transferToNumberRequest;
        }

        

        public void setTransferToNumberRequest (TransferToNumberRequest value) {
            this.transferToNumberRequest = value;
        }
        
  
        
        public RedirectionRequest getRedirectionRequest () {
            return this.redirectionRequest;
        }

        

        public void setRedirectionRequest (RedirectionRequest value) {
            this.redirectionRequest = value;
        }
        
  
        
        public HandoffToThird getHandoffToThird () {
            return this.handoffToThird;
        }

        

        public void setHandoffToThird (HandoffToThird value) {
            this.handoffToThird = value;
        }
        
  
        
        public FlashRequest getFlashRequest () {
            return this.flashRequest;
        }

        

        public void setFlashRequest (FlashRequest value) {
            this.flashRequest = value;
        }
        
  
        
        public AuthenticationDirective getAuthenticationDirective () {
            return this.authenticationDirective;
        }

        

        public void setAuthenticationDirective (AuthenticationDirective value) {
            this.authenticationDirective = value;
        }
        
  
        
        public AuthenticationRequest getAuthenticationRequest () {
            return this.authenticationRequest;
        }

        

        public void setAuthenticationRequest (AuthenticationRequest value) {
            this.authenticationRequest = value;
        }
        
  
        
        public BaseStationChallenge getBaseStationChallenge () {
            return this.baseStationChallenge;
        }

        

        public void setBaseStationChallenge (BaseStationChallenge value) {
            this.baseStationChallenge = value;
        }
        
  
        
        public AuthenticationFailureReport getAuthenticationFailureReport () {
            return this.authenticationFailureReport;
        }

        

        public void setAuthenticationFailureReport (AuthenticationFailureReport value) {
            this.authenticationFailureReport = value;
        }
        
  
        
        public CountRequest getCountRequest () {
            return this.countRequest;
        }

        

        public void setCountRequest (CountRequest value) {
            this.countRequest = value;
        }
        
  
        
        public InterSystemPage getInterSystemPage () {
            return this.interSystemPage;
        }

        

        public void setInterSystemPage (InterSystemPage value) {
            this.interSystemPage = value;
        }
        
  
        
        public UnsolicitedResponse getUnsolicitedResponse () {
            return this.unsolicitedResponse;
        }

        

        public void setUnsolicitedResponse (UnsolicitedResponse value) {
            this.unsolicitedResponse = value;
        }
        
  
        
        public BulkDeregistration getBulkDeregistration () {
            return this.bulkDeregistration;
        }

        

        public void setBulkDeregistration (BulkDeregistration value) {
            this.bulkDeregistration = value;
        }
        
  
        
        public HandoffMeasurementRequest2 getHandoffMeasurementRequest2 () {
            return this.handoffMeasurementRequest2;
        }

        

        public void setHandoffMeasurementRequest2 (HandoffMeasurementRequest2 value) {
            this.handoffMeasurementRequest2 = value;
        }
        
  
        
        public FacilitiesDirective2 getFacilitiesDirective2 () {
            return this.facilitiesDirective2;
        }

        

        public void setFacilitiesDirective2 (FacilitiesDirective2 value) {
            this.facilitiesDirective2 = value;
        }
        
  
        
        public HandoffBack2 getHandoffBack2 () {
            return this.handoffBack2;
        }

        

        public void setHandoffBack2 (HandoffBack2 value) {
            this.handoffBack2 = value;
        }
        
  
        
        public HandoffToThird2 getHandoffToThird2 () {
            return this.handoffToThird2;
        }

        

        public void setHandoffToThird2 (HandoffToThird2 value) {
            this.handoffToThird2 = value;
        }
        
  
        
        public AuthenticationDirectiveForward getAuthenticationDirectiveForward () {
            return this.authenticationDirectiveForward;
        }

        

        public void setAuthenticationDirectiveForward (AuthenticationDirectiveForward value) {
            this.authenticationDirectiveForward = value;
        }
        
  
        
        public AuthenticationStatusReport getAuthenticationStatusReport () {
            return this.authenticationStatusReport;
        }

        

        public void setAuthenticationStatusReport (AuthenticationStatusReport value) {
            this.authenticationStatusReport = value;
        }
        
  
        
        public InformationDirective getInformationDirective () {
            return this.informationDirective;
        }

        

        public void setInformationDirective (InformationDirective value) {
            this.informationDirective = value;
        }
        
  
        
        public InformationForward getInformationForward () {
            return this.informationForward;
        }

        

        public void setInformationForward (InformationForward value) {
            this.informationForward = value;
        }
        
  
        
        public InterSystemAnswer getInterSystemAnswer () {
            return this.interSystemAnswer;
        }

        

        public void setInterSystemAnswer (InterSystemAnswer value) {
            this.interSystemAnswer = value;
        }
        
  
        
        public InterSystemPage2 getInterSystemPage2 () {
            return this.interSystemPage2;
        }

        

        public void setInterSystemPage2 (InterSystemPage2 value) {
            this.interSystemPage2 = value;
        }
        
  
        
        public InterSystemSetup getInterSystemSetup () {
            return this.interSystemSetup;
        }

        

        public void setInterSystemSetup (InterSystemSetup value) {
            this.interSystemSetup = value;
        }
        
  
        
        public OriginationRequest getOriginationRequest () {
            return this.originationRequest;
        }

        

        public void setOriginationRequest (OriginationRequest value) {
            this.originationRequest = value;
        }
        
  
        
        public RandomVariableRequest getRandomVariableRequest () {
            return this.randomVariableRequest;
        }

        

        public void setRandomVariableRequest (RandomVariableRequest value) {
            this.randomVariableRequest = value;
        }
        
  
        
        public RedirectionDirective getRedirectionDirective () {
            return this.redirectionDirective;
        }

        

        public void setRedirectionDirective (RedirectionDirective value) {
            this.redirectionDirective = value;
        }
        
  
        
        public RemoteUserInteractionDirective getRemoteUserInteractionDirective () {
            return this.remoteUserInteractionDirective;
        }

        

        public void setRemoteUserInteractionDirective (RemoteUserInteractionDirective value) {
            this.remoteUserInteractionDirective = value;
        }
        
  
        
        public SMSDeliveryBackward getSMSDeliveryBackward () {
            return this.sMSDeliveryBackward;
        }

        

        public void setSMSDeliveryBackward (SMSDeliveryBackward value) {
            this.sMSDeliveryBackward = value;
        }
        
  
        
        public SMSDeliveryForward getSMSDeliveryForward () {
            return this.sMSDeliveryForward;
        }

        

        public void setSMSDeliveryForward (SMSDeliveryForward value) {
            this.sMSDeliveryForward = value;
        }
        
  
        
        public SMSDeliveryPointToPoint getSMSDeliveryPointToPoint () {
            return this.sMSDeliveryPointToPoint;
        }

        

        public void setSMSDeliveryPointToPoint (SMSDeliveryPointToPoint value) {
            this.sMSDeliveryPointToPoint = value;
        }
        
  
        
        public SMSNotification getSMSNotification () {
            return this.sMSNotification;
        }

        

        public void setSMSNotification (SMSNotification value) {
            this.sMSNotification = value;
        }
        
  
        
        public SMSRequest getSMSRequest () {
            return this.sMSRequest;
        }

        

        public void setSMSRequest (SMSRequest value) {
            this.sMSRequest = value;
        }
        
  
        
        public OTASPRequest getOTASPRequest () {
            return this.oTASPRequest;
        }

        

        public void setOTASPRequest (OTASPRequest value) {
            this.oTASPRequest = value;
        }
        
  
        
        public ChangeFacilities getChangeFacilities () {
            return this.changeFacilities;
        }

        

        public void setChangeFacilities (ChangeFacilities value) {
            this.changeFacilities = value;
        }
        
  
        
        public ChangeService getChangeService () {
            return this.changeService;
        }

        

        public void setChangeService (ChangeService value) {
            this.changeService = value;
        }
        
  
        
        public ParameterRequest getParameterRequest () {
            return this.parameterRequest;
        }

        

        public void setParameterRequest (ParameterRequest value) {
            this.parameterRequest = value;
        }
        
  
        
        public TMSIDirective getTMSIDirective () {
            return this.tMSIDirective;
        }

        

        public void setTMSIDirective (TMSIDirective value) {
            this.tMSIDirective = value;
        }
        
  
        
        public NumberPortabilityRequest getNumberPortabilityRequest () {
            return this.numberPortabilityRequest;
        }

        

        public void setNumberPortabilityRequest (NumberPortabilityRequest value) {
            this.numberPortabilityRequest = value;
        }
        
  
        
        public ServiceRequest getServiceRequest () {
            return this.serviceRequest;
        }

        

        public void setServiceRequest (ServiceRequest value) {
            this.serviceRequest = value;
        }
        
  
        
        public AnalyzedInformation getAnalyzedInformation () {
            return this.analyzedInformation;
        }

        

        public void setAnalyzedInformation (AnalyzedInformation value) {
            this.analyzedInformation = value;
        }
        
  
        
        public ConnectionFailureReport getConnectionFailureReport () {
            return this.connectionFailureReport;
        }

        

        public void setConnectionFailureReport (ConnectionFailureReport value) {
            this.connectionFailureReport = value;
        }
        
  
        
        public ConnectResource getConnectResource () {
            return this.connectResource;
        }

        

        public void setConnectResource (ConnectResource value) {
            this.connectResource = value;
        }
        
  
        
        public FacilitySelectedAndAvailable getFacilitySelectedAndAvailable () {
            return this.facilitySelectedAndAvailable;
        }

        

        public void setFacilitySelectedAndAvailable (FacilitySelectedAndAvailable value) {
            this.facilitySelectedAndAvailable = value;
        }
        
  
        
        public Modify getModify () {
            return this.modify;
        }

        

        public void setModify (Modify value) {
            this.modify = value;
        }
        
  
        
        public Search getSearch () {
            return this.search;
        }

        

        public void setSearch (Search value) {
            this.search = value;
        }
        
  
        
        public SeizeResource getSeizeResource () {
            return this.seizeResource;
        }

        

        public void setSeizeResource (SeizeResource value) {
            this.seizeResource = value;
        }
        
  
        
        public SRFDirective getSRFDirective () {
            return this.sRFDirective;
        }

        

        public void setSRFDirective (SRFDirective value) {
            this.sRFDirective = value;
        }
        
  
        
        public TBusy getTBusy () {
            return this.tBusy;
        }

        

        public void setTBusy (TBusy value) {
            this.tBusy = value;
        }
        
  
        
        public TNoAnswer getTNoAnswer () {
            return this.tNoAnswer;
        }

        

        public void setTNoAnswer (TNoAnswer value) {
            this.tNoAnswer = value;
        }
        
  
        
        public SMSDeliveryPointToPointAck getSmsDeliveryPointToPointAck () {
            return this.smsDeliveryPointToPointAck;
        }

        

        public void setSmsDeliveryPointToPointAck (SMSDeliveryPointToPointAck value) {
            this.smsDeliveryPointToPointAck = value;
        }
        
  
        
        public MessageDirective getMessageDirective () {
            return this.messageDirective;
        }

        

        public void setMessageDirective (MessageDirective value) {
            this.messageDirective = value;
        }
        
  
        
        public BulkDisconnection getBulkDisconnection () {
            return this.bulkDisconnection;
        }

        

        public void setBulkDisconnection (BulkDisconnection value) {
            this.bulkDisconnection = value;
        }
        
  
        
        public CallControlDirective getCallControlDirective () {
            return this.callControlDirective;
        }

        

        public void setCallControlDirective (CallControlDirective value) {
            this.callControlDirective = value;
        }
        
  
        
        public OAnswer getOAnswer () {
            return this.oAnswer;
        }

        

        public void setOAnswer (OAnswer value) {
            this.oAnswer = value;
        }
        
  
        
        public ODisconnect getODisconnect () {
            return this.oDisconnect;
        }

        

        public void setODisconnect (ODisconnect value) {
            this.oDisconnect = value;
        }
        
  
        
        public CallRecoveryReport getCallRecoveryReport () {
            return this.callRecoveryReport;
        }

        

        public void setCallRecoveryReport (CallRecoveryReport value) {
            this.callRecoveryReport = value;
        }
        
  
        
        public TAnswer getTAnswer () {
            return this.tAnswer;
        }

        

        public void setTAnswer (TAnswer value) {
            this.tAnswer = value;
        }
        
  
        
        public TDisconnect getTDisconnect () {
            return this.tDisconnect;
        }

        

        public void setTDisconnect (TDisconnect value) {
            this.tDisconnect = value;
        }
        
  
        
        public UnreliableCallData getUnreliableCallData () {
            return this.unreliableCallData;
        }

        

        public void setUnreliableCallData (UnreliableCallData value) {
            this.unreliableCallData = value;
        }
        
  
        
        public OCalledPartyBusy getOCalledPartyBusy () {
            return this.oCalledPartyBusy;
        }

        

        public void setOCalledPartyBusy (OCalledPartyBusy value) {
            this.oCalledPartyBusy = value;
        }
        
  
        
        public ONoAnswer getONoAnswer () {
            return this.oNoAnswer;
        }

        

        public void setONoAnswer (ONoAnswer value) {
            this.oNoAnswer = value;
        }
        
  
        
        public PositionRequest getPositionRequest () {
            return this.positionRequest;
        }

        

        public void setPositionRequest (PositionRequest value) {
            this.positionRequest = value;
        }
        
  
        
        public PositionRequestForward getPositionRequestForward () {
            return this.positionRequestForward;
        }

        

        public void setPositionRequestForward (PositionRequestForward value) {
            this.positionRequestForward = value;
        }
        
  
        
        public CallTerminationReport getCallTerminationReport () {
            return this.callTerminationReport;
        }

        

        public void setCallTerminationReport (CallTerminationReport value) {
            this.callTerminationReport = value;
        }
        
  
        
        public GeoPositionRequest getGeoPositionRequest () {
            return this.geoPositionRequest;
        }

        

        public void setGeoPositionRequest (GeoPositionRequest value) {
            this.geoPositionRequest = value;
        }
        
  
        
        public InterSystemPositionRequest getInterSystemPositionRequest () {
            return this.interSystemPositionRequest;
        }

        

        public void setInterSystemPositionRequest (InterSystemPositionRequest value) {
            this.interSystemPositionRequest = value;
        }
        
  
        
        public InterSystemPositionRequestForward getInterSystemPositionRequestForward () {
            return this.interSystemPositionRequestForward;
        }

        

        public void setInterSystemPositionRequestForward (InterSystemPositionRequestForward value) {
            this.interSystemPositionRequestForward = value;
        }
        
  
        
        public ACGDirective getACGDirective () {
            return this.aCGDirective;
        }

        

        public void setACGDirective (ACGDirective value) {
            this.aCGDirective = value;
        }
        
  
        
        public RoamerDatabaseVerificationRequest getRoamerDatabaseVerificationRequest () {
            return this.roamerDatabaseVerificationRequest;
        }

        

        public void setRoamerDatabaseVerificationRequest (RoamerDatabaseVerificationRequest value) {
            this.roamerDatabaseVerificationRequest = value;
        }
        
  
        
        public AddService getAddService () {
            return this.addService;
        }

        

        public void setAddService (AddService value) {
            this.addService = value;
        }
        
  
        
        public DropService getDropService () {
            return this.dropService;
        }

        

        public void setDropService (DropService value) {
            this.dropService = value;
        }
        
  
        
        public LCSParameterRequest getLcsParameterRequest () {
            return this.lcsParameterRequest;
        }

        

        public void setLcsParameterRequest (LCSParameterRequest value) {
            this.lcsParameterRequest = value;
        }
        
  
        
        public CheckMEID getCheckMEID () {
            return this.checkMEID;
        }

        

        public void setCheckMEID (CheckMEID value) {
            this.checkMEID = value;
        }
        
  
        
        public PositionEventNotification getPositionEventNotification () {
            return this.positionEventNotification;
        }

        

        public void setPositionEventNotification (PositionEventNotification value) {
            this.positionEventNotification = value;
        }
        
  
        
        public StatusRequest getStatusRequest () {
            return this.statusRequest;
        }

        

        public void setStatusRequest (StatusRequest value) {
            this.statusRequest = value;
        }
        
  
        
        public InterSystemSMSDeliveryPointToPoint getInterSystemSMSDeliveryPointToPoint () {
            return this.interSystemSMSDeliveryPointToPoint;
        }

        

        public void setInterSystemSMSDeliveryPointToPoint (InterSystemSMSDeliveryPointToPoint value) {
            this.interSystemSMSDeliveryPointToPoint = value;
        }
        
  
        
        public QualificationRequest2 getQualificationRequest2 () {
            return this.qualificationRequest2;
        }

        

        public void setQualificationRequest2 (QualificationRequest2 value) {
            this.qualificationRequest2 = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InvokeData.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            