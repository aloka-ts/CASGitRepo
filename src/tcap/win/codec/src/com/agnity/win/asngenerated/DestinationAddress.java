
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "DestinationAddress" )
    public class DestinationAddress implements IASN1PreparedElement {
            
        @ASN1Element ( name = "globalTitle", isOptional =  false , hasTag =  true, tag = 261 , hasDefaultValue =  false  )
    
	private GlobalTitle globalTitle = null;
                
  
        @ASN1Element ( name = "pC-SSN", isOptional =  false , hasTag =  true, tag = 32 , hasDefaultValue =  false  )
    
	private PC_SSN pC_SSN = null;
                
  
        
        public GlobalTitle getGlobalTitle () {
            return this.globalTitle;
        }

        public boolean isGlobalTitleSelected () {
            return this.globalTitle != null;
        }

        private void setGlobalTitle (GlobalTitle value) {
            this.globalTitle = value;
        }

        
        public void selectGlobalTitle (GlobalTitle value) {
            this.globalTitle = value;
            
                    setPC_SSN(null);
                            
        }

        
  
        
        public PC_SSN getPC_SSN () {
            return this.pC_SSN;
        }

        public boolean isPC_SSNSelected () {
            return this.pC_SSN != null;
        }

        private void setPC_SSN (PC_SSN value) {
            this.pC_SSN = value;
        }

        
        public void selectPC_SSN (PC_SSN value) {
            this.pC_SSN = value;
            
                    setGlobalTitle(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(DestinationAddress.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            