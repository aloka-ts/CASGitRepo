
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "AuthenticationStatusReportRes" )
    public class AuthenticationStatusReportRes implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "AuthenticationStatusReportRes" , isSet = true )
       public static class AuthenticationStatusReportResSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "authenticationAlgorithmVersion", isOptional =  true , hasTag =  true, tag = 77 , hasDefaultValue =  false  )
    
	private AuthenticationAlgorithmVersion authenticationAlgorithmVersion = null;
                
  
        @ASN1Element ( name = "authenticationResponseUniqueChallenge", isOptional =  true , hasTag =  true, tag = 37 , hasDefaultValue =  false  )
    
	private AuthenticationResponseUniqueChallenge authenticationResponseUniqueChallenge = null;
                
  
        @ASN1Element ( name = "callHistoryCount", isOptional =  true , hasTag =  true, tag = 38 , hasDefaultValue =  false  )
    
	private CallHistoryCount callHistoryCount = null;
                
  
        @ASN1Element ( name = "carrierDigits", isOptional =  true , hasTag =  true, tag = 86 , hasDefaultValue =  false  )
    
	private CarrierDigits carrierDigits = null;
                
  
        @ASN1Element ( name = "denyAccess", isOptional =  true , hasTag =  true, tag = 50 , hasDefaultValue =  false  )
    
	private DenyAccess denyAccess = null;
                
  
        @ASN1Element ( name = "destinationDigits", isOptional =  true , hasTag =  true, tag = 87 , hasDefaultValue =  false  )
    
	private DestinationDigits destinationDigits = null;
                
  
        @ASN1Element ( name = "randomVariableSSD", isOptional =  true , hasTag =  true, tag = 42 , hasDefaultValue =  false  )
    
	private RandomVariableSSD randomVariableSSD = null;
                
  
        @ASN1Element ( name = "randomVariableUniqueChallenge", isOptional =  true , hasTag =  true, tag = 43 , hasDefaultValue =  false  )
    
	private RandomVariableUniqueChallenge randomVariableUniqueChallenge = null;
                
  
        @ASN1Element ( name = "routingDigits", isOptional =  true , hasTag =  true, tag = 150 , hasDefaultValue =  false  )
    
	private RoutingDigits routingDigits = null;
                
  
        @ASN1Element ( name = "sharedSecretData", isOptional =  true , hasTag =  true, tag = 46 , hasDefaultValue =  false  )
    
	private SharedSecretData sharedSecretData = null;
                
  
        @ASN1Element ( name = "ssdnotShared", isOptional =  true , hasTag =  true, tag = 52 , hasDefaultValue =  false  )
    
	private SSDNotShared ssdnotShared = null;
                
  
        @ASN1Element ( name = "updateCount", isOptional =  true , hasTag =  true, tag = 51 , hasDefaultValue =  false  )
    
	private UpdateCount updateCount = null;
                
  
        
        public AuthenticationAlgorithmVersion getAuthenticationAlgorithmVersion () {
            return this.authenticationAlgorithmVersion;
        }

        
        public boolean isAuthenticationAlgorithmVersionPresent () {
            return this.authenticationAlgorithmVersion != null;
        }
        

        public void setAuthenticationAlgorithmVersion (AuthenticationAlgorithmVersion value) {
            this.authenticationAlgorithmVersion = value;
        }
        
  
        
        public AuthenticationResponseUniqueChallenge getAuthenticationResponseUniqueChallenge () {
            return this.authenticationResponseUniqueChallenge;
        }

        
        public boolean isAuthenticationResponseUniqueChallengePresent () {
            return this.authenticationResponseUniqueChallenge != null;
        }
        

        public void setAuthenticationResponseUniqueChallenge (AuthenticationResponseUniqueChallenge value) {
            this.authenticationResponseUniqueChallenge = value;
        }
        
  
        
        public CallHistoryCount getCallHistoryCount () {
            return this.callHistoryCount;
        }

        
        public boolean isCallHistoryCountPresent () {
            return this.callHistoryCount != null;
        }
        

        public void setCallHistoryCount (CallHistoryCount value) {
            this.callHistoryCount = value;
        }
        
  
        
        public CarrierDigits getCarrierDigits () {
            return this.carrierDigits;
        }

        
        public boolean isCarrierDigitsPresent () {
            return this.carrierDigits != null;
        }
        

        public void setCarrierDigits (CarrierDigits value) {
            this.carrierDigits = value;
        }
        
  
        
        public DenyAccess getDenyAccess () {
            return this.denyAccess;
        }

        
        public boolean isDenyAccessPresent () {
            return this.denyAccess != null;
        }
        

        public void setDenyAccess (DenyAccess value) {
            this.denyAccess = value;
        }
        
  
        
        public DestinationDigits getDestinationDigits () {
            return this.destinationDigits;
        }

        
        public boolean isDestinationDigitsPresent () {
            return this.destinationDigits != null;
        }
        

        public void setDestinationDigits (DestinationDigits value) {
            this.destinationDigits = value;
        }
        
  
        
        public RandomVariableSSD getRandomVariableSSD () {
            return this.randomVariableSSD;
        }

        
        public boolean isRandomVariableSSDPresent () {
            return this.randomVariableSSD != null;
        }
        

        public void setRandomVariableSSD (RandomVariableSSD value) {
            this.randomVariableSSD = value;
        }
        
  
        
        public RandomVariableUniqueChallenge getRandomVariableUniqueChallenge () {
            return this.randomVariableUniqueChallenge;
        }

        
        public boolean isRandomVariableUniqueChallengePresent () {
            return this.randomVariableUniqueChallenge != null;
        }
        

        public void setRandomVariableUniqueChallenge (RandomVariableUniqueChallenge value) {
            this.randomVariableUniqueChallenge = value;
        }
        
  
        
        public RoutingDigits getRoutingDigits () {
            return this.routingDigits;
        }

        
        public boolean isRoutingDigitsPresent () {
            return this.routingDigits != null;
        }
        

        public void setRoutingDigits (RoutingDigits value) {
            this.routingDigits = value;
        }
        
  
        
        public SharedSecretData getSharedSecretData () {
            return this.sharedSecretData;
        }

        
        public boolean isSharedSecretDataPresent () {
            return this.sharedSecretData != null;
        }
        

        public void setSharedSecretData (SharedSecretData value) {
            this.sharedSecretData = value;
        }
        
  
        
        public SSDNotShared getSsdnotShared () {
            return this.ssdnotShared;
        }

        
        public boolean isSsdnotSharedPresent () {
            return this.ssdnotShared != null;
        }
        

        public void setSsdnotShared (SSDNotShared value) {
            this.ssdnotShared = value;
        }
        
  
        
        public UpdateCount getUpdateCount () {
            return this.updateCount;
        }

        
        public boolean isUpdateCountPresent () {
            return this.updateCount != null;
        }
        

        public void setUpdateCount (UpdateCount value) {
            this.updateCount = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_AuthenticationStatusReportResSequenceType;
        }

       private static IASN1PreparedElementData preparedData_AuthenticationStatusReportResSequenceType = CoderFactory.getInstance().newPreparedElementData(AuthenticationStatusReportResSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "AuthenticationStatusReportRes", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private AuthenticationStatusReportResSequenceType  value;        

        
        
        public AuthenticationStatusReportRes () {
        }
        
        
        
        public void setValue(AuthenticationStatusReportResSequenceType value) {
            this.value = value;
        }
        
        
        
        public AuthenticationStatusReportResSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AuthenticationStatusReportRes.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            