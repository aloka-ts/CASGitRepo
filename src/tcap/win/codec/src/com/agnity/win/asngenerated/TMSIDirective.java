
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "TMSIDirective" )
    public class TMSIDirective implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "TMSIDirective" , isSet = true )
       public static class TMSIDirectiveSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "electronicSerialNumber", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private ElectronicSerialNumber electronicSerialNumber = null;
                
  
        @ASN1Element ( name = "mscid", isOptional =  false , hasTag =  true, tag = 21 , hasDefaultValue =  false  )
    
	private MSCID mscid = null;
                
  
        @ASN1Element ( name = "networkTMSIExpirationTime", isOptional =  false , hasTag =  true, tag = 234 , hasDefaultValue =  false  )
    
	private NetworkTMSIExpirationTime networkTMSIExpirationTime = null;
                
  
        @ASN1Element ( name = "newNetworkTMSI", isOptional =  false , hasTag =  true, tag = 235 , hasDefaultValue =  false  )
    
	private NewNetworkTMSI newNetworkTMSI = null;
                
  
        @ASN1Element ( name = "locationAreaID", isOptional =  true , hasTag =  true, tag = 33 , hasDefaultValue =  false  )
    
	private LocationAreaID locationAreaID = null;
                
  
        @ASN1Element ( name = "networkTMSI", isOptional =  true , hasTag =  true, tag = 233 , hasDefaultValue =  false  )
    
	private NetworkTMSI networkTMSI = null;
                
  
        
        public ElectronicSerialNumber getElectronicSerialNumber () {
            return this.electronicSerialNumber;
        }

        

        public void setElectronicSerialNumber (ElectronicSerialNumber value) {
            this.electronicSerialNumber = value;
        }
        
  
        
        public MSCID getMscid () {
            return this.mscid;
        }

        

        public void setMscid (MSCID value) {
            this.mscid = value;
        }
        
  
        
        public NetworkTMSIExpirationTime getNetworkTMSIExpirationTime () {
            return this.networkTMSIExpirationTime;
        }

        

        public void setNetworkTMSIExpirationTime (NetworkTMSIExpirationTime value) {
            this.networkTMSIExpirationTime = value;
        }
        
  
        
        public NewNetworkTMSI getNewNetworkTMSI () {
            return this.newNetworkTMSI;
        }

        

        public void setNewNetworkTMSI (NewNetworkTMSI value) {
            this.newNetworkTMSI = value;
        }
        
  
        
        public LocationAreaID getLocationAreaID () {
            return this.locationAreaID;
        }

        
        public boolean isLocationAreaIDPresent () {
            return this.locationAreaID != null;
        }
        

        public void setLocationAreaID (LocationAreaID value) {
            this.locationAreaID = value;
        }
        
  
        
        public NetworkTMSI getNetworkTMSI () {
            return this.networkTMSI;
        }

        
        public boolean isNetworkTMSIPresent () {
            return this.networkTMSI != null;
        }
        

        public void setNetworkTMSI (NetworkTMSI value) {
            this.networkTMSI = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TMSIDirectiveSequenceType;
        }

       private static IASN1PreparedElementData preparedData_TMSIDirectiveSequenceType = CoderFactory.getInstance().newPreparedElementData(TMSIDirectiveSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "TMSIDirective", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private TMSIDirectiveSequenceType  value;        

        
        
        public TMSIDirective () {
        }
        
        
        
        public void setValue(TMSIDirectiveSequenceType value) {
            this.value = value;
        }
        
        
        
        public TMSIDirectiveSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(TMSIDirective.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            