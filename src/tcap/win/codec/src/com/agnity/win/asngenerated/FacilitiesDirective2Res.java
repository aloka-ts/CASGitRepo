
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "FacilitiesDirective2Res" )
    public class FacilitiesDirective2Res implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "FacilitiesDirective2Res" , isSet = true )
       public static class FacilitiesDirective2ResSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "bsmcstatus", isOptional =  true , hasTag =  true, tag = 198 , hasDefaultValue =  false  )
    
	private BSMCStatus bsmcstatus = null;
                
  
        @ASN1Element ( name = "cdma2000HandoffResponseIOSData", isOptional =  true , hasTag =  true, tag = 357 , hasDefaultValue =  false  )
    
	private CDMA2000HandoffResponseIOSData cdma2000HandoffResponseIOSData = null;
                
  
        @ASN1Element ( name = "cdmaChannelData", isOptional =  true , hasTag =  true, tag = 63 , hasDefaultValue =  false  )
    
	private CDMAChannelData cdmaChannelData = null;
                
  
        @ASN1Element ( name = "cdmaCodeChannelList", isOptional =  true , hasTag =  true, tag = 132 , hasDefaultValue =  false  )
    
	private CDMACodeChannelList cdmaCodeChannelList = null;
                
  
        @ASN1Element ( name = "cdmaConnectionReferenceList", isOptional =  true , hasTag =  true, tag = 212 , hasDefaultValue =  false  )
    
	private CDMAConnectionReferenceList cdmaConnectionReferenceList = null;
                
  
        @ASN1Element ( name = "cdmaSearchParameters", isOptional =  true , hasTag =  true, tag = 230 , hasDefaultValue =  false  )
    
	private CDMASearchParameters cdmaSearchParameters = null;
                
  
        @ASN1Element ( name = "cdmaSearchWindow", isOptional =  true , hasTag =  true, tag = 69 , hasDefaultValue =  false  )
    
	private CDMASearchWindow cdmaSearchWindow = null;
                
  
        @ASN1Element ( name = "cdmaServiceConfigurationRecord", isOptional =  true , hasTag =  true, tag = 174 , hasDefaultValue =  false  )
    
	private CDMAServiceConfigurationRecord cdmaServiceConfigurationRecord = null;
                
  
        @ASN1Element ( name = "channelData", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private ChannelData channelData = null;
                
  
        @ASN1Element ( name = "confidentialityModes", isOptional =  true , hasTag =  true, tag = 39 , hasDefaultValue =  false  )
    
	private ConfidentialityModes confidentialityModes = null;
                
  
        @ASN1Element ( name = "ilspInformation", isOptional =  true , hasTag =  true, tag = 217 , hasDefaultValue =  false  )
    
	private ISLPInformation ilspInformation = null;
                
  
        @ASN1Element ( name = "nampsChannelData", isOptional =  true , hasTag =  true, tag = 74 , hasDefaultValue =  false  )
    
	private NAMPSChannelData nampsChannelData = null;
                
  
        @ASN1Element ( name = "sOCStatus", isOptional =  true , hasTag =  true, tag = 205 , hasDefaultValue =  false  )
    
	private SOCStatus sOCStatus = null;
                
  
        @ASN1Element ( name = "targetCellID", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private TargetCellID targetCellID = null;
                
  
        @ASN1Element ( name = "tdmaBurstIndicator", isOptional =  true , hasTag =  true, tag = 31 , hasDefaultValue =  false  )
    
	private TDMABurstIndicator tdmaBurstIndicator = null;
                
  
        @ASN1Element ( name = "tdmaChannelData", isOptional =  true , hasTag =  true, tag = 28 , hasDefaultValue =  false  )
    
	private TDMAChannelData tdmaChannelData = null;
                
  
        @ASN1Element ( name = "tdmaVoiceCoder", isOptional =  true , hasTag =  true, tag = 180 , hasDefaultValue =  false  )
    
	private TDMAVoiceCoder tdmaVoiceCoder = null;
                
  
        
        public BSMCStatus getBsmcstatus () {
            return this.bsmcstatus;
        }

        
        public boolean isBsmcstatusPresent () {
            return this.bsmcstatus != null;
        }
        

        public void setBsmcstatus (BSMCStatus value) {
            this.bsmcstatus = value;
        }
        
  
        
        public CDMA2000HandoffResponseIOSData getCdma2000HandoffResponseIOSData () {
            return this.cdma2000HandoffResponseIOSData;
        }

        
        public boolean isCdma2000HandoffResponseIOSDataPresent () {
            return this.cdma2000HandoffResponseIOSData != null;
        }
        

        public void setCdma2000HandoffResponseIOSData (CDMA2000HandoffResponseIOSData value) {
            this.cdma2000HandoffResponseIOSData = value;
        }
        
  
        
        public CDMAChannelData getCdmaChannelData () {
            return this.cdmaChannelData;
        }

        
        public boolean isCdmaChannelDataPresent () {
            return this.cdmaChannelData != null;
        }
        

        public void setCdmaChannelData (CDMAChannelData value) {
            this.cdmaChannelData = value;
        }
        
  
        
        public CDMACodeChannelList getCdmaCodeChannelList () {
            return this.cdmaCodeChannelList;
        }

        
        public boolean isCdmaCodeChannelListPresent () {
            return this.cdmaCodeChannelList != null;
        }
        

        public void setCdmaCodeChannelList (CDMACodeChannelList value) {
            this.cdmaCodeChannelList = value;
        }
        
  
        
        public CDMAConnectionReferenceList getCdmaConnectionReferenceList () {
            return this.cdmaConnectionReferenceList;
        }

        
        public boolean isCdmaConnectionReferenceListPresent () {
            return this.cdmaConnectionReferenceList != null;
        }
        

        public void setCdmaConnectionReferenceList (CDMAConnectionReferenceList value) {
            this.cdmaConnectionReferenceList = value;
        }
        
  
        
        public CDMASearchParameters getCdmaSearchParameters () {
            return this.cdmaSearchParameters;
        }

        
        public boolean isCdmaSearchParametersPresent () {
            return this.cdmaSearchParameters != null;
        }
        

        public void setCdmaSearchParameters (CDMASearchParameters value) {
            this.cdmaSearchParameters = value;
        }
        
  
        
        public CDMASearchWindow getCdmaSearchWindow () {
            return this.cdmaSearchWindow;
        }

        
        public boolean isCdmaSearchWindowPresent () {
            return this.cdmaSearchWindow != null;
        }
        

        public void setCdmaSearchWindow (CDMASearchWindow value) {
            this.cdmaSearchWindow = value;
        }
        
  
        
        public CDMAServiceConfigurationRecord getCdmaServiceConfigurationRecord () {
            return this.cdmaServiceConfigurationRecord;
        }

        
        public boolean isCdmaServiceConfigurationRecordPresent () {
            return this.cdmaServiceConfigurationRecord != null;
        }
        

        public void setCdmaServiceConfigurationRecord (CDMAServiceConfigurationRecord value) {
            this.cdmaServiceConfigurationRecord = value;
        }
        
  
        
        public ChannelData getChannelData () {
            return this.channelData;
        }

        
        public boolean isChannelDataPresent () {
            return this.channelData != null;
        }
        

        public void setChannelData (ChannelData value) {
            this.channelData = value;
        }
        
  
        
        public ConfidentialityModes getConfidentialityModes () {
            return this.confidentialityModes;
        }

        
        public boolean isConfidentialityModesPresent () {
            return this.confidentialityModes != null;
        }
        

        public void setConfidentialityModes (ConfidentialityModes value) {
            this.confidentialityModes = value;
        }
        
  
        
        public ISLPInformation getIlspInformation () {
            return this.ilspInformation;
        }

        
        public boolean isIlspInformationPresent () {
            return this.ilspInformation != null;
        }
        

        public void setIlspInformation (ISLPInformation value) {
            this.ilspInformation = value;
        }
        
  
        
        public NAMPSChannelData getNampsChannelData () {
            return this.nampsChannelData;
        }

        
        public boolean isNampsChannelDataPresent () {
            return this.nampsChannelData != null;
        }
        

        public void setNampsChannelData (NAMPSChannelData value) {
            this.nampsChannelData = value;
        }
        
  
        
        public SOCStatus getSOCStatus () {
            return this.sOCStatus;
        }

        
        public boolean isSOCStatusPresent () {
            return this.sOCStatus != null;
        }
        

        public void setSOCStatus (SOCStatus value) {
            this.sOCStatus = value;
        }
        
  
        
        public TargetCellID getTargetCellID () {
            return this.targetCellID;
        }

        
        public boolean isTargetCellIDPresent () {
            return this.targetCellID != null;
        }
        

        public void setTargetCellID (TargetCellID value) {
            this.targetCellID = value;
        }
        
  
        
        public TDMABurstIndicator getTdmaBurstIndicator () {
            return this.tdmaBurstIndicator;
        }

        
        public boolean isTdmaBurstIndicatorPresent () {
            return this.tdmaBurstIndicator != null;
        }
        

        public void setTdmaBurstIndicator (TDMABurstIndicator value) {
            this.tdmaBurstIndicator = value;
        }
        
  
        
        public TDMAChannelData getTdmaChannelData () {
            return this.tdmaChannelData;
        }

        
        public boolean isTdmaChannelDataPresent () {
            return this.tdmaChannelData != null;
        }
        

        public void setTdmaChannelData (TDMAChannelData value) {
            this.tdmaChannelData = value;
        }
        
  
        
        public TDMAVoiceCoder getTdmaVoiceCoder () {
            return this.tdmaVoiceCoder;
        }

        
        public boolean isTdmaVoiceCoderPresent () {
            return this.tdmaVoiceCoder != null;
        }
        

        public void setTdmaVoiceCoder (TDMAVoiceCoder value) {
            this.tdmaVoiceCoder = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_FacilitiesDirective2ResSequenceType;
        }

       private static IASN1PreparedElementData preparedData_FacilitiesDirective2ResSequenceType = CoderFactory.getInstance().newPreparedElementData(FacilitiesDirective2ResSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "FacilitiesDirective2Res", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private FacilitiesDirective2ResSequenceType  value;        

        
        
        public FacilitiesDirective2Res () {
        }
        
        
        
        public void setValue(FacilitiesDirective2ResSequenceType value) {
            this.value = value;
        }
        
        
        
        public FacilitiesDirective2ResSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(FacilitiesDirective2Res.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            