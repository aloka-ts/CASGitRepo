
package com.agnity.win.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ParameterRequest" )
    public class ParameterRequest implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "ParameterRequest" , isSet = true )
       public static class ParameterRequestSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "requiredParametersMask", isOptional =  false , hasTag =  true, tag = 236 , hasDefaultValue =  false  )
    
	private RequiredParametersMask requiredParametersMask = null;
                
  
        @ASN1Element ( name = "electronicSerialNumber", isOptional =  true , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private ElectronicSerialNumber electronicSerialNumber = null;
                
  
        @ASN1Element ( name = "msid", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MSID msid = null;
                
  
        @ASN1Element ( name = "mscid", isOptional =  true , hasTag =  true, tag = 21 , hasDefaultValue =  false  )
    
	private MSCID mscid = null;
                
  
        @ASN1Element ( name = "networkTMSI", isOptional =  true , hasTag =  true, tag = 233 , hasDefaultValue =  false  )
    
	private NetworkTMSI networkTMSI = null;
                
  
        @ASN1Element ( name = "pc-ssn", isOptional =  true , hasTag =  true, tag = 32 , hasDefaultValue =  false  )
    
	private PC_SSN pc_ssn = null;
                
  
        @ASN1Element ( name = "senderIdentificationNumber", isOptional =  true , hasTag =  true, tag = 103 , hasDefaultValue =  false  )
    
	private SenderIdentificationNumber senderIdentificationNumber = null;
                
  
        @ASN1Element ( name = "systemMyTypeCode", isOptional =  true , hasTag =  true, tag = 22 , hasDefaultValue =  false  )
    
	private SystemMyTypeCode systemMyTypeCode = null;
                
  
        
        public RequiredParametersMask getRequiredParametersMask () {
            return this.requiredParametersMask;
        }

        

        public void setRequiredParametersMask (RequiredParametersMask value) {
            this.requiredParametersMask = value;
        }
        
  
        
        public ElectronicSerialNumber getElectronicSerialNumber () {
            return this.electronicSerialNumber;
        }

        
        public boolean isElectronicSerialNumberPresent () {
            return this.electronicSerialNumber != null;
        }
        

        public void setElectronicSerialNumber (ElectronicSerialNumber value) {
            this.electronicSerialNumber = value;
        }
        
  
        
        public MSID getMsid () {
            return this.msid;
        }

        
        public boolean isMsidPresent () {
            return this.msid != null;
        }
        

        public void setMsid (MSID value) {
            this.msid = value;
        }
        
  
        
        public MSCID getMscid () {
            return this.mscid;
        }

        
        public boolean isMscidPresent () {
            return this.mscid != null;
        }
        

        public void setMscid (MSCID value) {
            this.mscid = value;
        }
        
  
        
        public NetworkTMSI getNetworkTMSI () {
            return this.networkTMSI;
        }

        
        public boolean isNetworkTMSIPresent () {
            return this.networkTMSI != null;
        }
        

        public void setNetworkTMSI (NetworkTMSI value) {
            this.networkTMSI = value;
        }
        
  
        
        public PC_SSN getPc_ssn () {
            return this.pc_ssn;
        }

        
        public boolean isPc_ssnPresent () {
            return this.pc_ssn != null;
        }
        

        public void setPc_ssn (PC_SSN value) {
            this.pc_ssn = value;
        }
        
  
        
        public SenderIdentificationNumber getSenderIdentificationNumber () {
            return this.senderIdentificationNumber;
        }

        
        public boolean isSenderIdentificationNumberPresent () {
            return this.senderIdentificationNumber != null;
        }
        

        public void setSenderIdentificationNumber (SenderIdentificationNumber value) {
            this.senderIdentificationNumber = value;
        }
        
  
        
        public SystemMyTypeCode getSystemMyTypeCode () {
            return this.systemMyTypeCode;
        }

        
        public boolean isSystemMyTypeCodePresent () {
            return this.systemMyTypeCode != null;
        }
        

        public void setSystemMyTypeCode (SystemMyTypeCode value) {
            this.systemMyTypeCode = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ParameterRequestSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ParameterRequestSequenceType = CoderFactory.getInstance().newPreparedElementData(ParameterRequestSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "ParameterRequest", isOptional =  false , hasTag =  true, tag = 18, 
        tagClass =  TagClass.Private  , hasDefaultValue =  false  )
    
        private ParameterRequestSequenceType  value;        

        
        
        public ParameterRequest () {
        }
        
        
        
        public void setValue(ParameterRequestSequenceType value) {
            this.value = value;
        }
        
        
        
        public ParameterRequestSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ParameterRequest.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            