
package com.agnity.map.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CamelRoutingInfo", isSet = false )
    public class CamelRoutingInfo implements IASN1PreparedElement {
            
        @ASN1Element ( name = "forwardingData", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ForwardingData forwardingData = null;
                
  
        @ASN1Element ( name = "gmscCamelSubscriptionInfo", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private GmscCamelSubscriptionInfo gmscCamelSubscriptionInfo = null;
                
  
        @ASN1Element ( name = "extensionContainer", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private ExtensionContainer extensionContainer = null;
                
  
        
        public ForwardingData getForwardingData () {
            return this.forwardingData;
        }

        
        public boolean isForwardingDataPresent () {
            return this.forwardingData != null;
        }
        

        public void setForwardingData (ForwardingData value) {
            this.forwardingData = value;
        }
        
  
        
        public GmscCamelSubscriptionInfo getGmscCamelSubscriptionInfo () {
            return this.gmscCamelSubscriptionInfo;
        }

        

        public void setGmscCamelSubscriptionInfo (GmscCamelSubscriptionInfo value) {
            this.gmscCamelSubscriptionInfo = value;
        }
        
  
        
        public ExtensionContainer getExtensionContainer () {
            return this.extensionContainer;
        }

        
        public boolean isExtensionContainerPresent () {
            return this.extensionContainer != null;
        }
        

        public void setExtensionContainer (ExtensionContainer value) {
            this.extensionContainer = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CamelRoutingInfo.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            