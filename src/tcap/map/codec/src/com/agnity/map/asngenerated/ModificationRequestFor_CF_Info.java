
package com.agnity.map.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "ModificationRequestFor_CF_Info", isSet = false )
    public class ModificationRequestFor_CF_Info implements IASN1PreparedElement {
            
        @ASN1Element ( name = "ss-Code", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private SS_Code ss_Code = null;
                
  
        @ASN1Element ( name = "basicService", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Ext_BasicServiceCode basicService = null;
                
  
        @ASN1Element ( name = "ss-Status", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private Ext_SS_Status ss_Status = null;
                
  
        @ASN1Element ( name = "forwardedToNumber", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private AddressString forwardedToNumber = null;
                
  
        @ASN1Element ( name = "forwardedToSubaddress", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private ISDN_SubaddressString forwardedToSubaddress = null;
                
  
        @ASN1Element ( name = "noReplyConditionTime", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private Ext_NoRepCondTime noReplyConditionTime = null;
                
  
        @ASN1Element ( name = "modifyNotificationToCSE", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private ModificationInstruction modifyNotificationToCSE = null;
                
  
        @ASN1Element ( name = "extensionContainer", isOptional =  true , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private ExtensionContainer extensionContainer = null;
                
  
        
        public SS_Code getSs_Code () {
            return this.ss_Code;
        }

        

        public void setSs_Code (SS_Code value) {
            this.ss_Code = value;
        }
        
  
        
        public Ext_BasicServiceCode getBasicService () {
            return this.basicService;
        }

        
        public boolean isBasicServicePresent () {
            return this.basicService != null;
        }
        

        public void setBasicService (Ext_BasicServiceCode value) {
            this.basicService = value;
        }
        
  
        
        public Ext_SS_Status getSs_Status () {
            return this.ss_Status;
        }

        
        public boolean isSs_StatusPresent () {
            return this.ss_Status != null;
        }
        

        public void setSs_Status (Ext_SS_Status value) {
            this.ss_Status = value;
        }
        
  
        
        public AddressString getForwardedToNumber () {
            return this.forwardedToNumber;
        }

        
        public boolean isForwardedToNumberPresent () {
            return this.forwardedToNumber != null;
        }
        

        public void setForwardedToNumber (AddressString value) {
            this.forwardedToNumber = value;
        }
        
  
        
        public ISDN_SubaddressString getForwardedToSubaddress () {
            return this.forwardedToSubaddress;
        }

        
        public boolean isForwardedToSubaddressPresent () {
            return this.forwardedToSubaddress != null;
        }
        

        public void setForwardedToSubaddress (ISDN_SubaddressString value) {
            this.forwardedToSubaddress = value;
        }
        
  
        
        public Ext_NoRepCondTime getNoReplyConditionTime () {
            return this.noReplyConditionTime;
        }

        
        public boolean isNoReplyConditionTimePresent () {
            return this.noReplyConditionTime != null;
        }
        

        public void setNoReplyConditionTime (Ext_NoRepCondTime value) {
            this.noReplyConditionTime = value;
        }
        
  
        
        public ModificationInstruction getModifyNotificationToCSE () {
            return this.modifyNotificationToCSE;
        }

        
        public boolean isModifyNotificationToCSEPresent () {
            return this.modifyNotificationToCSE != null;
        }
        

        public void setModifyNotificationToCSE (ModificationInstruction value) {
            this.modifyNotificationToCSE = value;
        }
        
  
        
        public ExtensionContainer getExtensionContainer () {
            return this.extensionContainer;
        }

        
        public boolean isExtensionContainerPresent () {
            return this.extensionContainer != null;
        }
        

        public void setExtensionContainer (ExtensionContainer value) {
            this.extensionContainer = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ModificationRequestFor_CF_Info.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            