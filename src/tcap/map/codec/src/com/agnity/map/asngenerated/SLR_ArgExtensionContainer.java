
package com.agnity.map.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "SLR_ArgExtensionContainer", isSet = false )
    public class SLR_ArgExtensionContainer implements IASN1PreparedElement {
            
        @ASN1Element ( name = "privateExtensionList", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private PrivateExtensionList privateExtensionList = null;
                
  
        @ASN1Element ( name = "slr-Arg-PCS-Extensions", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private SLR_Arg_PCS_Extensions slr_Arg_PCS_Extensions = null;
                
  
        
        public PrivateExtensionList getPrivateExtensionList () {
            return this.privateExtensionList;
        }

        
        public boolean isPrivateExtensionListPresent () {
            return this.privateExtensionList != null;
        }
        

        public void setPrivateExtensionList (PrivateExtensionList value) {
            this.privateExtensionList = value;
        }
        
  
        
        public SLR_Arg_PCS_Extensions getSlr_Arg_PCS_Extensions () {
            return this.slr_Arg_PCS_Extensions;
        }

        
        public boolean isSlr_Arg_PCS_ExtensionsPresent () {
            return this.slr_Arg_PCS_Extensions != null;
        }
        

        public void setSlr_Arg_PCS_Extensions (SLR_Arg_PCS_Extensions value) {
            this.slr_Arg_PCS_Extensions = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SLR_ArgExtensionContainer.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            