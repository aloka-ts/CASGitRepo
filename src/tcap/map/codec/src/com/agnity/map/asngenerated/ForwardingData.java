
package com.agnity.map.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "ForwardingData", isSet = false )
    public class ForwardingData implements IASN1PreparedElement {
            
        @ASN1Element ( name = "forwardedToNumber", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private ISDN_AddressString forwardedToNumber = null;
                
  
        @ASN1Element ( name = "forwardedToSubaddress", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private ISDN_SubaddressString forwardedToSubaddress = null;
                
  
        @ASN1Element ( name = "forwardingOptions", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private ForwardingOptions forwardingOptions = null;
                
  
        @ASN1Element ( name = "extensionContainer", isOptional =  true , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private ExtensionContainer extensionContainer = null;
                
  
        @ASN1Element ( name = "longForwardedToNumber", isOptional =  true , hasTag =  true, tag = 8 , hasDefaultValue =  false  )
    
	private FTN_AddressString longForwardedToNumber = null;
                
  
        
        public ISDN_AddressString getForwardedToNumber () {
            return this.forwardedToNumber;
        }

        
        public boolean isForwardedToNumberPresent () {
            return this.forwardedToNumber != null;
        }
        

        public void setForwardedToNumber (ISDN_AddressString value) {
            this.forwardedToNumber = value;
        }
        
  
        
        public ISDN_SubaddressString getForwardedToSubaddress () {
            return this.forwardedToSubaddress;
        }

        
        public boolean isForwardedToSubaddressPresent () {
            return this.forwardedToSubaddress != null;
        }
        

        public void setForwardedToSubaddress (ISDN_SubaddressString value) {
            this.forwardedToSubaddress = value;
        }
        
  
        
        public ForwardingOptions getForwardingOptions () {
            return this.forwardingOptions;
        }

        
        public boolean isForwardingOptionsPresent () {
            return this.forwardingOptions != null;
        }
        

        public void setForwardingOptions (ForwardingOptions value) {
            this.forwardingOptions = value;
        }
        
  
        
        public ExtensionContainer getExtensionContainer () {
            return this.extensionContainer;
        }

        
        public boolean isExtensionContainerPresent () {
            return this.extensionContainer != null;
        }
        

        public void setExtensionContainer (ExtensionContainer value) {
            this.extensionContainer = value;
        }
        
  
        
        public FTN_AddressString getLongForwardedToNumber () {
            return this.longForwardedToNumber;
        }

        
        public boolean isLongForwardedToNumberPresent () {
            return this.longForwardedToNumber != null;
        }
        

        public void setLongForwardedToNumber (FTN_AddressString value) {
            this.longForwardedToNumber = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ForwardingData.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            