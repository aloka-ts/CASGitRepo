
package com.agnity.map.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "BasicServiceCode" )
    public class BasicServiceCode implements IASN1PreparedElement {
            
        @ASN1Element ( name = "bearerService", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private BearerServiceCode bearerService = null;
                
  
        @ASN1Element ( name = "teleservice", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private TeleserviceCode teleservice = null;
                
  
        
        public BearerServiceCode getBearerService () {
            return this.bearerService;
        }

        public boolean isBearerServiceSelected () {
            return this.bearerService != null;
        }

        private void setBearerService (BearerServiceCode value) {
            this.bearerService = value;
        }

        
        public void selectBearerService (BearerServiceCode value) {
            this.bearerService = value;
            
                    setTeleservice(null);
                            
        }

        
  
        
        public TeleserviceCode getTeleservice () {
            return this.teleservice;
        }

        public boolean isTeleserviceSelected () {
            return this.teleservice != null;
        }

        private void setTeleservice (TeleserviceCode value) {
            this.teleservice = value;
        }

        
        public void selectTeleservice (TeleserviceCode value) {
            this.teleservice = value;
            
                    setBearerService(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BasicServiceCode.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            