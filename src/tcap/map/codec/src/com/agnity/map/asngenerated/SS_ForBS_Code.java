
package com.agnity.map.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "SS_ForBS_Code", isSet = false )
    public class SS_ForBS_Code implements IASN1PreparedElement {
            
        @ASN1Element ( name = "ss-Code", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SS_Code ss_Code = null;
                
  
        @ASN1Element ( name = "basicService", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private BasicServiceCode basicService = null;
                
  
        
        public SS_Code getSs_Code () {
            return this.ss_Code;
        }

        

        public void setSs_Code (SS_Code value) {
            this.ss_Code = value;
        }
        
  
        
        public BasicServiceCode getBasicService () {
            return this.basicService;
        }

        
        public boolean isBasicServicePresent () {
            return this.basicService != null;
        }
        

        public void setBasicService (BasicServiceCode value) {
            this.basicService = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SS_ForBS_Code.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            