
package com.agnity.camelv2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "BCSMEvent", isSet = false )
    public class BCSMEvent implements IASN1PreparedElement {
            
        @ASN1Element ( name = "eventTypeBCSM", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private EventTypeBCSM eventTypeBCSM = null;
                
  
        @ASN1Element ( name = "monitorMode", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private MonitorMode monitorMode = null;
                
  
        @ASN1Element ( name = "legID", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private LegID legID = null;
                
  
        @ASN1Element ( name = "dPSpecificCriteria", isOptional =  true , hasTag =  true, tag = 30 , hasDefaultValue =  false  )
    
	private DPSpecificCriteria dPSpecificCriteria = null;
                
  
        
        public EventTypeBCSM getEventTypeBCSM () {
            return this.eventTypeBCSM;
        }

        

        public void setEventTypeBCSM (EventTypeBCSM value) {
            this.eventTypeBCSM = value;
        }
        
  
        
        public MonitorMode getMonitorMode () {
            return this.monitorMode;
        }

        

        public void setMonitorMode (MonitorMode value) {
            this.monitorMode = value;
        }
        
  
        
        public LegID getLegID () {
            return this.legID;
        }

        
        public boolean isLegIDPresent () {
            return this.legID != null;
        }
        

        public void setLegID (LegID value) {
            this.legID = value;
        }
        
  
        
        public DPSpecificCriteria getDPSpecificCriteria () {
            return this.dPSpecificCriteria;
        }

        
        public boolean isDPSpecificCriteriaPresent () {
            return this.dPSpecificCriteria != null;
        }
        

        public void setDPSpecificCriteria (DPSpecificCriteria value) {
            this.dPSpecificCriteria = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BCSMEvent.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            