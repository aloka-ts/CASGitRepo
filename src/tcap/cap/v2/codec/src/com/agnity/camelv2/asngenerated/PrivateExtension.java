
package com.agnity.camelv2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PrivateExtension", isSet = false )
    public class PrivateExtension implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    
        @ASN1Element ( name = "extId", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Long extId = null;
                
  @ASN1Any( name = "" )
    
        @ASN1Element ( name = "extType", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private byte[] extType = null;
                
  
        
        public Long getExtId () {
            return this.extId;
        }

        

        public void setExtId (Long value) {
            this.extId = value;
        }
        
  
        
        public byte[] getExtType () {
            return this.extType;
        }

        
        public boolean isExtTypePresent () {
            return this.extType != null;
        }
        

        public void setExtType (byte[] value) {
            this.extType = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PrivateExtension.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            