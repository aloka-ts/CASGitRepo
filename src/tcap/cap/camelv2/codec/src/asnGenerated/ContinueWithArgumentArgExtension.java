
package asnGenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "ContinueWithArgumentArgExtension", isSet = false )
    public class ContinueWithArgumentArgExtension implements IASN1PreparedElement {
            
        @ASN1Element ( name = "legOrCallSegment", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private LegOrCallSegment legOrCallSegment = null;
                
  
        
        public LegOrCallSegment getLegOrCallSegment () {
            return this.legOrCallSegment;
        }

        
        public boolean isLegOrCallSegmentPresent () {
            return this.legOrCallSegment != null;
        }
        

        public void setLegOrCallSegment (LegOrCallSegment value) {
            this.legOrCallSegment = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ContinueWithArgumentArgExtension.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            