
package asnGenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "EventSpecificInformationBCSM" )
    public class EventSpecificInformationBCSM implements IASN1PreparedElement {
            

       @ASN1PreparedElement
       @ASN1Sequence ( name = "routeSelectFailureSpecificInfo" , isSet = false )
       public static class RouteSelectFailureSpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "failureCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause failureCause = null;
                
  
        
        public Cause getFailureCause () {
            return this.failureCause;
        }

        
        public boolean isFailureCausePresent () {
            return this.failureCause != null;
        }
        

        public void setFailureCause (Cause value) {
            this.failureCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_RouteSelectFailureSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_RouteSelectFailureSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(RouteSelectFailureSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "routeSelectFailureSpecificInfo", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private RouteSelectFailureSpecificInfoSequenceType routeSelectFailureSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oCalledPartyBusySpecificInfo" , isSet = false )
       public static class OCalledPartyBusySpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "busyCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause busyCause = null;
                
  
        
        public Cause getBusyCause () {
            return this.busyCause;
        }

        
        public boolean isBusyCausePresent () {
            return this.busyCause != null;
        }
        

        public void setBusyCause (Cause value) {
            this.busyCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_OCalledPartyBusySpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_OCalledPartyBusySpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(OCalledPartyBusySpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oCalledPartyBusySpecificInfo", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private OCalledPartyBusySpecificInfoSequenceType oCalledPartyBusySpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oNoAnswerSpecificInfo" , isSet = false )
       public static class ONoAnswerSpecificInfoSequenceType implements IASN1PreparedElement {
                
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ONoAnswerSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ONoAnswerSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(ONoAnswerSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oNoAnswerSpecificInfo", isOptional =  false , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private ONoAnswerSpecificInfoSequenceType oNoAnswerSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oAnswerSpecificInfo" , isSet = false )
       public static class OAnswerSpecificInfoSequenceType implements IASN1PreparedElement {
                
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_OAnswerSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_OAnswerSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(OAnswerSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oAnswerSpecificInfo", isOptional =  false , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private OAnswerSpecificInfoSequenceType oAnswerSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oDisconnectSpecificInfo" , isSet = false )
       public static class ODisconnectSpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "releaseCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause releaseCause = null;
                
  
        
        public Cause getReleaseCause () {
            return this.releaseCause;
        }

        
        public boolean isReleaseCausePresent () {
            return this.releaseCause != null;
        }
        

        public void setReleaseCause (Cause value) {
            this.releaseCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ODisconnectSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ODisconnectSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(ODisconnectSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oDisconnectSpecificInfo", isOptional =  false , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private ODisconnectSpecificInfoSequenceType oDisconnectSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "tBusySpecificInfo" , isSet = false )
       public static class TBusySpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "busyCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause busyCause = null;
                
  
        @ASN1Null ( name = "callForwarded" ) 
    
        @ASN1Element ( name = "callForwarded", isOptional =  true , hasTag =  true, tag = 50 , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject callForwarded = null;
                
  
        
        public Cause getBusyCause () {
            return this.busyCause;
        }

        
        public boolean isBusyCausePresent () {
            return this.busyCause != null;
        }
        

        public void setBusyCause (Cause value) {
            this.busyCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TBusySpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_TBusySpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(TBusySpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "tBusySpecificInfo", isOptional =  false , hasTag =  true, tag = 8 , hasDefaultValue =  false  )
    
	private TBusySpecificInfoSequenceType tBusySpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "tNoAnswerSpecificInfo" , isSet = false )
       public static class TNoAnswerSpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Null ( name = "callForwarded" ) 
    
        @ASN1Element ( name = "callForwarded", isOptional =  true , hasTag =  true, tag = 50 , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject callForwarded = null;
                
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TNoAnswerSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_TNoAnswerSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(TNoAnswerSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "tNoAnswerSpecificInfo", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private TNoAnswerSpecificInfoSequenceType tNoAnswerSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "tAnswerSpecificInfo" , isSet = false )
       public static class TAnswerSpecificInfoSequenceType implements IASN1PreparedElement {
                
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TAnswerSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_TAnswerSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(TAnswerSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "tAnswerSpecificInfo", isOptional =  false , hasTag =  true, tag = 10 , hasDefaultValue =  false  )
    
	private TAnswerSpecificInfoSequenceType tAnswerSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "tDisconnectSpecificInfo" , isSet = false )
       public static class TDisconnectSpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "releaseCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause releaseCause = null;
                
  
        
        public Cause getReleaseCause () {
            return this.releaseCause;
        }

        
        public boolean isReleaseCausePresent () {
            return this.releaseCause != null;
        }
        

        public void setReleaseCause (Cause value) {
            this.releaseCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TDisconnectSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_TDisconnectSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(TDisconnectSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "tDisconnectSpecificInfo", isOptional =  false , hasTag =  true, tag = 12 , hasDefaultValue =  false  )
    
	private TDisconnectSpecificInfoSequenceType tDisconnectSpecificInfo = null;
                
  
        
        public RouteSelectFailureSpecificInfoSequenceType getRouteSelectFailureSpecificInfo () {
            return this.routeSelectFailureSpecificInfo;
        }

        public boolean isRouteSelectFailureSpecificInfoSelected () {
            return this.routeSelectFailureSpecificInfo != null;
        }

        private void setRouteSelectFailureSpecificInfo (RouteSelectFailureSpecificInfoSequenceType value) {
            this.routeSelectFailureSpecificInfo = value;
        }

        
        public void selectRouteSelectFailureSpecificInfo (RouteSelectFailureSpecificInfoSequenceType value) {
            this.routeSelectFailureSpecificInfo = value;
            
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public OCalledPartyBusySpecificInfoSequenceType getOCalledPartyBusySpecificInfo () {
            return this.oCalledPartyBusySpecificInfo;
        }

        public boolean isOCalledPartyBusySpecificInfoSelected () {
            return this.oCalledPartyBusySpecificInfo != null;
        }

        private void setOCalledPartyBusySpecificInfo (OCalledPartyBusySpecificInfoSequenceType value) {
            this.oCalledPartyBusySpecificInfo = value;
        }

        
        public void selectOCalledPartyBusySpecificInfo (OCalledPartyBusySpecificInfoSequenceType value) {
            this.oCalledPartyBusySpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public ONoAnswerSpecificInfoSequenceType getONoAnswerSpecificInfo () {
            return this.oNoAnswerSpecificInfo;
        }

        public boolean isONoAnswerSpecificInfoSelected () {
            return this.oNoAnswerSpecificInfo != null;
        }

        private void setONoAnswerSpecificInfo (ONoAnswerSpecificInfoSequenceType value) {
            this.oNoAnswerSpecificInfo = value;
        }

        
        public void selectONoAnswerSpecificInfo (ONoAnswerSpecificInfoSequenceType value) {
            this.oNoAnswerSpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setOCalledPartyBusySpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public OAnswerSpecificInfoSequenceType getOAnswerSpecificInfo () {
            return this.oAnswerSpecificInfo;
        }

        public boolean isOAnswerSpecificInfoSelected () {
            return this.oAnswerSpecificInfo != null;
        }

        private void setOAnswerSpecificInfo (OAnswerSpecificInfoSequenceType value) {
            this.oAnswerSpecificInfo = value;
        }

        
        public void selectOAnswerSpecificInfo (OAnswerSpecificInfoSequenceType value) {
            this.oAnswerSpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public ODisconnectSpecificInfoSequenceType getODisconnectSpecificInfo () {
            return this.oDisconnectSpecificInfo;
        }

        public boolean isODisconnectSpecificInfoSelected () {
            return this.oDisconnectSpecificInfo != null;
        }

        private void setODisconnectSpecificInfo (ODisconnectSpecificInfoSequenceType value) {
            this.oDisconnectSpecificInfo = value;
        }

        
        public void selectODisconnectSpecificInfo (ODisconnectSpecificInfoSequenceType value) {
            this.oDisconnectSpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public TBusySpecificInfoSequenceType getTBusySpecificInfo () {
            return this.tBusySpecificInfo;
        }

        public boolean isTBusySpecificInfoSelected () {
            return this.tBusySpecificInfo != null;
        }

        private void setTBusySpecificInfo (TBusySpecificInfoSequenceType value) {
            this.tBusySpecificInfo = value;
        }

        
        public void selectTBusySpecificInfo (TBusySpecificInfoSequenceType value) {
            this.tBusySpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public TNoAnswerSpecificInfoSequenceType getTNoAnswerSpecificInfo () {
            return this.tNoAnswerSpecificInfo;
        }

        public boolean isTNoAnswerSpecificInfoSelected () {
            return this.tNoAnswerSpecificInfo != null;
        }

        private void setTNoAnswerSpecificInfo (TNoAnswerSpecificInfoSequenceType value) {
            this.tNoAnswerSpecificInfo = value;
        }

        
        public void selectTNoAnswerSpecificInfo (TNoAnswerSpecificInfoSequenceType value) {
            this.tNoAnswerSpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public TAnswerSpecificInfoSequenceType getTAnswerSpecificInfo () {
            return this.tAnswerSpecificInfo;
        }

        public boolean isTAnswerSpecificInfoSelected () {
            return this.tAnswerSpecificInfo != null;
        }

        private void setTAnswerSpecificInfo (TAnswerSpecificInfoSequenceType value) {
            this.tAnswerSpecificInfo = value;
        }

        
        public void selectTAnswerSpecificInfo (TAnswerSpecificInfoSequenceType value) {
            this.tAnswerSpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTDisconnectSpecificInfo(null);
                            
        }

        
  
        
        public TDisconnectSpecificInfoSequenceType getTDisconnectSpecificInfo () {
            return this.tDisconnectSpecificInfo;
        }

        public boolean isTDisconnectSpecificInfoSelected () {
            return this.tDisconnectSpecificInfo != null;
        }

        private void setTDisconnectSpecificInfo (TDisconnectSpecificInfoSequenceType value) {
            this.tDisconnectSpecificInfo = value;
        }

        
        public void selectTDisconnectSpecificInfo (TDisconnectSpecificInfoSequenceType value) {
            this.tDisconnectSpecificInfo = value;
            
                    setRouteSelectFailureSpecificInfo(null);
                
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setTBusySpecificInfo(null);
                
                    setTNoAnswerSpecificInfo(null);
                
                    setTAnswerSpecificInfo(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EventSpecificInformationBCSM.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            