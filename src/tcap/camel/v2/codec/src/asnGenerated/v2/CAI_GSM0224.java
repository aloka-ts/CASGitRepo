
package asnGenerated.v2;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CAI_GSM0224", isSet = false )
    public class CAI_GSM0224 implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8191L 
		
	   )
	   
        @ASN1Element ( name = "e1", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Integer e1 = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8191L 
		
	   )
	   
        @ASN1Element ( name = "e2", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Integer e2 = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8191L 
		
	   )
	   
        @ASN1Element ( name = "e3", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private Integer e3 = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8191L 
		
	   )
	   
        @ASN1Element ( name = "e4", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private Integer e4 = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8191L 
		
	   )
	   
        @ASN1Element ( name = "e5", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private Integer e5 = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8191L 
		
	   )
	   
        @ASN1Element ( name = "e6", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private Integer e6 = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8191L 
		
	   )
	   
        @ASN1Element ( name = "e7", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private Integer e7 = null;
                
  
        
        public Integer getE1 () {
            return this.e1;
        }

        
        public boolean isE1Present () {
            return this.e1 != null;
        }
        

        public void setE1 (Integer value) {
            this.e1 = value;
        }
        
  
        
        public Integer getE2 () {
            return this.e2;
        }

        
        public boolean isE2Present () {
            return this.e2 != null;
        }
        

        public void setE2 (Integer value) {
            this.e2 = value;
        }
        
  
        
        public Integer getE3 () {
            return this.e3;
        }

        
        public boolean isE3Present () {
            return this.e3 != null;
        }
        

        public void setE3 (Integer value) {
            this.e3 = value;
        }
        
  
        
        public Integer getE4 () {
            return this.e4;
        }

        
        public boolean isE4Present () {
            return this.e4 != null;
        }
        

        public void setE4 (Integer value) {
            this.e4 = value;
        }
        
  
        
        public Integer getE5 () {
            return this.e5;
        }

        
        public boolean isE5Present () {
            return this.e5 != null;
        }
        

        public void setE5 (Integer value) {
            this.e5 = value;
        }
        
  
        
        public Integer getE6 () {
            return this.e6;
        }

        
        public boolean isE6Present () {
            return this.e6 != null;
        }
        

        public void setE6 (Integer value) {
            this.e6 = value;
        }
        
  
        
        public Integer getE7 () {
            return this.e7;
        }

        
        public boolean isE7Present () {
            return this.e7 != null;
        }
        

        public void setE7 (Integer value) {
            this.e7 = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CAI_GSM0224.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            