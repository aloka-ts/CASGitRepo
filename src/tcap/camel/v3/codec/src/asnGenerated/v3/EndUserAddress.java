
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "EndUserAddress", isSet = false )
    public class EndUserAddress implements IASN1PreparedElement {
            @ASN1OctetString( name = "" )
    
            @ASN1SizeConstraint ( max = 1L )
        
        @ASN1Element ( name = "pDPTypeOrganization", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private byte[] pDPTypeOrganization = null;
                
  @ASN1OctetString( name = "" )
    
            @ASN1SizeConstraint ( max = 1L )
        
        @ASN1Element ( name = "pDPTypeNumber", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private byte[] pDPTypeNumber = null;
                
  @ASN1OctetString( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 63L 
		
	   )
	   
        @ASN1Element ( name = "pDPAddress", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private byte[] pDPAddress = null;
                
  
        
        public byte[] getPDPTypeOrganization () {
            return this.pDPTypeOrganization;
        }

        

        public void setPDPTypeOrganization (byte[] value) {
            this.pDPTypeOrganization = value;
        }
        
  
        
        public byte[] getPDPTypeNumber () {
            return this.pDPTypeNumber;
        }

        

        public void setPDPTypeNumber (byte[] value) {
            this.pDPTypeNumber = value;
        }
        
  
        
        public byte[] getPDPAddress () {
            return this.pDPAddress;
        }

        
        public boolean isPDPAddressPresent () {
            return this.pDPAddress != null;
        }
        

        public void setPDPAddress (byte[] value) {
            this.pDPAddress = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EndUserAddress.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            