
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "ChargingRollOver" )
    public class ChargingRollOver implements IASN1PreparedElement {
            
        @ASN1Element ( name = "transferredVolumeRollOver", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private TransferredVolumeRollOver transferredVolumeRollOver = null;
                
  
        @ASN1Element ( name = "elapsedTimeRollOver", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private ElapsedTimeRollOver elapsedTimeRollOver = null;
                
  
        
        public TransferredVolumeRollOver getTransferredVolumeRollOver () {
            return this.transferredVolumeRollOver;
        }

        public boolean isTransferredVolumeRollOverSelected () {
            return this.transferredVolumeRollOver != null;
        }

        private void setTransferredVolumeRollOver (TransferredVolumeRollOver value) {
            this.transferredVolumeRollOver = value;
        }

        
        public void selectTransferredVolumeRollOver (TransferredVolumeRollOver value) {
            this.transferredVolumeRollOver = value;
            
                    setElapsedTimeRollOver(null);
                            
        }

        
  
        
        public ElapsedTimeRollOver getElapsedTimeRollOver () {
            return this.elapsedTimeRollOver;
        }

        public boolean isElapsedTimeRollOverSelected () {
            return this.elapsedTimeRollOver != null;
        }

        private void setElapsedTimeRollOver (ElapsedTimeRollOver value) {
            this.elapsedTimeRollOver = value;
        }

        
        public void selectElapsedTimeRollOver (ElapsedTimeRollOver value) {
            this.elapsedTimeRollOver = value;
            
                    setTransferredVolumeRollOver(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ChargingRollOver.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            