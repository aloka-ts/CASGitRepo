
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "InformationToSend" )
    public class InformationToSend implements IASN1PreparedElement {
            
        @ASN1Element ( name = "inbandInfo", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private InbandInfo inbandInfo = null;
                
  
        @ASN1Element ( name = "tone", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Tone tone = null;
                
  
        
        public InbandInfo getInbandInfo () {
            return this.inbandInfo;
        }

        public boolean isInbandInfoSelected () {
            return this.inbandInfo != null;
        }

        private void setInbandInfo (InbandInfo value) {
            this.inbandInfo = value;
        }

        
        public void selectInbandInfo (InbandInfo value) {
            this.inbandInfo = value;
            
                    setTone(null);
                            
        }

        
  
        
        public Tone getTone () {
            return this.tone;
        }

        public boolean isToneSelected () {
            return this.tone != null;
        }

        private void setTone (Tone value) {
            this.tone = value;
        }

        
        public void selectTone (Tone value) {
            this.tone = value;
            
                    setInbandInfo(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InformationToSend.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            