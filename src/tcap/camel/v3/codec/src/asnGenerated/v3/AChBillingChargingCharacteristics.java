
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "AChBillingChargingCharacteristics" )
    public class AChBillingChargingCharacteristics implements IASN1PreparedElement {
            

       @ASN1PreparedElement
       @ASN1Sequence ( name = "actimeDurationCharging" , isSet = false )
       public static class ActimeDurationChargingSequenceType implements IASN1PreparedElement {
                @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 864000L 
		
	   )
	   
        @ASN1Element ( name = "maxCallPeriodDuration", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Integer maxCallPeriodDuration = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "releaseIfdurationExceeded", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  true  )
    
	private Boolean releaseIfdurationExceeded = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 86400L 
		
	   )
	   
        @ASN1Element ( name = "tariffSwitchInterval", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private Integer tariffSwitchInterval = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "actone", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  true  )
    
	private Boolean actone = null;
                
  
        @ASN1Element ( name = "extensions", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private ExtensionsArray extensions = null;
                
  
        
        public Integer getMaxCallPeriodDuration () {
            return this.maxCallPeriodDuration;
        }

        

        public void setMaxCallPeriodDuration (Integer value) {
            this.maxCallPeriodDuration = value;
        }
        
  
        
        public Boolean getReleaseIfdurationExceeded () {
            return this.releaseIfdurationExceeded;
        }

        

        public void setReleaseIfdurationExceeded (Boolean value) {
            this.releaseIfdurationExceeded = value;
        }
        
  
        
        public Integer getTariffSwitchInterval () {
            return this.tariffSwitchInterval;
        }

        
        public boolean isTariffSwitchIntervalPresent () {
            return this.tariffSwitchInterval != null;
        }
        

        public void setTariffSwitchInterval (Integer value) {
            this.tariffSwitchInterval = value;
        }
        
  
        
        public Boolean getActone () {
            return this.actone;
        }

        

        public void setActone (Boolean value) {
            this.actone = value;
        }
        
  
        
        public ExtensionsArray getExtensions () {
            return this.extensions;
        }

        
        public boolean isExtensionsPresent () {
            return this.extensions != null;
        }
        

        public void setExtensions (ExtensionsArray value) {
            this.extensions = value;
        }
        
  
                
                
        public void initWithDefaults() {
            Boolean param_ReleaseIfdurationExceeded =         
            null;
        setReleaseIfdurationExceeded(param_ReleaseIfdurationExceeded);
    Boolean param_Actone =         
            null;
        setActone(param_Actone);
    
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ActimeDurationChargingSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ActimeDurationChargingSequenceType = CoderFactory.getInstance().newPreparedElementData(ActimeDurationChargingSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "actimeDurationCharging", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private ActimeDurationChargingSequenceType actimeDurationCharging = null;
                
  
        
        public ActimeDurationChargingSequenceType getActimeDurationCharging () {
            return this.actimeDurationCharging;
        }

        public boolean isActimeDurationChargingSelected () {
            return this.actimeDurationCharging != null;
        }

        private void setActimeDurationCharging (ActimeDurationChargingSequenceType value) {
            this.actimeDurationCharging = value;
        }

        
        public void selectActimeDurationCharging (ActimeDurationChargingSequenceType value) {
            this.actimeDurationCharging = value;
                        
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AChBillingChargingCharacteristics.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            