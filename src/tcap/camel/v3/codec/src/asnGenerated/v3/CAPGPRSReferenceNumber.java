
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CAPGPRSReferenceNumber", isSet = false )
    public class CAPGPRSReferenceNumber implements IASN1PreparedElement {
            
        @ASN1Element ( name = "destinationReference", isOptional =  true , hasTag =  true, tag = 0, isImplicitTag = false  , hasDefaultValue =  false  )
    
	private Integer4 destinationReference = null;
                
  
        @ASN1Element ( name = "originationReference", isOptional =  true , hasTag =  true, tag = 1, isImplicitTag = false  , hasDefaultValue =  false  )
    
	private Integer4 originationReference = null;
                
  
        
        public Integer4 getDestinationReference () {
            return this.destinationReference;
        }

        
        public boolean isDestinationReferencePresent () {
            return this.destinationReference != null;
        }
        

        public void setDestinationReference (Integer4 value) {
            this.destinationReference = value;
        }
        
  
        
        public Integer4 getOriginationReference () {
            return this.originationReference;
        }

        
        public boolean isOriginationReferencePresent () {
            return this.originationReference != null;
        }
        

        public void setOriginationReference (Integer4 value) {
            this.originationReference = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CAPGPRSReferenceNumber.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            