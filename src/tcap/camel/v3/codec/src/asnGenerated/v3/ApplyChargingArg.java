
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "ApplyChargingArg", isSet = false )
    public class ApplyChargingArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "aChBillingChargingCharacteristics", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private AChBillingChargingCharacteristics aChBillingChargingCharacteristics = null;
                
  
        @ASN1Element ( name = "partyToCharge1", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  true  )
    
	private SendingSideID partyToCharge1 = null;
                
  
        @ASN1Element ( name = "extensions", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private ExtensionsArray extensions = null;
                
  
        @ASN1Element ( name = "aChChargingAddress", isOptional =  false , hasTag =  true, tag = 50 , hasDefaultValue =  false  )
    
	private AChChargingAddress aChChargingAddress = null;
                
  
        
        public AChBillingChargingCharacteristics getAChBillingChargingCharacteristics () {
            return this.aChBillingChargingCharacteristics;
        }

        

        public void setAChBillingChargingCharacteristics (AChBillingChargingCharacteristics value) {
            this.aChBillingChargingCharacteristics = value;
        }
        
  
        
        public SendingSideID getPartyToCharge1 () {
            return this.partyToCharge1;
        }

        

        public void setPartyToCharge1 (SendingSideID value) {
            this.partyToCharge1 = value;
        }
        
  
        
        public ExtensionsArray getExtensions () {
            return this.extensions;
        }

        
        public boolean isExtensionsPresent () {
            return this.extensions != null;
        }
        

        public void setExtensions (ExtensionsArray value) {
            this.extensions = value;
        }
        
  
        
        public AChChargingAddress getAChChargingAddress () {
            return this.aChChargingAddress;
        }

        

        public void setAChChargingAddress (AChChargingAddress value) {
            this.aChChargingAddress = value;
        }
        

        public void initWithDefaults() {
            SendingSideID param_PartyToCharge1 =new SendingSideID();
            LegType legType = new LegType(CoderUtils.defStringToOctetString("'01'H"));
            param_PartyToCharge1.selectSendingSideID(legType);
        setPartyToCharge1(param_PartyToCharge1);
    
        }
  
                    
        /*
        public void initWithDefaults() {
            SendingSideID param_PartyToCharge1 =         
            new SendingSideID(org.bn.coders.CoderUtils.defStringToOctetString("'01'H"));
        setPartyToCharge1(param_PartyToCharge1);
    
        }*/

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ApplyChargingArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            