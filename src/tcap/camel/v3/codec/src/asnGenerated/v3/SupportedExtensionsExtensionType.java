
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "SupportedExtensionsExtensionType" )
    public class SupportedExtensionsExtensionType implements IASN1PreparedElement {
            
        @ASN1Null ( name = "firstExtensionExtensionType" ) 
    
        @ASN1Element ( name = "firstExtensionExtensionType", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject firstExtensionExtensionType = null;
                
  
        
        public org.bn.types.NullObject getFirstExtensionExtensionType () {
            return this.firstExtensionExtensionType;
        }

        public boolean isFirstExtensionExtensionTypeSelected () {
            return this.firstExtensionExtensionType != null;
        }

        private void setFirstExtensionExtensionType (org.bn.types.NullObject value) {
            this.firstExtensionExtensionType = value;
        }

        
        public void selectFirstExtensionExtensionType () {
            selectFirstExtensionExtensionType (new org.bn.types.NullObject());
	}
	
        public void selectFirstExtensionExtensionType (org.bn.types.NullObject value) {
            this.firstExtensionExtensionType = value;
                        
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SupportedExtensionsExtensionType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            