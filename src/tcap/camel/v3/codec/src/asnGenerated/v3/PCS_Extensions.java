
package asnGenerated.v3;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PCS_Extensions", isSet = false )
    public class PCS_Extensions implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    
            @ASN1SizeConstraint ( max = 0L )
        
        @ASN1Element ( name = "foo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Long foo = null;
                
  
        
        public Long getFoo () {
            return this.foo;
        }

        
        public boolean isFooPresent () {
            return this.foo != null;
        }
        

        public void setFoo (Long value) {
            this.foo = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PCS_Extensions.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            