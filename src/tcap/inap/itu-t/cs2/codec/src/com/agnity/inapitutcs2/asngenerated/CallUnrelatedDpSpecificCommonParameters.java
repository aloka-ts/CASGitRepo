
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CallUnrelatedDpSpecificCommonParameters", isSet = false )
    public class CallUnrelatedDpSpecificCommonParameters implements IASN1PreparedElement {
            
        @ASN1Element ( name = "serviceAddressInformation", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private ServiceAddressInformation serviceAddressInformation = null;
                
  
        @ASN1Element ( name = "callingPartyNumber", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private CallingPartyNumber callingPartyNumber = null;
                
  
        @ASN1Element ( name = "locationNumber", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private LocationNumber locationNumber = null;
                
  
        @ASN1Element ( name = "terminalType", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  true  )
    
	private TerminalType terminalType = null;
                
  
@ASN1SequenceOf( name = "extensions", isSetOf = false ) 

    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 1L 
		
	   )
	   
        @ASN1Element ( name = "extensions", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private java.util.Collection<ExtensionField>  extensions = null;
                
  
        
        public ServiceAddressInformation getServiceAddressInformation () {
            return this.serviceAddressInformation;
        }

        

        public void setServiceAddressInformation (ServiceAddressInformation value) {
            this.serviceAddressInformation = value;
        }
        
  
        
        public CallingPartyNumber getCallingPartyNumber () {
            return this.callingPartyNumber;
        }

        
        public boolean isCallingPartyNumberPresent () {
            return this.callingPartyNumber != null;
        }
        

        public void setCallingPartyNumber (CallingPartyNumber value) {
            this.callingPartyNumber = value;
        }
        
  
        
        public LocationNumber getLocationNumber () {
            return this.locationNumber;
        }

        
        public boolean isLocationNumberPresent () {
            return this.locationNumber != null;
        }
        

        public void setLocationNumber (LocationNumber value) {
            this.locationNumber = value;
        }
        
  
        
        public TerminalType getTerminalType () {
            return this.terminalType;
        }

        

        public void setTerminalType (TerminalType value) {
            this.terminalType = value;
        }
        
  
        
        public java.util.Collection<ExtensionField>  getExtensions () {
            return this.extensions;
        }

        
        public boolean isExtensionsPresent () {
            return this.extensions != null;
        }
        

        public void setExtensions (java.util.Collection<ExtensionField>  value) {
            this.extensions = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            TerminalType param_TerminalType =         
            null;
        setTerminalType(param_TerminalType);
    
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CallUnrelatedDpSpecificCommonParameters.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            
