
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "Constraints", isSet = false )
    public class Constraints implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 127L 
		
	   )
	   
        @ASN1Element ( name = "maximumNumberOfDigits", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Integer maximumNumberOfDigits = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 127L 
		
	   )
	   
        @ASN1Element ( name = "minimumNumberOfDigits", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private Integer minimumNumberOfDigits = null;
                
  
        @ASN1Element ( name = "typeOfRequestedInfo", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  true  )
    
	private InfoType typeOfRequestedInfo = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 127L 
		
	   )
	   
        @ASN1Element ( name = "numberOfAllowedRetries", isOptional =  false , hasTag =  true, tag = 4 , hasDefaultValue =  true  )
    
	private Integer numberOfAllowedRetries = null;
                
  
        
        public Integer getMaximumNumberOfDigits () {
            return this.maximumNumberOfDigits;
        }

        

        public void setMaximumNumberOfDigits (Integer value) {
            this.maximumNumberOfDigits = value;
        }
        
  
        
        public Integer getMinimumNumberOfDigits () {
            return this.minimumNumberOfDigits;
        }

        

        public void setMinimumNumberOfDigits (Integer value) {
            this.minimumNumberOfDigits = value;
        }
        
  
        
        public InfoType getTypeOfRequestedInfo () {
            return this.typeOfRequestedInfo;
        }

        

        public void setTypeOfRequestedInfo (InfoType value) {
            this.typeOfRequestedInfo = value;
        }
        
  
        
        public Integer getNumberOfAllowedRetries () {
            return this.numberOfAllowedRetries;
        }

        

        public void setNumberOfAllowedRetries (Integer value) {
            this.numberOfAllowedRetries = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            InfoType param_TypeOfRequestedInfo =         
            null;
        setTypeOfRequestedInfo(param_TypeOfRequestedInfo);
    Integer param_NumberOfAllowedRetries =         
            new Integer ( 0);
        setNumberOfAllowedRetries(param_NumberOfAllowedRetries);
    
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Constraints.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            
