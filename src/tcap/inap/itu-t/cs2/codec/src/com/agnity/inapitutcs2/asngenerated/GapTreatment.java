
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "GapTreatment" )
    public class GapTreatment implements IASN1PreparedElement {
            
        @ASN1Element ( name = "informationToSend", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private InformationToSend informationToSend = null;
                
  
        @ASN1Element ( name = "releaseCause", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Cause releaseCause = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "both" , isSet = false )
       public static class BothSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "informationToSend", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private InformationToSend informationToSend = null;
                
  
        @ASN1Element ( name = "releaseCause", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Cause releaseCause = null;
                
  
        
        public InformationToSend getInformationToSend () {
            return this.informationToSend;
        }

        

        public void setInformationToSend (InformationToSend value) {
            this.informationToSend = value;
        }
        
  
        
        public Cause getReleaseCause () {
            return this.releaseCause;
        }

        

        public void setReleaseCause (Cause value) {
            this.releaseCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_BothSequenceType;
        }

       private static IASN1PreparedElementData preparedData_BothSequenceType = CoderFactory.getInstance().newPreparedElementData(BothSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "both", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private BothSequenceType both = null;
                
  
        
        public InformationToSend getInformationToSend () {
            return this.informationToSend;
        }

        public boolean isInformationToSendSelected () {
            return this.informationToSend != null;
        }

        private void setInformationToSend (InformationToSend value) {
            this.informationToSend = value;
        }

        
        public void selectInformationToSend (InformationToSend value) {
            this.informationToSend = value;
            
                    setReleaseCause(null);
                
                    setBoth(null);
                            
        }

        
  
        
        public Cause getReleaseCause () {
            return this.releaseCause;
        }

        public boolean isReleaseCauseSelected () {
            return this.releaseCause != null;
        }

        private void setReleaseCause (Cause value) {
            this.releaseCause = value;
        }

        
        public void selectReleaseCause (Cause value) {
            this.releaseCause = value;
            
                    setInformationToSend(null);
                
                    setBoth(null);
                            
        }

        
  
        
        public BothSequenceType getBoth () {
            return this.both;
        }

        public boolean isBothSelected () {
            return this.both != null;
        }

        private void setBoth (BothSequenceType value) {
            this.both = value;
        }

        
        public void selectBoth (BothSequenceType value) {
            this.both = value;
            
                    setInformationToSend(null);
                
                    setReleaseCause(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(GapTreatment.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            