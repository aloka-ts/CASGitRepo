
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "NumberMatch" )
    public class NumberMatch implements IASN1PreparedElement {
            
        @ASN1Element ( name = "initialMatch", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private CalledPartyNumber initialMatch = null;
                
  
        @ASN1Element ( name = "totalMatch", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private CalledPartyNumber totalMatch = null;
                
  
        
        public CalledPartyNumber getInitialMatch () {
            return this.initialMatch;
        }

        public boolean isInitialMatchSelected () {
            return this.initialMatch != null;
        }

        private void setInitialMatch (CalledPartyNumber value) {
            this.initialMatch = value;
        }

        
        public void selectInitialMatch (CalledPartyNumber value) {
            this.initialMatch = value;
            
                    setTotalMatch(null);
                            
        }

        
  
        
        public CalledPartyNumber getTotalMatch () {
            return this.totalMatch;
        }

        public boolean isTotalMatchSelected () {
            return this.totalMatch != null;
        }

        private void setTotalMatch (CalledPartyNumber value) {
            this.totalMatch = value;
        }

        
        public void selectTotalMatch (CalledPartyNumber value) {
            this.totalMatch = value;
            
                    setInitialMatch(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(NumberMatch.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            