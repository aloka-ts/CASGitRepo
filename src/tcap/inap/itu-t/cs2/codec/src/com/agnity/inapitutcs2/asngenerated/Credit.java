
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "Credit" )
    public class Credit implements IASN1PreparedElement {
            
        @ASN1Element ( name = "currency", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CurrencyValue currency = null;
                
  
        @ASN1Element ( name = "units", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CreditUnit units = null;
                
  
        
        public CurrencyValue getCurrency () {
            return this.currency;
        }

        public boolean isCurrencySelected () {
            return this.currency != null;
        }

        private void setCurrency (CurrencyValue value) {
            this.currency = value;
        }

        
        public void selectCurrency (CurrencyValue value) {
            this.currency = value;
            
                    setUnits(null);
                            
        }

        
  
        
        public CreditUnit getUnits () {
            return this.units;
        }

        public boolean isUnitsSelected () {
            return this.units != null;
        }

        private void setUnits (CreditUnit value) {
            this.units = value;
        }

        
        public void selectUnits (CreditUnit value) {
            this.units = value;
            
                    setCurrency(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Credit.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            