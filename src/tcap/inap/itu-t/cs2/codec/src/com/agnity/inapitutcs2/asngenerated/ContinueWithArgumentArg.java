
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "ContinueWithArgumentArg", isSet = false )
    public class ContinueWithArgumentArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "legID", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  true  )
    
	private LegID legID = null;
                
  
        @ASN1Element ( name = "alertingPattern", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private AlertingPattern alertingPattern = null;
                
  
        @ASN1Element ( name = "genericName", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private GenericName genericName = null;
                
  
        @ASN1Element ( name = "iNServiceCompatibilityResponse", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private INServiceCompatibilityResponse iNServiceCompatibilityResponse = null;
                
  
        @ASN1Element ( name = "forwardGVNS", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private ForwardGVNS forwardGVNS = null;
                
  
        @ASN1Element ( name = "backwardGVNS", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private BackwardGVNS backwardGVNS = null;
                
  
@ASN1SequenceOf( name = "extensions", isSetOf = false ) 

    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 5L 
		
	   )
	   
        @ASN1Element ( name = "extensions", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private java.util.Collection<ExtensionField>  extensions = null;
                
  
        @ASN1Element ( name = "serviceInteractionIndicatorsTwo", isOptional =  true , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private ServiceInteractionIndicatorsTwo serviceInteractionIndicatorsTwo = null;
                
  
        
        public LegID getLegID () {
            return this.legID;
        }

        

        public void setLegID (LegID value) {
            this.legID = value;
        }
        
  
        
        public AlertingPattern getAlertingPattern () {
            return this.alertingPattern;
        }

        
        public boolean isAlertingPatternPresent () {
            return this.alertingPattern != null;
        }
        

        public void setAlertingPattern (AlertingPattern value) {
            this.alertingPattern = value;
        }
        
  
        
        public GenericName getGenericName () {
            return this.genericName;
        }

        
        public boolean isGenericNamePresent () {
            return this.genericName != null;
        }
        

        public void setGenericName (GenericName value) {
            this.genericName = value;
        }
        
  
        
        public INServiceCompatibilityResponse getINServiceCompatibilityResponse () {
            return this.iNServiceCompatibilityResponse;
        }

        
        public boolean isINServiceCompatibilityResponsePresent () {
            return this.iNServiceCompatibilityResponse != null;
        }
        

        public void setINServiceCompatibilityResponse (INServiceCompatibilityResponse value) {
            this.iNServiceCompatibilityResponse = value;
        }
        
  
        
        public ForwardGVNS getForwardGVNS () {
            return this.forwardGVNS;
        }

        
        public boolean isForwardGVNSPresent () {
            return this.forwardGVNS != null;
        }
        

        public void setForwardGVNS (ForwardGVNS value) {
            this.forwardGVNS = value;
        }
        
  
        
        public BackwardGVNS getBackwardGVNS () {
            return this.backwardGVNS;
        }

        
        public boolean isBackwardGVNSPresent () {
            return this.backwardGVNS != null;
        }
        

        public void setBackwardGVNS (BackwardGVNS value) {
            this.backwardGVNS = value;
        }
        
  
        
        public java.util.Collection<ExtensionField>  getExtensions () {
            return this.extensions;
        }

        
        public boolean isExtensionsPresent () {
            return this.extensions != null;
        }
        

        public void setExtensions (java.util.Collection<ExtensionField>  value) {
            this.extensions = value;
        }
        
  
        
        public ServiceInteractionIndicatorsTwo getServiceInteractionIndicatorsTwo () {
            return this.serviceInteractionIndicatorsTwo;
        }

        
        public boolean isServiceInteractionIndicatorsTwoPresent () {
            return this.serviceInteractionIndicatorsTwo != null;
        }
        

        public void setServiceInteractionIndicatorsTwo (ServiceInteractionIndicatorsTwo value) {
            this.serviceInteractionIndicatorsTwo = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            LegID param_LegID =         
            null;
        setLegID(param_LegID);
    
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ContinueWithArgumentArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            