
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "EntityReleasedArg" )
    public class EntityReleasedArg implements IASN1PreparedElement {
            

       @ASN1PreparedElement
       @ASN1Sequence ( name = "cSFailure" , isSet = false )
       public static class CSFailureSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "callSegmentID", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private CallSegmentID callSegmentID = null;
                
  
        @ASN1Element ( name = "reason", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Reason reason = null;
                
  
        @ASN1Element ( name = "cause", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private Cause cause = null;
                
  
        
        public CallSegmentID getCallSegmentID () {
            return this.callSegmentID;
        }

        

        public void setCallSegmentID (CallSegmentID value) {
            this.callSegmentID = value;
        }
        
  
        
        public Reason getReason () {
            return this.reason;
        }

        
        public boolean isReasonPresent () {
            return this.reason != null;
        }
        

        public void setReason (Reason value) {
            this.reason = value;
        }
        
  
        
        public Cause getCause () {
            return this.cause;
        }

        
        public boolean isCausePresent () {
            return this.cause != null;
        }
        

        public void setCause (Cause value) {
            this.cause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_CSFailureSequenceType;
        }

       private static IASN1PreparedElementData preparedData_CSFailureSequenceType = CoderFactory.getInstance().newPreparedElementData(CSFailureSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "cSFailure", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private CSFailureSequenceType cSFailure = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "bCSMFailure" , isSet = false )
       public static class BCSMFailureSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "legID", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private LegID legID = null;
                
  
        @ASN1Element ( name = "reason", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Reason reason = null;
                
  
        @ASN1Element ( name = "cause", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private Cause cause = null;
                
  
        
        public LegID getLegID () {
            return this.legID;
        }

        

        public void setLegID (LegID value) {
            this.legID = value;
        }
        
  
        
        public Reason getReason () {
            return this.reason;
        }

        
        public boolean isReasonPresent () {
            return this.reason != null;
        }
        

        public void setReason (Reason value) {
            this.reason = value;
        }
        
  
        
        public Cause getCause () {
            return this.cause;
        }

        
        public boolean isCausePresent () {
            return this.cause != null;
        }
        

        public void setCause (Cause value) {
            this.cause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_BCSMFailureSequenceType;
        }

       private static IASN1PreparedElementData preparedData_BCSMFailureSequenceType = CoderFactory.getInstance().newPreparedElementData(BCSMFailureSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "bCSMFailure", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private BCSMFailureSequenceType bCSMFailure = null;
                
  
        
        public CSFailureSequenceType getCSFailure () {
            return this.cSFailure;
        }

        public boolean isCSFailureSelected () {
            return this.cSFailure != null;
        }

        private void setCSFailure (CSFailureSequenceType value) {
            this.cSFailure = value;
        }

        
        public void selectCSFailure (CSFailureSequenceType value) {
            this.cSFailure = value;
            
                    setBCSMFailure(null);
                            
        }

        
  
        
        public BCSMFailureSequenceType getBCSMFailure () {
            return this.bCSMFailure;
        }

        public boolean isBCSMFailureSelected () {
            return this.bCSMFailure != null;
        }

        private void setBCSMFailure (BCSMFailureSequenceType value) {
            this.bCSMFailure = value;
        }

        
        public void selectBCSMFailure (BCSMFailureSequenceType value) {
            this.bCSMFailure = value;
            
                    setCSFailure(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EntityReleasedArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            