
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "RoutingAddress" )
    public class RoutingAddress implements IASN1PreparedElement {
            
        @ASN1Null ( name = "routingProhibited" ) 
    
        @ASN1Element ( name = "routingProhibited", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject routingProhibited = null;
                
  
        @ASN1Element ( name = "destinationRoutingAddress", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private DestinationRoutingAddress destinationRoutingAddress = null;
                
  
        
        public org.bn.types.NullObject getRoutingProhibited () {
            return this.routingProhibited;
        }

        public boolean isRoutingProhibitedSelected () {
            return this.routingProhibited != null;
        }

        private void setRoutingProhibited (org.bn.types.NullObject value) {
            this.routingProhibited = value;
        }

        
        public void selectRoutingProhibited () {
            selectRoutingProhibited (new org.bn.types.NullObject());
	}
	
        public void selectRoutingProhibited (org.bn.types.NullObject value) {
            this.routingProhibited = value;
            
                    setDestinationRoutingAddress(null);
                            
        }

        
  
        
        public DestinationRoutingAddress getDestinationRoutingAddress () {
            return this.destinationRoutingAddress;
        }

        public boolean isDestinationRoutingAddressSelected () {
            return this.destinationRoutingAddress != null;
        }

        private void setDestinationRoutingAddress (DestinationRoutingAddress value) {
            this.destinationRoutingAddress = value;
        }

        
        public void selectDestinationRoutingAddress (DestinationRoutingAddress value) {
            this.destinationRoutingAddress = value;
            
                    setRoutingProhibited(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(RoutingAddress.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            