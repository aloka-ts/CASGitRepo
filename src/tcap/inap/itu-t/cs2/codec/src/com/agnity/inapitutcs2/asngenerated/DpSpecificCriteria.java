
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "DpSpecificCriteria" )
    public class DpSpecificCriteria implements IASN1PreparedElement {
            
        @ASN1Element ( name = "numberOfDigits", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private NumberOfDigits numberOfDigits = null;
                
  
        @ASN1Element ( name = "applicationTimer", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private ApplicationTimer applicationTimer = null;
                
  
        @ASN1Element ( name = "midCallControlInfo", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private MidCallControlInfo midCallControlInfo = null;
                
  
        
        public NumberOfDigits getNumberOfDigits () {
            return this.numberOfDigits;
        }

        public boolean isNumberOfDigitsSelected () {
            return this.numberOfDigits != null;
        }

        private void setNumberOfDigits (NumberOfDigits value) {
            this.numberOfDigits = value;
        }

        
        public void selectNumberOfDigits (NumberOfDigits value) {
            this.numberOfDigits = value;
            
                    setApplicationTimer(null);
                
                    setMidCallControlInfo(null);
                            
        }

        
  
        
        public ApplicationTimer getApplicationTimer () {
            return this.applicationTimer;
        }

        public boolean isApplicationTimerSelected () {
            return this.applicationTimer != null;
        }

        private void setApplicationTimer (ApplicationTimer value) {
            this.applicationTimer = value;
        }

        
        public void selectApplicationTimer (ApplicationTimer value) {
            this.applicationTimer = value;
            
                    setNumberOfDigits(null);
                
                    setMidCallControlInfo(null);
                            
        }

        
  
        
        public MidCallControlInfo getMidCallControlInfo () {
            return this.midCallControlInfo;
        }

        public boolean isMidCallControlInfoSelected () {
            return this.midCallControlInfo != null;
        }

        private void setMidCallControlInfo (MidCallControlInfo value) {
            this.midCallControlInfo = value;
        }

        
        public void selectMidCallControlInfo (MidCallControlInfo value) {
            this.midCallControlInfo = value;
            
                    setNumberOfDigits(null);
                
                    setApplicationTimer(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(DpSpecificCriteria.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            