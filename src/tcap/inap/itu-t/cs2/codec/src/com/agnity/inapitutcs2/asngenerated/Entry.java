
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "Entry" )
    public class Entry implements IASN1PreparedElement {
            @ASN1ObjectIdentifier( name = "" )
    
        @ASN1Element ( name = "agreements", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private ObjectIdentifier agreements = null;
                
  
        @ASN1Element ( name = "networkSpecific", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Integer4 networkSpecific = null;
                
  
        
        public ObjectIdentifier getAgreements () {
            return this.agreements;
        }

        public boolean isAgreementsSelected () {
            return this.agreements != null;
        }

        private void setAgreements (ObjectIdentifier value) {
            this.agreements = value;
        }

        
        public void selectAgreements (ObjectIdentifier value) {
            this.agreements = value;
            
                    setNetworkSpecific(null);
                            
        }

        
  
        
        public Integer4 getNetworkSpecific () {
            return this.networkSpecific;
        }

        public boolean isNetworkSpecificSelected () {
            return this.networkSpecific != null;
        }

        private void setNetworkSpecific (Integer4 value) {
            this.networkSpecific = value;
        }

        
        public void selectNetworkSpecific (Integer4 value) {
            this.networkSpecific = value;
            
                    setAgreements(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Entry.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            