
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "FilteringCharacteristics" )
    public class FilteringCharacteristics implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 32000L 
		
	   )
	   
        @ASN1Element ( name = "interval", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Integer interval = null;
                
  
        @ASN1Element ( name = "numberOfCalls", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Integer4 numberOfCalls = null;
                
  
        
        public Integer getInterval () {
            return this.interval;
        }

        public boolean isIntervalSelected () {
            return this.interval != null;
        }

        private void setInterval (Integer value) {
            this.interval = value;
        }

        
        public void selectInterval (Integer value) {
            this.interval = value;
            
                    setNumberOfCalls(null);
                            
        }

        
  
        
        public Integer4 getNumberOfCalls () {
            return this.numberOfCalls;
        }

        public boolean isNumberOfCallsSelected () {
            return this.numberOfCalls != null;
        }

        private void setNumberOfCalls (Integer4 value) {
            this.numberOfCalls = value;
        }

        
        public void selectNumberOfCalls (Integer4 value) {
            this.numberOfCalls = value;
            
                    setInterval(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(FilteringCharacteristics.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            