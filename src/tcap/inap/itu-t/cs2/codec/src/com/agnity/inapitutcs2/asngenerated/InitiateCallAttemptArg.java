
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "InitiateCallAttemptArg", isSet = false )
    public class InitiateCallAttemptArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "destinationRoutingAddress", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private DestinationRoutingAddress destinationRoutingAddress = null;
                
  
        @ASN1Element ( name = "alertingPattern", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private AlertingPattern alertingPattern = null;
                
  
        @ASN1Element ( name = "iSDNAccessRelatedInformation", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private ISDNAccessRelatedInformation iSDNAccessRelatedInformation = null;
                
  
        @ASN1Element ( name = "travellingClassMark", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private TravellingClassMark travellingClassMark = null;
                
  
@ASN1SequenceOf( name = "extensions", isSetOf = false ) 

    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 5L 
		
	   )
	   
        @ASN1Element ( name = "extensions", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private java.util.Collection<ExtensionField>  extensions = null;
                
  
        @ASN1Element ( name = "serviceInteractionIndicators", isOptional =  true , hasTag =  true, tag = 29 , hasDefaultValue =  false  )
    
	private ServiceInteractionIndicators serviceInteractionIndicators = null;
                
  
        @ASN1Element ( name = "callingPartyNumber", isOptional =  true , hasTag =  true, tag = 30 , hasDefaultValue =  false  )
    
	private CallingPartyNumber callingPartyNumber = null;
                
  
        @ASN1Element ( name = "legToBeCreated", isOptional =  false , hasTag =  true, tag = 5 , hasDefaultValue =  true  )
    
	private LegID legToBeCreated = null;
                
  
        @ASN1Element ( name = "newCallSegment", isOptional =  false , hasTag =  true, tag = 6 , hasDefaultValue =  true  )
    
	private CallSegmentID newCallSegment = null;
                
  
        @ASN1Element ( name = "iNServiceCompatibilityResponse", isOptional =  true , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private INServiceCompatibilityResponse iNServiceCompatibilityResponse = null;
                
  
        @ASN1Element ( name = "serviceInteractionIndicatorsTwo", isOptional =  true , hasTag =  true, tag = 8 , hasDefaultValue =  false  )
    
	private ServiceInteractionIndicatorsTwo serviceInteractionIndicatorsTwo = null;
                
  
        
        public DestinationRoutingAddress getDestinationRoutingAddress () {
            return this.destinationRoutingAddress;
        }

        

        public void setDestinationRoutingAddress (DestinationRoutingAddress value) {
            this.destinationRoutingAddress = value;
        }
        
  
        
        public AlertingPattern getAlertingPattern () {
            return this.alertingPattern;
        }

        
        public boolean isAlertingPatternPresent () {
            return this.alertingPattern != null;
        }
        

        public void setAlertingPattern (AlertingPattern value) {
            this.alertingPattern = value;
        }
        
  
        
        public ISDNAccessRelatedInformation getISDNAccessRelatedInformation () {
            return this.iSDNAccessRelatedInformation;
        }

        
        public boolean isISDNAccessRelatedInformationPresent () {
            return this.iSDNAccessRelatedInformation != null;
        }
        

        public void setISDNAccessRelatedInformation (ISDNAccessRelatedInformation value) {
            this.iSDNAccessRelatedInformation = value;
        }
        
  
        
        public TravellingClassMark getTravellingClassMark () {
            return this.travellingClassMark;
        }

        
        public boolean isTravellingClassMarkPresent () {
            return this.travellingClassMark != null;
        }
        

        public void setTravellingClassMark (TravellingClassMark value) {
            this.travellingClassMark = value;
        }
        
  
        
        public java.util.Collection<ExtensionField>  getExtensions () {
            return this.extensions;
        }

        
        public boolean isExtensionsPresent () {
            return this.extensions != null;
        }
        

        public void setExtensions (java.util.Collection<ExtensionField>  value) {
            this.extensions = value;
        }
        
  
        
        public ServiceInteractionIndicators getServiceInteractionIndicators () {
            return this.serviceInteractionIndicators;
        }

        
        public boolean isServiceInteractionIndicatorsPresent () {
            return this.serviceInteractionIndicators != null;
        }
        

        public void setServiceInteractionIndicators (ServiceInteractionIndicators value) {
            this.serviceInteractionIndicators = value;
        }
        
  
        
        public CallingPartyNumber getCallingPartyNumber () {
            return this.callingPartyNumber;
        }

        
        public boolean isCallingPartyNumberPresent () {
            return this.callingPartyNumber != null;
        }
        

        public void setCallingPartyNumber (CallingPartyNumber value) {
            this.callingPartyNumber = value;
        }
        
  
        
        public LegID getLegToBeCreated () {
            return this.legToBeCreated;
        }

        

        public void setLegToBeCreated (LegID value) {
            this.legToBeCreated = value;
        }
        
  
        
        public CallSegmentID getNewCallSegment () {
            return this.newCallSegment;
        }

        

        public void setNewCallSegment (CallSegmentID value) {
            this.newCallSegment = value;
        }
        
  
        
        public INServiceCompatibilityResponse getINServiceCompatibilityResponse () {
            return this.iNServiceCompatibilityResponse;
        }

        
        public boolean isINServiceCompatibilityResponsePresent () {
            return this.iNServiceCompatibilityResponse != null;
        }
        

        public void setINServiceCompatibilityResponse (INServiceCompatibilityResponse value) {
            this.iNServiceCompatibilityResponse = value;
        }
        
  
        
        public ServiceInteractionIndicatorsTwo getServiceInteractionIndicatorsTwo () {
            return this.serviceInteractionIndicatorsTwo;
        }

        
        public boolean isServiceInteractionIndicatorsTwoPresent () {
            return this.serviceInteractionIndicatorsTwo != null;
        }
        

        public void setServiceInteractionIndicatorsTwo (ServiceInteractionIndicatorsTwo value) {
            this.serviceInteractionIndicatorsTwo = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            LegID param_LegToBeCreated =         
            null;
        setLegToBeCreated(param_LegToBeCreated);
    CallSegmentID param_NewCallSegment =         
            null;
        setNewCallSegment(param_NewCallSegment);
    
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InitiateCallAttemptArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            
