
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "ReconnectArg", isSet = false )
    public class ReconnectArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "notificationDuration", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private ApplicationTimer notificationDuration = null;
                
  
        @ASN1Element ( name = "alertingPattern", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private AlertingPattern alertingPattern = null;
                
  
        @ASN1Element ( name = "displayInformation", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private DisplayInformation displayInformation = null;
                
  
@ASN1SequenceOf( name = "extensions", isSetOf = false ) 

    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 5L 
		
	   )
	   
        @ASN1Element ( name = "extensions", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private java.util.Collection<ExtensionField>  extensions = null;
                
  
        @ASN1Element ( name = "callSegmentID", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private CallSegmentID callSegmentID = null;
                
  
        
        public ApplicationTimer getNotificationDuration () {
            return this.notificationDuration;
        }

        
        public boolean isNotificationDurationPresent () {
            return this.notificationDuration != null;
        }
        

        public void setNotificationDuration (ApplicationTimer value) {
            this.notificationDuration = value;
        }
        
  
        
        public AlertingPattern getAlertingPattern () {
            return this.alertingPattern;
        }

        
        public boolean isAlertingPatternPresent () {
            return this.alertingPattern != null;
        }
        

        public void setAlertingPattern (AlertingPattern value) {
            this.alertingPattern = value;
        }
        
  
        
        public DisplayInformation getDisplayInformation () {
            return this.displayInformation;
        }

        
        public boolean isDisplayInformationPresent () {
            return this.displayInformation != null;
        }
        

        public void setDisplayInformation (DisplayInformation value) {
            this.displayInformation = value;
        }
        
  
        
        public java.util.Collection<ExtensionField>  getExtensions () {
            return this.extensions;
        }

        
        public boolean isExtensionsPresent () {
            return this.extensions != null;
        }
        

        public void setExtensions (java.util.Collection<ExtensionField>  value) {
            this.extensions = value;
        }
        
  
        
        public CallSegmentID getCallSegmentID () {
            return this.callSegmentID;
        }

        
        public boolean isCallSegmentIDPresent () {
            return this.callSegmentID != null;
        }
        

        public void setCallSegmentID (CallSegmentID value) {
            this.callSegmentID = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ReconnectArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            