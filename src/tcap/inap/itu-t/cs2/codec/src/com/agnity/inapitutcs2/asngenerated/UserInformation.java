
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "UserInformation", isSet = false )
    public class UserInformation implements IASN1PreparedElement {
            
        @ASN1Element ( name = "infoToSend", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private InfoToSend infoToSend = null;
                
  
        @ASN1Element ( name = "constraints", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Constraints constraints = null;
                
  
        @ASN1Element ( name = "errorInfo", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private InfoToSend errorInfo = null;
                
  
        
        public InfoToSend getInfoToSend () {
            return this.infoToSend;
        }

        

        public void setInfoToSend (InfoToSend value) {
            this.infoToSend = value;
        }
        
  
        
        public Constraints getConstraints () {
            return this.constraints;
        }

        

        public void setConstraints (Constraints value) {
            this.constraints = value;
        }
        
  
        
        public InfoToSend getErrorInfo () {
            return this.errorInfo;
        }

        
        public boolean isErrorInfoPresent () {
            return this.errorInfo != null;
        }
        

        public void setErrorInfo (InfoToSend value) {
            this.errorInfo = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(UserInformation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            