
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CounterAndValue", isSet = false )
    public class CounterAndValue implements IASN1PreparedElement {
            
        @ASN1Element ( name = "counterID", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private CounterID counterID = null;
                
  
        @ASN1Element ( name = "counterValue", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Integer4 counterValue = null;
                
  
        
        public CounterID getCounterID () {
            return this.counterID;
        }

        

        public void setCounterID (CounterID value) {
            this.counterID = value;
        }
        
  
        
        public Integer4 getCounterValue () {
            return this.counterValue;
        }

        

        public void setCounterValue (Integer4 value) {
            this.counterValue = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CounterAndValue.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            