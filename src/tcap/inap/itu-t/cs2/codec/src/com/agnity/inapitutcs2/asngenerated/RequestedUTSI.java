
package com.agnity.inapitutcs2.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "RequestedUTSI", isSet = false )
    public class RequestedUTSI implements IASN1PreparedElement {
            
        @ASN1Element ( name = "uSIServiceIndicator", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private USIServiceIndicator uSIServiceIndicator = null;
                
  
        @ASN1Element ( name = "uSImonitorMode", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private USIMonitorMode uSImonitorMode = null;
                
  
        @ASN1Element ( name = "legID", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  true  )
    
	private LegID legID = null;
                
  
        
        public USIServiceIndicator getUSIServiceIndicator () {
            return this.uSIServiceIndicator;
        }

        

        public void setUSIServiceIndicator (USIServiceIndicator value) {
            this.uSIServiceIndicator = value;
        }
        
  
        
        public USIMonitorMode getUSImonitorMode () {
            return this.uSImonitorMode;
        }

        

        public void setUSImonitorMode (USIMonitorMode value) {
            this.uSImonitorMode = value;
        }
        
  
        
        public LegID getLegID () {
            return this.legID;
        }

        

        public void setLegID (LegID value) {
            this.legID = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            LegID param_LegID =         
            null;
        setLegID(param_LegID);
    
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(RequestedUTSI.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            