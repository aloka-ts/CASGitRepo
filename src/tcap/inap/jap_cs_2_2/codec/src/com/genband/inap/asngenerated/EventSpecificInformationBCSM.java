
package com.genband.inap.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "EventSpecificInformationBCSM" )
    public class EventSpecificInformationBCSM implements IASN1PreparedElement {
            

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oCalledPartyBusySpecificInfo" , isSet = false )
       public static class OCalledPartyBusySpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "busyCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause busyCause = null;
                
  
        
        public Cause getBusyCause () {
            return this.busyCause;
        }

        
        public boolean isBusyCausePresent () {
            return this.busyCause != null;
        }
        

        public void setBusyCause (Cause value) {
            this.busyCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_OCalledPartyBusySpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_OCalledPartyBusySpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(OCalledPartyBusySpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oCalledPartyBusySpecificInfo", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private OCalledPartyBusySpecificInfoSequenceType oCalledPartyBusySpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oNoAnswerSpecificInfo" , isSet = false )
       public static class ONoAnswerSpecificInfoSequenceType implements IASN1PreparedElement {
                
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ONoAnswerSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ONoAnswerSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(ONoAnswerSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oNoAnswerSpecificInfo", isOptional =  false , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private ONoAnswerSpecificInfoSequenceType oNoAnswerSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oAnswerSpecificInfo" , isSet = false )
       public static class OAnswerSpecificInfoSequenceType implements IASN1PreparedElement {
                
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_OAnswerSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_OAnswerSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(OAnswerSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oAnswerSpecificInfo", isOptional =  false , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private OAnswerSpecificInfoSequenceType oAnswerSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oDisconnectSpecificInfo" , isSet = false )
       public static class ODisconnectSpecificInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "releaseCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause releaseCause = null;
                
  
        @ASN1Element ( name = "connectTime", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private Integer4 connectTime = null;
                
  
        
        public Cause getReleaseCause () {
            return this.releaseCause;
        }

        
        public boolean isReleaseCausePresent () {
            return this.releaseCause != null;
        }
        

        public void setReleaseCause (Cause value) {
            this.releaseCause = value;
        }
        
  
        
        public Integer4 getConnectTime () {
            return this.connectTime;
        }

        
        public boolean isConnectTimePresent () {
            return this.connectTime != null;
        }
        

        public void setConnectTime (Integer4 value) {
            this.connectTime = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ODisconnectSpecificInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ODisconnectSpecificInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(ODisconnectSpecificInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oDisconnectSpecificInfo", isOptional =  false , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private ODisconnectSpecificInfoSequenceType oDisconnectSpecificInfo = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "oAbandon" , isSet = false )
       public static class OAbandonSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "abandonCause", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Cause abandonCause = null;
                
  
        
        public Cause getAbandonCause () {
            return this.abandonCause;
        }

        
        public boolean isAbandonCausePresent () {
            return this.abandonCause != null;
        }
        

        public void setAbandonCause (Cause value) {
            this.abandonCause = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_OAbandonSequenceType;
        }

       private static IASN1PreparedElementData preparedData_OAbandonSequenceType = CoderFactory.getInstance().newPreparedElementData(OAbandonSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "oAbandon", isOptional =  false , hasTag =  true, tag = 21 , hasDefaultValue =  false  )
    
	private OAbandonSequenceType oAbandon = null;
                
  
        
        public OCalledPartyBusySpecificInfoSequenceType getOCalledPartyBusySpecificInfo () {
            return this.oCalledPartyBusySpecificInfo;
        }

        public boolean isOCalledPartyBusySpecificInfoSelected () {
            return this.oCalledPartyBusySpecificInfo != null;
        }

        private void setOCalledPartyBusySpecificInfo (OCalledPartyBusySpecificInfoSequenceType value) {
            this.oCalledPartyBusySpecificInfo = value;
        }

        
        public void selectOCalledPartyBusySpecificInfo (OCalledPartyBusySpecificInfoSequenceType value) {
            this.oCalledPartyBusySpecificInfo = value;
            
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setOAbandon(null);
                            
        }

        
  
        
        public ONoAnswerSpecificInfoSequenceType getONoAnswerSpecificInfo () {
            return this.oNoAnswerSpecificInfo;
        }

        public boolean isONoAnswerSpecificInfoSelected () {
            return this.oNoAnswerSpecificInfo != null;
        }

        private void setONoAnswerSpecificInfo (ONoAnswerSpecificInfoSequenceType value) {
            this.oNoAnswerSpecificInfo = value;
        }

        
        public void selectONoAnswerSpecificInfo (ONoAnswerSpecificInfoSequenceType value) {
            this.oNoAnswerSpecificInfo = value;
            
                    setOCalledPartyBusySpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setOAbandon(null);
                            
        }

        
  
        
        public OAnswerSpecificInfoSequenceType getOAnswerSpecificInfo () {
            return this.oAnswerSpecificInfo;
        }

        public boolean isOAnswerSpecificInfoSelected () {
            return this.oAnswerSpecificInfo != null;
        }

        private void setOAnswerSpecificInfo (OAnswerSpecificInfoSequenceType value) {
            this.oAnswerSpecificInfo = value;
        }

        
        public void selectOAnswerSpecificInfo (OAnswerSpecificInfoSequenceType value) {
            this.oAnswerSpecificInfo = value;
            
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                
                    setOAbandon(null);
                            
        }

        
  
        
        public ODisconnectSpecificInfoSequenceType getODisconnectSpecificInfo () {
            return this.oDisconnectSpecificInfo;
        }

        public boolean isODisconnectSpecificInfoSelected () {
            return this.oDisconnectSpecificInfo != null;
        }

        private void setODisconnectSpecificInfo (ODisconnectSpecificInfoSequenceType value) {
            this.oDisconnectSpecificInfo = value;
        }

        
        public void selectODisconnectSpecificInfo (ODisconnectSpecificInfoSequenceType value) {
            this.oDisconnectSpecificInfo = value;
            
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setOAbandon(null);
                            
        }

        
  
        
        public OAbandonSequenceType getOAbandon () {
            return this.oAbandon;
        }

        public boolean isOAbandonSelected () {
            return this.oAbandon != null;
        }

        private void setOAbandon (OAbandonSequenceType value) {
            this.oAbandon = value;
        }

        
        public void selectOAbandon (OAbandonSequenceType value) {
            this.oAbandon = value;
            
                    setOCalledPartyBusySpecificInfo(null);
                
                    setONoAnswerSpecificInfo(null);
                
                    setOAnswerSpecificInfo(null);
                
                    setODisconnectSpecificInfo(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EventSpecificInformationBCSM.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            