
package com.genband.inap.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "InitialDPArg", isSet = false )
    public class InitialDPArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "serviceKey", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private ServiceKey serviceKey = null;
                
  
        @ASN1Element ( name = "dialledDigits", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private CalledPartyNumber dialledDigits = null;
                
  
        @ASN1Element ( name = "calledPartyNumber", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private CalledPartyNumber calledPartyNumber = null;
                
  
        @ASN1Element ( name = "callingPartyNumber", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private CallingPartyNumber callingPartyNumber = null;
                
  
        @ASN1Element ( name = "callingPartysCategory", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private CallingPartysCategory callingPartysCategory = null;
                
  
        @ASN1Element ( name = "callingPartySubaddress", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private CallingPartySubaddress callingPartySubaddress = null;
                
  
        @ASN1Element ( name = "miscCallInfo", isOptional =  true , hasTag =  true, tag = 11 , hasDefaultValue =  false  )
    
	private MiscCallInfo miscCallInfo = null;
                
  
        @ASN1Element ( name = "terminalType", isOptional =  true , hasTag =  true, tag = 14 , hasDefaultValue =  false  )
    
	private TerminalType terminalType = null;
                
  
@ASN1SequenceOf( name = "", isSetOf = false ) 

    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 1L 
		
	   )
	   
        @ASN1Element ( name = "extensions", isOptional =  true , hasTag =  true, tag = 15 , hasDefaultValue =  false  )
    
	private java.util.Collection<ExtensionField>  extensions = null;
                
  
        @ASN1Element ( name = "forwardCallIndicators", isOptional =  true , hasTag =  true, tag = 26 , hasDefaultValue =  false  )
    
	private ForwardCallIndicators forwardCallIndicators = null;
                
  
        @ASN1Element ( name = "bearerCapability", isOptional =  true , hasTag =  true, tag = 27 , hasDefaultValue =  false  )
    
	private BearerCapability bearerCapability = null;
                
  
        @ASN1Element ( name = "eventTypeBCSM", isOptional =  true , hasTag =  true, tag = 28 , hasDefaultValue =  false  )
    
	private EventTypeBCSM eventTypeBCSM = null;
                
  
        @ASN1Element ( name = "genericNumbers", isOptional =  true , hasTag =  true, tag = 31 , hasDefaultValue =  false  )
    
	private GenericNumbers genericNumbers = null;
                
  
        
        public ServiceKey getServiceKey () {
            return this.serviceKey;
        }

        
        public boolean isServiceKeyPresent () {
            return this.serviceKey != null;
        }
        

        public void setServiceKey (ServiceKey value) {
            this.serviceKey = value;
        }
        
  
        
        public CalledPartyNumber getDialledDigits () {
            return this.dialledDigits;
        }

        
        public boolean isDialledDigitsPresent () {
            return this.dialledDigits != null;
        }
        

        public void setDialledDigits (CalledPartyNumber value) {
            this.dialledDigits = value;
        }
        
  
        
        public CalledPartyNumber getCalledPartyNumber () {
            return this.calledPartyNumber;
        }

        
        public boolean isCalledPartyNumberPresent () {
            return this.calledPartyNumber != null;
        }
        

        public void setCalledPartyNumber (CalledPartyNumber value) {
            this.calledPartyNumber = value;
        }
        
  
        
        public CallingPartyNumber getCallingPartyNumber () {
            return this.callingPartyNumber;
        }

        
        public boolean isCallingPartyNumberPresent () {
            return this.callingPartyNumber != null;
        }
        

        public void setCallingPartyNumber (CallingPartyNumber value) {
            this.callingPartyNumber = value;
        }
        
  
        
        public CallingPartysCategory getCallingPartysCategory () {
            return this.callingPartysCategory;
        }

        
        public boolean isCallingPartysCategoryPresent () {
            return this.callingPartysCategory != null;
        }
        

        public void setCallingPartysCategory (CallingPartysCategory value) {
            this.callingPartysCategory = value;
        }
        
  
        
        public CallingPartySubaddress getCallingPartySubaddress () {
            return this.callingPartySubaddress;
        }

        
        public boolean isCallingPartySubaddressPresent () {
            return this.callingPartySubaddress != null;
        }
        

        public void setCallingPartySubaddress (CallingPartySubaddress value) {
            this.callingPartySubaddress = value;
        }
        
  
        
        public MiscCallInfo getMiscCallInfo () {
            return this.miscCallInfo;
        }

        
        public boolean isMiscCallInfoPresent () {
            return this.miscCallInfo != null;
        }
        

        public void setMiscCallInfo (MiscCallInfo value) {
            this.miscCallInfo = value;
        }
        
  
        
        public TerminalType getTerminalType () {
            return this.terminalType;
        }

        
        public boolean isTerminalTypePresent () {
            return this.terminalType != null;
        }
        

        public void setTerminalType (TerminalType value) {
            this.terminalType = value;
        }
        
  
        
        public java.util.Collection<ExtensionField>  getExtensions () {
            return this.extensions;
        }

        
        public boolean isExtensionsPresent () {
            return this.extensions != null;
        }
        

        public void setExtensions (java.util.Collection<ExtensionField>  value) {
            this.extensions = value;
        }
        
  
        
        public ForwardCallIndicators getForwardCallIndicators () {
            return this.forwardCallIndicators;
        }

        
        public boolean isForwardCallIndicatorsPresent () {
            return this.forwardCallIndicators != null;
        }
        

        public void setForwardCallIndicators (ForwardCallIndicators value) {
            this.forwardCallIndicators = value;
        }
        
  
        
        public BearerCapability getBearerCapability () {
            return this.bearerCapability;
        }

        
        public boolean isBearerCapabilityPresent () {
            return this.bearerCapability != null;
        }
        

        public void setBearerCapability (BearerCapability value) {
            this.bearerCapability = value;
        }
        
  
        
        public EventTypeBCSM getEventTypeBCSM () {
            return this.eventTypeBCSM;
        }

        
        public boolean isEventTypeBCSMPresent () {
            return this.eventTypeBCSM != null;
        }
        

        public void setEventTypeBCSM (EventTypeBCSM value) {
            this.eventTypeBCSM = value;
        }
        
  
        
        public GenericNumbers getGenericNumbers () {
            return this.genericNumbers;
        }

        
        public boolean isGenericNumbersPresent () {
            return this.genericNumbers != null;
        }
        

        public void setGenericNumbers (GenericNumbers value) {
            this.genericNumbers = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InitialDPArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            