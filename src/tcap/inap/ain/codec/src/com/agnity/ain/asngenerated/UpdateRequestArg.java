
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "UpdateRequestArg", isSet = false )
    public class UpdateRequestArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "userID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UserID userID = null;
                
  
        @ASN1Element ( name = "triggerCriteriaFlag", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TriggerCriteriaFlag triggerCriteriaFlag = null;
                
  
        @ASN1Element ( name = "bearerCapability", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private BearerCapability bearerCapability = null;
                
  
        @ASN1Element ( name = "controlEncountered", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ControlEncountered controlEncountered = null;
                
  
        @ASN1Element ( name = "failureCause", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private FailureCause failureCause = null;
                
  
        
        public UserID getUserID () {
            return this.userID;
        }

        

        public void setUserID (UserID value) {
            this.userID = value;
        }
        
  
        
        public TriggerCriteriaFlag getTriggerCriteriaFlag () {
            return this.triggerCriteriaFlag;
        }

        
        public boolean isTriggerCriteriaFlagPresent () {
            return this.triggerCriteriaFlag != null;
        }
        

        public void setTriggerCriteriaFlag (TriggerCriteriaFlag value) {
            this.triggerCriteriaFlag = value;
        }
        
  
        
        public BearerCapability getBearerCapability () {
            return this.bearerCapability;
        }

        
        public boolean isBearerCapabilityPresent () {
            return this.bearerCapability != null;
        }
        

        public void setBearerCapability (BearerCapability value) {
            this.bearerCapability = value;
        }
        
  
        
        public ControlEncountered getControlEncountered () {
            return this.controlEncountered;
        }

        
        public boolean isControlEncounteredPresent () {
            return this.controlEncountered != null;
        }
        

        public void setControlEncountered (ControlEncountered value) {
            this.controlEncountered = value;
        }
        
  
        
        public FailureCause getFailureCause () {
            return this.failureCause;
        }

        
        public boolean isFailureCausePresent () {
            return this.failureCause != null;
        }
        

        public void setFailureCause (FailureCause value) {
            this.failureCause = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(UpdateRequestArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            