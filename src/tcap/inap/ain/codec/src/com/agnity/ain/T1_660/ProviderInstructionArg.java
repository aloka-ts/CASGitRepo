
package com.agnity.ain.T1_660;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//
import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;
@ASN1PreparedElement
@ASN1Sequence(name = "ProviderInstructionArg", isSet = true)
public class ProviderInstructionArg implements IASN1PreparedElement {
	@ASN1Element(name = "endUserNumber", isOptional = false, hasTag = true, tag = 10, hasDefaultValue = false)
	private ServiceKey endUserNumber = null;
	@ASN1Element(name = "callingPartyAni", isOptional = false, hasTag = true, tag = 4, hasDefaultValue = false)
	private Digits callingPartyAni = null;
	@ASN1Element(name = "cgpLata", isOptional = false, hasTag = true, tag = 4, hasDefaultValue = false)
	private Digits cgpLata = null;
	@ASN1Element(name = "oli", isOptional = false, hasTag = true, tag = 37, tagClass = TagClass.Private, hasDefaultValue = false)
	private OriginatingStationType oli = null;
	@ASN1Element(name = "cicSupport", isOptional = true, hasTag = true, tag = 72, tagClass = TagClass.Private, hasDefaultValue = false)
	private CICExpansion cicSupport = null;
	public ServiceKey getEndUserNumber() {
		return this.endUserNumber;
	}
	public void setEndUserNumber(ServiceKey value) {
		this.endUserNumber = value;
	}
	public Digits getCallingPartyAni() {
		return this.callingPartyAni;
	}
	public void setCallingPartyAni(Digits value) {
		this.callingPartyAni = value;
	}
	public Digits getCgpLata() {
		return this.cgpLata;
	}
	public void setCgpLata(Digits value) {
		this.cgpLata = value;
	}
	public OriginatingStationType getOli() {
		return this.oli;
	}
	public void setOli(OriginatingStationType value) {
		this.oli = value;
	}
	public CICExpansion getCicSupport() {
		return this.cicSupport;
	}
	public boolean isCicSupportPresent() {
		return this.cicSupport != null;
	}
	public void setCicSupport(CICExpansion value) {
		this.cicSupport = value;
	}
	public void initWithDefaults() {
	}
	private static IASN1PreparedElementData preparedData = CoderFactory.getInstance()
			.newPreparedElementData(ProviderInstructionArg.class);
	public IASN1PreparedElementData getPreparedData() {
		return preparedData;
	}
}