
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "Action3" )
    public class Action3 implements IASN1PreparedElement {
            
        @ASN1Element ( name = "activationStatecode", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private ActivationStateCode activationStatecode = null;
                
  
        @ASN1Element ( name = "edit", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private EditSpecificEntry edit = null;
                
  
        @ASN1Element ( name = "edit1", isOptional =  false , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private EditAllEntries edit1 = null;
                
  
        
        public ActivationStateCode getActivationStatecode () {
            return this.activationStatecode;
        }

        public boolean isActivationStatecodeSelected () {
            return this.activationStatecode != null;
        }

        private void setActivationStatecode (ActivationStateCode value) {
            this.activationStatecode = value;
        }

        
        public void selectActivationStatecode (ActivationStateCode value) {
            this.activationStatecode = value;
            
                    setEdit(null);
                
                    setEdit1(null);
                            
        }

        
  
        
        public EditSpecificEntry getEdit () {
            return this.edit;
        }

        public boolean isEditSelected () {
            return this.edit != null;
        }

        private void setEdit (EditSpecificEntry value) {
            this.edit = value;
        }

        
        public void selectEdit (EditSpecificEntry value) {
            this.edit = value;
            
                    setActivationStatecode(null);
                
                    setEdit1(null);
                            
        }

        
  
        
        public EditAllEntries getEdit1 () {
            return this.edit1;
        }

        public boolean isEdit1Selected () {
            return this.edit1 != null;
        }

        private void setEdit1 (EditAllEntries value) {
            this.edit1 = value;
        }

        
        public void selectEdit1 (EditAllEntries value) {
            this.edit1 = value;
            
                    setActivationStatecode(null);
                
                    setEdit(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Action3.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            