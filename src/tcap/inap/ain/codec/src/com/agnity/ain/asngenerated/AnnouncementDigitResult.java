
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "AnnouncementDigitResult", isSet = false )
    public class AnnouncementDigitResult implements IASN1PreparedElement {
            
        @ASN1Element ( name = "iPCollectedDigits", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private IPCollectedDigits iPCollectedDigits = null;
                
  
        @ASN1Element ( name = "interruptionStatus", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private InterruptionStatus interruptionStatus = null;
                
  
        @ASN1Element ( name = "iPResourceMeasurement", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private IPResourceMeasurement iPResourceMeasurement = null;
                
  
        
        public IPCollectedDigits getIPCollectedDigits () {
            return this.iPCollectedDigits;
        }

        

        public void setIPCollectedDigits (IPCollectedDigits value) {
            this.iPCollectedDigits = value;
        }
        
  
        
        public InterruptionStatus getInterruptionStatus () {
            return this.interruptionStatus;
        }

        
        public boolean isInterruptionStatusPresent () {
            return this.interruptionStatus != null;
        }
        

        public void setInterruptionStatus (InterruptionStatus value) {
            this.interruptionStatus = value;
        }
        
  
        
        public IPResourceMeasurement getIPResourceMeasurement () {
            return this.iPResourceMeasurement;
        }

        
        public boolean isIPResourceMeasurementPresent () {
            return this.iPResourceMeasurement != null;
        }
        

        public void setIPResourceMeasurement (IPResourceMeasurement value) {
            this.iPResourceMeasurement = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AnnouncementDigitResult.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            