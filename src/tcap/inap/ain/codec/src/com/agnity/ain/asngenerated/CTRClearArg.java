
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CTRClearArg", isSet = false )
    public class CTRClearArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "clearCause", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ClearCause clearCause = null;
                
  
        @ASN1Element ( name = "legID", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private LegID legID = null;
                
  
        @ASN1Element ( name = "ccID", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CcID ccID = null;
                
  
        @ASN1Element ( name = "bCMType", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private BCMType bCMType = null;
                
  
        @ASN1Element ( name = "pointInCall", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private PointInCall pointInCall = null;
                
  
        @ASN1Element ( name = "collectedDigits", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CollectedDigits collectedDigits = null;
                
  
        @ASN1Element ( name = "collectedAddressInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CollectedAddressInfo collectedAddressInfo = null;
                
  
        @ASN1Element ( name = "carrier", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Carrier carrier = null;
                
  
        @ASN1Element ( name = "failureCause", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private FailureCause failureCause = null;
                
  
        @ASN1Element ( name = "amp1", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Amp1 amp1 = null;
                
  
        @ASN1Element ( name = "amp2", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Amp2 amp2 = null;
                
  
        @ASN1Element ( name = "aMAMeasurement", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private AMAMeasurement aMAMeasurement = null;
                
  
        @ASN1Element ( name = "clearCauseData", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ClearCauseData clearCauseData = null;
                
  
        @ASN1Element ( name = "iPReturnBlock", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private IPReturnBlock iPReturnBlock = null;
                
  
        @ASN1Element ( name = "extensionParameter", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ExtensionParameter extensionParameter = null;
                
  
        
        public ClearCause getClearCause () {
            return this.clearCause;
        }

        

        public void setClearCause (ClearCause value) {
            this.clearCause = value;
        }
        
  
        
        public LegID getLegID () {
            return this.legID;
        }

        
        public boolean isLegIDPresent () {
            return this.legID != null;
        }
        

        public void setLegID (LegID value) {
            this.legID = value;
        }
        
  
        
        public CcID getCcID () {
            return this.ccID;
        }

        
        public boolean isCcIDPresent () {
            return this.ccID != null;
        }
        

        public void setCcID (CcID value) {
            this.ccID = value;
        }
        
  
        
        public BCMType getBCMType () {
            return this.bCMType;
        }

        
        public boolean isBCMTypePresent () {
            return this.bCMType != null;
        }
        

        public void setBCMType (BCMType value) {
            this.bCMType = value;
        }
        
  
        
        public PointInCall getPointInCall () {
            return this.pointInCall;
        }

        
        public boolean isPointInCallPresent () {
            return this.pointInCall != null;
        }
        

        public void setPointInCall (PointInCall value) {
            this.pointInCall = value;
        }
        
  
        
        public CollectedDigits getCollectedDigits () {
            return this.collectedDigits;
        }

        
        public boolean isCollectedDigitsPresent () {
            return this.collectedDigits != null;
        }
        

        public void setCollectedDigits (CollectedDigits value) {
            this.collectedDigits = value;
        }
        
  
        
        public CollectedAddressInfo getCollectedAddressInfo () {
            return this.collectedAddressInfo;
        }

        
        public boolean isCollectedAddressInfoPresent () {
            return this.collectedAddressInfo != null;
        }
        

        public void setCollectedAddressInfo (CollectedAddressInfo value) {
            this.collectedAddressInfo = value;
        }
        
  
        
        public Carrier getCarrier () {
            return this.carrier;
        }

        
        public boolean isCarrierPresent () {
            return this.carrier != null;
        }
        

        public void setCarrier (Carrier value) {
            this.carrier = value;
        }
        
  
        
        public FailureCause getFailureCause () {
            return this.failureCause;
        }

        
        public boolean isFailureCausePresent () {
            return this.failureCause != null;
        }
        

        public void setFailureCause (FailureCause value) {
            this.failureCause = value;
        }
        
  
        
        public Amp1 getAmp1 () {
            return this.amp1;
        }

        
        public boolean isAmp1Present () {
            return this.amp1 != null;
        }
        

        public void setAmp1 (Amp1 value) {
            this.amp1 = value;
        }
        
  
        
        public Amp2 getAmp2 () {
            return this.amp2;
        }

        
        public boolean isAmp2Present () {
            return this.amp2 != null;
        }
        

        public void setAmp2 (Amp2 value) {
            this.amp2 = value;
        }
        
  
        
        public AMAMeasurement getAMAMeasurement () {
            return this.aMAMeasurement;
        }

        
        public boolean isAMAMeasurementPresent () {
            return this.aMAMeasurement != null;
        }
        

        public void setAMAMeasurement (AMAMeasurement value) {
            this.aMAMeasurement = value;
        }
        
  
        
        public ClearCauseData getClearCauseData () {
            return this.clearCauseData;
        }

        
        public boolean isClearCauseDataPresent () {
            return this.clearCauseData != null;
        }
        

        public void setClearCauseData (ClearCauseData value) {
            this.clearCauseData = value;
        }
        
  
        
        public IPReturnBlock getIPReturnBlock () {
            return this.iPReturnBlock;
        }

        
        public boolean isIPReturnBlockPresent () {
            return this.iPReturnBlock != null;
        }
        

        public void setIPReturnBlock (IPReturnBlock value) {
            this.iPReturnBlock = value;
        }
        
  
        
        public ExtensionParameter getExtensionParameter () {
            return this.extensionParameter;
        }

        
        public boolean isExtensionParameterPresent () {
            return this.extensionParameter != null;
        }
        

        public void setExtensionParameter (ExtensionParameter value) {
            this.extensionParameter = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CTRClearArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            