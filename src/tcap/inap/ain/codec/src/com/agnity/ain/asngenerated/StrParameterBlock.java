
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "StrParameterBlock" )
    public class StrParameterBlock implements IASN1PreparedElement {
                
        
        
    @ASN1PreparedElement
    @ASN1Choice ( name = "StrParameterBlock" )
    public static class StrParameterBlockChoiceType implements IASN1PreparedElement {
            
        @ASN1Element ( name = "announcementBlock", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private AnnouncementBlock announcementBlock = null;
                
  
        @ASN1Element ( name = "announcementDigitBlock", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private AnnouncementDigitBlock announcementDigitBlock = null;
                
  
        @ASN1Element ( name = "flexParameterBlock", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private FlexParameterBlock flexParameterBlock = null;
                
  
        
        public AnnouncementBlock getAnnouncementBlock () {
            return this.announcementBlock;
        }

        public boolean isAnnouncementBlockSelected () {
            return this.announcementBlock != null;
        }

        private void setAnnouncementBlock (AnnouncementBlock value) {
            this.announcementBlock = value;
        }

        
        public void selectAnnouncementBlock (AnnouncementBlock value) {
            this.announcementBlock = value;
            
                    setAnnouncementDigitBlock(null);
                
                    setFlexParameterBlock(null);
                            
        }

        
  
        
        public AnnouncementDigitBlock getAnnouncementDigitBlock () {
            return this.announcementDigitBlock;
        }

        public boolean isAnnouncementDigitBlockSelected () {
            return this.announcementDigitBlock != null;
        }

        private void setAnnouncementDigitBlock (AnnouncementDigitBlock value) {
            this.announcementDigitBlock = value;
        }

        
        public void selectAnnouncementDigitBlock (AnnouncementDigitBlock value) {
            this.announcementDigitBlock = value;
            
                    setAnnouncementBlock(null);
                
                    setFlexParameterBlock(null);
                            
        }

        
  
        
        public FlexParameterBlock getFlexParameterBlock () {
            return this.flexParameterBlock;
        }

        public boolean isFlexParameterBlockSelected () {
            return this.flexParameterBlock != null;
        }

        private void setFlexParameterBlock (FlexParameterBlock value) {
            this.flexParameterBlock = value;
        }

        
        public void selectFlexParameterBlock (FlexParameterBlock value) {
            this.flexParameterBlock = value;
            
                    setAnnouncementBlock(null);
                
                    setAnnouncementDigitBlock(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_StrParameterBlockChoiceType;
        }

        private static IASN1PreparedElementData preparedData_StrParameterBlockChoiceType = CoderFactory.getInstance().newPreparedElementData(StrParameterBlockChoiceType.class);

    }

                
        @ASN1Element ( name = "StrParameterBlock", isOptional =  false , hasTag =  true, tag = 50 , hasDefaultValue =  false  )
    
        private StrParameterBlockChoiceType  value;        

        
        
        public StrParameterBlock () {
        }
        
        
        
        public void setValue(StrParameterBlockChoiceType value) {
            this.value = value;
        }
        
        
        
        public StrParameterBlockChoiceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(StrParameterBlock.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            