
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "IPResourceMeasurement", isSet = false )
    public class IPResourceMeasurement implements IASN1PreparedElement {
            
        @ASN1Element ( name = "resourceEncodingAuthority", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private ResourceEncodingAuthority resourceEncodingAuthority = null;
                
  
        @ASN1Element ( name = "iPResourceType", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private IPResourceType iPResourceType = null;
                
  
        @ASN1Element ( name = "resourceID", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private ResourceID resourceID = null;
                
  
        @ASN1Element ( name = "psitiveAck", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private PositiveAck psitiveAck = null;
                
  
        @ASN1Element ( name = "date", isOptional =  false , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private Date date = null;
                
  
        @ASN1Element ( name = "connectTime", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private ConnectTime connectTime = null;
                
  
        @ASN1Element ( name = "durationTime", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private DurationTime durationTime = null;
                
  
        @ASN1Element ( name = "octetsOfStorage", isOptional =  true , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private OctetsOfStorage octetsOfStorage = null;
                
  
        @ASN1Element ( name = "cPUUsage", isOptional =  true , hasTag =  true, tag = 8 , hasDefaultValue =  false  )
    
	private CPUUsage cPUUsage = null;
                
  
        @ASN1Element ( name = "interactionAccomplished", isOptional =  true , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private InteractionAccomplished interactionAccomplished = null;
                
  
        
        public ResourceEncodingAuthority getResourceEncodingAuthority () {
            return this.resourceEncodingAuthority;
        }

        

        public void setResourceEncodingAuthority (ResourceEncodingAuthority value) {
            this.resourceEncodingAuthority = value;
        }
        
  
        
        public IPResourceType getIPResourceType () {
            return this.iPResourceType;
        }

        

        public void setIPResourceType (IPResourceType value) {
            this.iPResourceType = value;
        }
        
  
        
        public ResourceID getResourceID () {
            return this.resourceID;
        }

        

        public void setResourceID (ResourceID value) {
            this.resourceID = value;
        }
        
  
        
        public PositiveAck getPsitiveAck () {
            return this.psitiveAck;
        }

        

        public void setPsitiveAck (PositiveAck value) {
            this.psitiveAck = value;
        }
        
  
        
        public Date getDate () {
            return this.date;
        }

        

        public void setDate (Date value) {
            this.date = value;
        }
        
  
        
        public ConnectTime getConnectTime () {
            return this.connectTime;
        }

        
        public boolean isConnectTimePresent () {
            return this.connectTime != null;
        }
        

        public void setConnectTime (ConnectTime value) {
            this.connectTime = value;
        }
        
  
        
        public DurationTime getDurationTime () {
            return this.durationTime;
        }

        
        public boolean isDurationTimePresent () {
            return this.durationTime != null;
        }
        

        public void setDurationTime (DurationTime value) {
            this.durationTime = value;
        }
        
  
        
        public OctetsOfStorage getOctetsOfStorage () {
            return this.octetsOfStorage;
        }

        
        public boolean isOctetsOfStoragePresent () {
            return this.octetsOfStorage != null;
        }
        

        public void setOctetsOfStorage (OctetsOfStorage value) {
            this.octetsOfStorage = value;
        }
        
  
        
        public CPUUsage getCPUUsage () {
            return this.cPUUsage;
        }

        
        public boolean isCPUUsagePresent () {
            return this.cPUUsage != null;
        }
        

        public void setCPUUsage (CPUUsage value) {
            this.cPUUsage = value;
        }
        
  
        
        public InteractionAccomplished getInteractionAccomplished () {
            return this.interactionAccomplished;
        }

        
        public boolean isInteractionAccomplishedPresent () {
            return this.interactionAccomplished != null;
        }
        

        public void setInteractionAccomplished (InteractionAccomplished value) {
            this.interactionAccomplished = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(IPResourceMeasurement.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            