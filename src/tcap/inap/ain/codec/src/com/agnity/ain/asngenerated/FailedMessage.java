
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "FailedMessage" )
    public class FailedMessage implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "FailedMessage" , isSet = false )
       public static class FailedMessageSequenceType implements IASN1PreparedElement {
                @ASN1Integer( name = "" )
    
        @ASN1Element ( name = "opCode", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Long opCode = null;
                
  @ASN1OctetString( name = "" )
    
        @ASN1Element ( name = "parameter", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private byte[] parameter = null;
                
  
        @ASN1Element ( name = "invParms", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private InvParms invParms = null;
                
  
        
        public Long getOpCode () {
            return this.opCode;
        }

        

        public void setOpCode (Long value) {
            this.opCode = value;
        }
        
  
        
        public byte[] getParameter () {
            return this.parameter;
        }

        
        public boolean isParameterPresent () {
            return this.parameter != null;
        }
        

        public void setParameter (byte[] value) {
            this.parameter = value;
        }
        
  
        
        public InvParms getInvParms () {
            return this.invParms;
        }

        
        public boolean isInvParmsPresent () {
            return this.invParms != null;
        }
        

        public void setInvParms (InvParms value) {
            this.invParms = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_FailedMessageSequenceType;
        }

       private static IASN1PreparedElementData preparedData_FailedMessageSequenceType = CoderFactory.getInstance().newPreparedElementData(FailedMessageSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "FailedMessage", isOptional =  false , hasTag =  true, tag = 57 , hasDefaultValue =  false  )
    
        private FailedMessageSequenceType  value;        

        
        
        public FailedMessage () {
        }
        
        
        
        public void setValue(FailedMessageSequenceType value) {
            this.value = value;
        }
        
        
        
        public FailedMessageSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(FailedMessage.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            