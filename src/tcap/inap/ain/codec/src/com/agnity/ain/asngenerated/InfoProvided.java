
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "InfoProvided" )
    public class InfoProvided implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "InfoProvided" , isSet = false )
       public static class InfoProvidedSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "activationStateCode", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private ActivationStateCode activationStateCode = null;
                
  
        @ASN1Element ( name = "entireList", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private EntireList entireList = null;
                
  
        @ASN1Element ( name = "memorySlot", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private MemorySlot memorySlot = null;
                
  
        @ASN1Element ( name = "listSize", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private ListSize listSize = null;
                
  
        @ASN1Element ( name = "forwardToDn", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private ForwardToDn forwardToDn = null;
                
  
        @ASN1Element ( name = "delayInterval", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private DelayInterval delayInterval = null;
                
  
        @ASN1Element ( name = "empty", isOptional =  true , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private Empty empty = null;
                
  
        
        public ActivationStateCode getActivationStateCode () {
            return this.activationStateCode;
        }

        
        public boolean isActivationStateCodePresent () {
            return this.activationStateCode != null;
        }
        

        public void setActivationStateCode (ActivationStateCode value) {
            this.activationStateCode = value;
        }
        
  
        
        public EntireList getEntireList () {
            return this.entireList;
        }

        
        public boolean isEntireListPresent () {
            return this.entireList != null;
        }
        

        public void setEntireList (EntireList value) {
            this.entireList = value;
        }
        
  
        
        public MemorySlot getMemorySlot () {
            return this.memorySlot;
        }

        
        public boolean isMemorySlotPresent () {
            return this.memorySlot != null;
        }
        

        public void setMemorySlot (MemorySlot value) {
            this.memorySlot = value;
        }
        
  
        
        public ListSize getListSize () {
            return this.listSize;
        }

        
        public boolean isListSizePresent () {
            return this.listSize != null;
        }
        

        public void setListSize (ListSize value) {
            this.listSize = value;
        }
        
  
        
        public ForwardToDn getForwardToDn () {
            return this.forwardToDn;
        }

        
        public boolean isForwardToDnPresent () {
            return this.forwardToDn != null;
        }
        

        public void setForwardToDn (ForwardToDn value) {
            this.forwardToDn = value;
        }
        
  
        
        public DelayInterval getDelayInterval () {
            return this.delayInterval;
        }

        
        public boolean isDelayIntervalPresent () {
            return this.delayInterval != null;
        }
        

        public void setDelayInterval (DelayInterval value) {
            this.delayInterval = value;
        }
        
  
        
        public Empty getEmpty () {
            return this.empty;
        }

        
        public boolean isEmptyPresent () {
            return this.empty != null;
        }
        

        public void setEmpty (Empty value) {
            this.empty = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_InfoProvidedSequenceType;
        }

       private static IASN1PreparedElementData preparedData_InfoProvidedSequenceType = CoderFactory.getInstance().newPreparedElementData(InfoProvidedSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "InfoProvided", isOptional =  false , hasTag =  true, tag = 100 , hasDefaultValue =  false  )
    
        private InfoProvidedSequenceType  value;        

        
        
        public InfoProvided () {
        }
        
        
        
        public void setValue(InfoProvidedSequenceType value) {
            this.value = value;
        }
        
        
        
        public InfoProvidedSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InfoProvided.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            