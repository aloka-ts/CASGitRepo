
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "PointInCall" )
    public class PointInCall implements IASN1PreparedElement {
                
        

    @ASN1PreparedElement
    @ASN1Enum (
        name = "PointInCallEnumType"
    )
    public static class PointInCallEnumType implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "oNull", hasTag = true , tag = 1 )
            oNull , 
            @ASN1EnumItem ( name = "authorizeOrigAttempt", hasTag = true , tag = 2 )
            authorizeOrigAttempt , 
            @ASN1EnumItem ( name = "collectInformation", hasTag = true , tag = 3 )
            collectInformation , 
            @ASN1EnumItem ( name = "analyzeInformation", hasTag = true , tag = 4 )
            analyzeInformation , 
            @ASN1EnumItem ( name = "selectRoute", hasTag = true , tag = 5 )
            selectRoute , 
            @ASN1EnumItem ( name = "authorizeCallSetup", hasTag = true , tag = 6 )
            authorizeCallSetup , 
            @ASN1EnumItem ( name = "sendCall", hasTag = true , tag = 7 )
            sendCall , 
            @ASN1EnumItem ( name = "oAlerting", hasTag = true , tag = 8 )
            oAlerting , 
            @ASN1EnumItem ( name = "oActive", hasTag = true , tag = 9 )
            oActive , 
            @ASN1EnumItem ( name = "oSuspended", hasTag = true , tag = 10 )
            oSuspended , 
            @ASN1EnumItem ( name = "tNull", hasTag = true , tag = 11 )
            tNull , 
            @ASN1EnumItem ( name = "authorizeTermination", hasTag = true , tag = 12 )
            authorizeTermination , 
            @ASN1EnumItem ( name = "selectFacility", hasTag = true , tag = 13 )
            selectFacility , 
            @ASN1EnumItem ( name = "presentCall", hasTag = true , tag = 14 )
            presentCall , 
            @ASN1EnumItem ( name = "tAlerting", hasTag = true , tag = 15 )
            tAlerting , 
            @ASN1EnumItem ( name = "tActive", hasTag = true , tag = 16 )
            tActive , 
            @ASN1EnumItem ( name = "tSuspended", hasTag = true , tag = 17 )
            tSuspended , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PointInCallEnumType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

    }
                
        @ASN1Element ( name = "PointInCall", isOptional =  false , hasTag =  true, tag = 135 , hasDefaultValue =  false  )
    
        private PointInCallEnumType  value;        

        
        
        public PointInCall () {
        }
        
        
        
        public void setValue(PointInCallEnumType value) {
            this.value = value;
        }
        
        
        
        public PointInCallEnumType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PointInCall.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            