
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "NationalGapInterval" )
    public class NationalGapInterval implements IASN1PreparedElement {
                
        

    @ASN1PreparedElement
    @ASN1Enum (
        name = "NationalGapIntervalEnumType"
    )
    public static class NationalGapIntervalEnumType implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "removeGapControl", hasTag = true , tag = 0 )
            removeGapControl , 
            @ASN1EnumItem ( name = "no0Seconds", hasTag = true , tag = 1 )
            no0Seconds , 
            @ASN1EnumItem ( name = "no010Seconds", hasTag = true , tag = 2 )
            no010Seconds , 
            @ASN1EnumItem ( name = "no025Seconds", hasTag = true , tag = 3 )
            no025Seconds , 
            @ASN1EnumItem ( name = "no050Seconds", hasTag = true , tag = 4 )
            no050Seconds , 
            @ASN1EnumItem ( name = "no1Second", hasTag = true , tag = 5 )
            no1Second , 
            @ASN1EnumItem ( name = "no2Seconds", hasTag = true , tag = 6 )
            no2Seconds , 
            @ASN1EnumItem ( name = "no5Seconds", hasTag = true , tag = 7 )
            no5Seconds , 
            @ASN1EnumItem ( name = "no10Seconds", hasTag = true , tag = 8 )
            no10Seconds , 
            @ASN1EnumItem ( name = "no15Seconds", hasTag = true , tag = 9 )
            no15Seconds , 
            @ASN1EnumItem ( name = "no30Seconds", hasTag = true , tag = 10 )
            no30Seconds , 
            @ASN1EnumItem ( name = "no60Seconds", hasTag = true , tag = 11 )
            no60Seconds , 
            @ASN1EnumItem ( name = "no120Seconds", hasTag = true , tag = 12 )
            no120Seconds , 
            @ASN1EnumItem ( name = "no300Seconds", hasTag = true , tag = 13 )
            no300Seconds , 
            @ASN1EnumItem ( name = "no600Seconds", hasTag = true , tag = 14 )
            no600Seconds , 
            @ASN1EnumItem ( name = "stopAllCalls", hasTag = true , tag = 15 )
            stopAllCalls , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(NationalGapIntervalEnumType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

    }
                
        @ASN1Element ( name = "NationalGapInterval", isOptional =  false , hasTag =  true, tag = 63 , hasDefaultValue =  false  )
    
        private NationalGapIntervalEnumType  value;        

        
        
        public NationalGapInterval () {
        }
        
        
        
        public void setValue(NationalGapIntervalEnumType value) {
            this.value = value;
        }
        
        
        
        public NationalGapIntervalEnumType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(NationalGapInterval.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            