
package com.agnity.ain.T1_660;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//
import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;
@ASN1PreparedElement
@ASN1Sequence(name = "ConnectionControlArg", isSet = true)
public class ConnectionControlArg implements IASN1PreparedElement {
	@ASN1Element(name = "networkRoutingNumber", isOptional = false, hasTag = true, tag = 1, hasDefaultValue = false)
	private Digits networkRoutingNumber = null;
	@ASN1Element(name = "carrierId", isOptional = true, hasTag = true, tag = 4, hasDefaultValue = false)
	private Digits carrierId = null;
	@ASN1Element(name = "billingIndicators", isOptional = true, hasTag = true, tag = 33, tagClass = TagClass.Private, hasDefaultValue = false)
	private Digits billingIndicators = null;
	public Digits getNetworkRoutingNumber() {
		return this.networkRoutingNumber;
	}
	public void setNetworkRoutingNumber(Digits value) {
		this.networkRoutingNumber = value;
	}
	public Digits getCarrierId() {
		return this.carrierId;
	}
	public void setCarrierId(Digits value) {
		this.carrierId = value;
	}
	public Digits getBillingIndicators() {
		return this.billingIndicators;
	}
	public void setBillingIndicators(Digits value) {
		this.billingIndicators = value;
	}
	public void initWithDefaults() {
	}
	private static IASN1PreparedElementData preparedData = CoderFactory.getInstance()
			.newPreparedElementData(ConnectionControlArg.class);
	public IASN1PreparedElementData getPreparedData() {
		return preparedData;
	}
}
