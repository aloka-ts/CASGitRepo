
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "FlexParameterBlockContent" )
    public class FlexParameterBlockContent implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "FlexParameterBlockContent" , isSet = false )
       public static class FlexParameterBlockContentSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "resourceEncodingAuthority", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private ResourceEncodingAuthority resourceEncodingAuthority = null;
                
  
        @ASN1Element ( name = "iPResourceType", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private IPResourceType iPResourceType = null;
                
  
        @ASN1Element ( name = "iPStrParameterBlock", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private IPStrParameterBlock iPStrParameterBlock = null;
                
  
        @ASN1Element ( name = "flashIndication", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private FlashIndication flashIndication = null;
                
  
        
        public ResourceEncodingAuthority getResourceEncodingAuthority () {
            return this.resourceEncodingAuthority;
        }

        

        public void setResourceEncodingAuthority (ResourceEncodingAuthority value) {
            this.resourceEncodingAuthority = value;
        }
        
  
        
        public IPResourceType getIPResourceType () {
            return this.iPResourceType;
        }

        

        public void setIPResourceType (IPResourceType value) {
            this.iPResourceType = value;
        }
        
  
        
        public IPStrParameterBlock getIPStrParameterBlock () {
            return this.iPStrParameterBlock;
        }

        

        public void setIPStrParameterBlock (IPStrParameterBlock value) {
            this.iPStrParameterBlock = value;
        }
        
  
        
        public FlashIndication getFlashIndication () {
            return this.flashIndication;
        }

        
        public boolean isFlashIndicationPresent () {
            return this.flashIndication != null;
        }
        

        public void setFlashIndication (FlashIndication value) {
            this.flashIndication = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_FlexParameterBlockContentSequenceType;
        }

       private static IASN1PreparedElementData preparedData_FlexParameterBlockContentSequenceType = CoderFactory.getInstance().newPreparedElementData(FlexParameterBlockContentSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "FlexParameterBlockContent", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
        private FlexParameterBlockContentSequenceType  value;        

        
        
        public FlexParameterBlockContent () {
        }
        
        
        
        public void setValue(FlexParameterBlockContentSequenceType value) {
            this.value = value;
        }
        
        
        
        public FlexParameterBlockContentSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(FlexParameterBlockContent.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            