
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ResultCause" )
    public class ResultCause implements IASN1PreparedElement {
                
        

    @ASN1PreparedElement
    @ASN1Enum (
        name = "ResultCauseEnumType"
    )
    public static class ResultCauseEnumType implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "confServiceActivated", hasTag = true , tag = 0 )
            confServiceActivated , 
            @ASN1EnumItem ( name = "confServiceDeactivatedorCancelled", hasTag = true , tag = 1 )
            confServiceDeactivatedorCancelled , 
            @ASN1EnumItem ( name = "confAnonymousEntryAdded", hasTag = true , tag = 2 )
            confAnonymousEntryAdded , 
            @ASN1EnumItem ( name = "confPublicEntryAdded", hasTag = true , tag = 3 )
            confPublicEntryAdded , 
            @ASN1EnumItem ( name = "confAnonymousEntryRemoved", hasTag = true , tag = 4 )
            confAnonymousEntryRemoved , 
            @ASN1EnumItem ( name = "confPublicEntryRemoved", hasTag = true , tag = 5 )
            confPublicEntryRemoved , 
            @ASN1EnumItem ( name = "confAllAnonymousEntriesRemoved", hasTag = true , tag = 6 )
            confAllAnonymousEntriesRemoved , 
            @ASN1EnumItem ( name = "confAllEntriesRemoved", hasTag = true , tag = 7 )
            confAllEntriesRemoved , 
            @ASN1EnumItem ( name = "confForwardingDnSet", hasTag = true , tag = 8 )
            confForwardingDnSet , 
            @ASN1EnumItem ( name = "confForwardingDnCleared", hasTag = true , tag = 9 )
            confForwardingDnCleared , 
            @ASN1EnumItem ( name = "confDelayIntervalUpdated", hasTag = true , tag = 10 )
            confDelayIntervalUpdated , 
            @ASN1EnumItem ( name = "confInterdigitTimerOn", hasTag = true , tag = 11 )
            confInterdigitTimerOn , 
            @ASN1EnumItem ( name = "confInterdigitTimerOff", hasTag = true , tag = 12 )
            confInterdigitTimerOff , 
            @ASN1EnumItem ( name = "confDPConverterOn", hasTag = true , tag = 13 )
            confDPConverterOn , 
            @ASN1EnumItem ( name = "confDPConverterOff", hasTag = true , tag = 14 )
            confDPConverterOff , 
            @ASN1EnumItem ( name = "deniedServiceAlreadyActive", hasTag = true , tag = 15 )
            deniedServiceAlreadyActive , 
            @ASN1EnumItem ( name = "deniedServiceNotActivated", hasTag = true , tag = 16 )
            deniedServiceNotActivated , 
            @ASN1EnumItem ( name = "deniedInvalidForwardingDn", hasTag = true , tag = 17 )
            deniedInvalidForwardingDn , 
            @ASN1EnumItem ( name = "deniedPermanentPresentationPrivate", hasTag = true , tag = 18 )
            deniedPermanentPresentationPrivate , 
            @ASN1EnumItem ( name = "deniedPermanentPresentationPublic", hasTag = true , tag = 19 )
            deniedPermanentPresentationPublic , 
            @ASN1EnumItem ( name = "deniedListIsEmpty", hasTag = true , tag = 20 )
            deniedListIsEmpty , 
            @ASN1EnumItem ( name = "deniedListIsFull", hasTag = true , tag = 21 )
            deniedListIsFull , 
            @ASN1EnumItem ( name = "deniedAnonymousDnAlreadyOnList", hasTag = true , tag = 22 )
            deniedAnonymousDnAlreadyOnList , 
            @ASN1EnumItem ( name = "deniedPublicDnAlreadyOnList", hasTag = true , tag = 23 )
            deniedPublicDnAlreadyOnList , 
            @ASN1EnumItem ( name = "deniedNoMatch", hasTag = true , tag = 24 )
            deniedNoMatch , 
            @ASN1EnumItem ( name = "deniedDnNotOnList", hasTag = true , tag = 25 )
            deniedDnNotOnList , 
            @ASN1EnumItem ( name = "deniedIncomingMemorySlotEmpty", hasTag = true , tag = 26 )
            deniedIncomingMemorySlotEmpty , 
            @ASN1EnumItem ( name = "deniedUnsuccessfulUpdate", hasTag = true , tag = 27 )
            deniedUnsuccessfulUpdate , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ResultCauseEnumType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

    }
                
        @ASN1Element ( name = "ResultCause", isOptional =  false , hasTag =  true, tag = 151 , hasDefaultValue =  false  )
    
        private ResultCauseEnumType  value;        

        
        
        public ResultCause () {
        }
        
        
        
        public void setValue(ResultCauseEnumType value) {
            this.value = value;
        }
        
        
        
        public ResultCauseEnumType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ResultCause.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            