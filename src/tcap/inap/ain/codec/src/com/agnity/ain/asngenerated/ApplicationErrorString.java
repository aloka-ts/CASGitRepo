
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ApplicationErrorString" )
    public class ApplicationErrorString implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "ApplicationErrorString" , isSet = false )
       public static class ApplicationErrorStringSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "errorCause", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private ErrorCause errorCause = null;
                
  
        @ASN1Element ( name = "failedMessage", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private FailedMessage failedMessage = null;
                
  
        @ASN1Element ( name = "userID", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private UserID userID = null;
                
  
        
        public ErrorCause getErrorCause () {
            return this.errorCause;
        }

        

        public void setErrorCause (ErrorCause value) {
            this.errorCause = value;
        }
        
  
        
        public FailedMessage getFailedMessage () {
            return this.failedMessage;
        }

        
        public boolean isFailedMessagePresent () {
            return this.failedMessage != null;
        }
        

        public void setFailedMessage (FailedMessage value) {
            this.failedMessage = value;
        }
        
  
        
        public UserID getUserID () {
            return this.userID;
        }

        
        public boolean isUserIDPresent () {
            return this.userID != null;
        }
        

        public void setUserID (UserID value) {
            this.userID = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ApplicationErrorStringSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ApplicationErrorStringSequenceType = CoderFactory.getInstance().newPreparedElementData(ApplicationErrorStringSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "ApplicationErrorString", isOptional =  false , hasTag =  true, tag = 55 , hasDefaultValue =  false  )
    
        private ApplicationErrorStringSequenceType  value;        

        
        
        public ApplicationErrorString () {
        }
        
        
        
        public void setValue(ApplicationErrorStringSequenceType value) {
            this.value = value;
        }
        
        
        
        public ApplicationErrorStringSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ApplicationErrorString.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            