
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "InteractionAccomplished", isSet = false )
    public class InteractionAccomplished implements IASN1PreparedElement {
            
        @ASN1Element ( name = "typeOfInteraction", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private TypeOfInteraction typeOfInteraction = null;
                
  
        @ASN1Element ( name = "function", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private Function function = null;
                
  
        @ASN1Element ( name = "numberOfFunctions", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private NumberOfFunctions numberOfFunctions = null;
                
  
        
        public TypeOfInteraction getTypeOfInteraction () {
            return this.typeOfInteraction;
        }

        

        public void setTypeOfInteraction (TypeOfInteraction value) {
            this.typeOfInteraction = value;
        }
        
  
        
        public Function getFunction () {
            return this.function;
        }

        
        public boolean isFunctionPresent () {
            return this.function != null;
        }
        

        public void setFunction (Function value) {
            this.function = value;
        }
        
  
        
        public NumberOfFunctions getNumberOfFunctions () {
            return this.numberOfFunctions;
        }

        
        public boolean isNumberOfFunctionsPresent () {
            return this.numberOfFunctions != null;
        }
        

        public void setNumberOfFunctions (NumberOfFunctions value) {
            this.numberOfFunctions = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InteractionAccomplished.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            