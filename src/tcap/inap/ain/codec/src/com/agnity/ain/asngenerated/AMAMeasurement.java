
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "AMAMeasurement" )
    public class AMAMeasurement implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "AMAMeasurement" , isSet = false )
       public static class AMAMeasurementSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "aMATimeDuration", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private AMATimeDuration aMATimeDuration = null;
                
  
        @ASN1Element ( name = "aMATimeGuard", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private AMATimeGuard aMATimeGuard = null;
                
  
        
        public AMATimeDuration getAMATimeDuration () {
            return this.aMATimeDuration;
        }

        

        public void setAMATimeDuration (AMATimeDuration value) {
            this.aMATimeDuration = value;
        }
        
  
        
        public AMATimeGuard getAMATimeGuard () {
            return this.aMATimeGuard;
        }

        

        public void setAMATimeGuard (AMATimeGuard value) {
            this.aMATimeGuard = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_AMAMeasurementSequenceType;
        }

       private static IASN1PreparedElementData preparedData_AMAMeasurementSequenceType = CoderFactory.getInstance().newPreparedElementData(AMAMeasurementSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "AMAMeasurement", isOptional =  false , hasTag =  true, tag = 73 , hasDefaultValue =  false  )
    
        private AMAMeasurementSequenceType  value;        

        
        
        public AMAMeasurement () {
        }
        
        
        
        public void setValue(AMAMeasurementSequenceType value) {
            this.value = value;
        }
        
        
        
        public AMAMeasurementSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AMAMeasurement.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            