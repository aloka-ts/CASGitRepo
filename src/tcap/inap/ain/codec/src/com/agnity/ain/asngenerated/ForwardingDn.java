
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "ForwardingDn" )
    public class ForwardingDn implements IASN1PreparedElement {
            
        @ASN1Element ( name = "set", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Set set = null;
                
  
        @ASN1Element ( name = "clear", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private Clear clear = null;
                
  
        
        public Set getSet () {
            return this.set;
        }

        public boolean isSetSelected () {
            return this.set != null;
        }

        private void setSet (Set value) {
            this.set = value;
        }

        
        public void selectSet (Set value) {
            this.set = value;
            
                    setClear(null);
                            
        }

        
  
        
        public Clear getClear () {
            return this.clear;
        }

        public boolean isClearSelected () {
            return this.clear != null;
        }

        private void setClear (Clear value) {
            this.clear = value;
        }

        
        public void selectClear (Clear value) {
            this.clear = value;
            
                    setSet(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ForwardingDn.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            