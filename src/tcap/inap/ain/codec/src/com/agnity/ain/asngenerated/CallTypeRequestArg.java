
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CallTypeRequestArg", isSet = false )
    public class CallTypeRequestArg implements IASN1PreparedElement {
            
        @ASN1Element ( name = "calledPartyID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CalledPartyID calledPartyID = null;
                
  
        @ASN1Element ( name = "callingPartyID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallingPartyID callingPartyID = null;
                
  
        @ASN1Element ( name = "extensionParameter", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ExtensionParameter extensionParameter = null;
                
  
        
        public CalledPartyID getCalledPartyID () {
            return this.calledPartyID;
        }

        

        public void setCalledPartyID (CalledPartyID value) {
            this.calledPartyID = value;
        }
        
  
        
        public CallingPartyID getCallingPartyID () {
            return this.callingPartyID;
        }

        

        public void setCallingPartyID (CallingPartyID value) {
            this.callingPartyID = value;
        }
        
  
        
        public ExtensionParameter getExtensionParameter () {
            return this.extensionParameter;
        }

        
        public boolean isExtensionParameterPresent () {
            return this.extensionParameter != null;
        }
        

        public void setExtensionParameter (ExtensionParameter value) {
            this.extensionParameter = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CallTypeRequestArg.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            