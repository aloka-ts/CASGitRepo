
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "NetworkTestDesignator" )
    public class NetworkTestDesignator implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "NetworkTestDesignator" , isSet = false )
       public static class NetworkTestDesignatorSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "ntdID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private NtdID ntdID = null;
                
  
        @ASN1Element ( name = "amp1", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Amp1 amp1 = null;
                
  
        @ASN1Element ( name = "amp2", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Amp2 amp2 = null;
                
  
        
        public NtdID getNtdID () {
            return this.ntdID;
        }

        

        public void setNtdID (NtdID value) {
            this.ntdID = value;
        }
        
  
        
        public Amp1 getAmp1 () {
            return this.amp1;
        }

        
        public boolean isAmp1Present () {
            return this.amp1 != null;
        }
        

        public void setAmp1 (Amp1 value) {
            this.amp1 = value;
        }
        
  
        
        public Amp2 getAmp2 () {
            return this.amp2;
        }

        
        public boolean isAmp2Present () {
            return this.amp2 != null;
        }
        

        public void setAmp2 (Amp2 value) {
            this.amp2 = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_NetworkTestDesignatorSequenceType;
        }

       private static IASN1PreparedElementData preparedData_NetworkTestDesignatorSequenceType = CoderFactory.getInstance().newPreparedElementData(NetworkTestDesignatorSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "NetworkTestDesignator", isOptional =  false , hasTag =  true, tag = 97 , hasDefaultValue =  false  )
    
        private NetworkTestDesignatorSequenceType  value;        

        
        
        public NetworkTestDesignator () {
        }
        
        
        
        public void setValue(NetworkTestDesignatorSequenceType value) {
            this.value = value;
        }
        
        
        
        public NetworkTestDesignatorSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(NetworkTestDesignator.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            