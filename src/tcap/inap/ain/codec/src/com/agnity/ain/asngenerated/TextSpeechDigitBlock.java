
package com.agnity.ain.asngenerated;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "TextSpeechDigitBlock", isSet = false )
    public class TextSpeechDigitBlock implements IASN1PreparedElement {
            
        @ASN1Element ( name = "maximumDigits", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private MaximumDigits maximumDigits = null;
                
  
@ASN1SequenceOf( name = "textElement", isSetOf = false ) 

    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 10L 
		
	   )
	   
        @ASN1Element ( name = "textElement", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private java.util.Collection<TextElement>  textElement = null;
                
  
        @ASN1Element ( name = "dTMFKeyMap", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private DTMFKeyMap dTMFKeyMap = null;
                
  
        @ASN1Element ( name = "iPResourceMeasure", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private IPResourceMeasure iPResourceMeasure = null;
                
  
        @ASN1Element ( name = "iPStayOnLine", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private IPStayOnLine iPStayOnLine = null;
                
  
        
        public MaximumDigits getMaximumDigits () {
            return this.maximumDigits;
        }

        

        public void setMaximumDigits (MaximumDigits value) {
            this.maximumDigits = value;
        }
        
  
        
        public java.util.Collection<TextElement>  getTextElement () {
            return this.textElement;
        }

        

        public void setTextElement (java.util.Collection<TextElement>  value) {
            this.textElement = value;
        }
        
  
        
        public DTMFKeyMap getDTMFKeyMap () {
            return this.dTMFKeyMap;
        }

        
        public boolean isDTMFKeyMapPresent () {
            return this.dTMFKeyMap != null;
        }
        

        public void setDTMFKeyMap (DTMFKeyMap value) {
            this.dTMFKeyMap = value;
        }
        
  
        
        public IPResourceMeasure getIPResourceMeasure () {
            return this.iPResourceMeasure;
        }

        
        public boolean isIPResourceMeasurePresent () {
            return this.iPResourceMeasure != null;
        }
        

        public void setIPResourceMeasure (IPResourceMeasure value) {
            this.iPResourceMeasure = value;
        }
        
  
        
        public IPStayOnLine getIPStayOnLine () {
            return this.iPStayOnLine;
        }

        
        public boolean isIPStayOnLinePresent () {
            return this.iPStayOnLine != null;
        }
        

        public void setIPStayOnLine (IPStayOnLine value) {
            this.iPStayOnLine = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(TextSpeechDigitBlock.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            